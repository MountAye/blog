{"pageProps":{"metadata":{"date":"2019-02-07","title":".py | 转载：为什么俺推荐 Python[2]·作为动态语言的 Python","filename":"2019-02-07-RP-why-choose-python-2-dynamic.md","url":"RP-why-choose-python-2-dynamic","layout":"post","keywords":["html","py"],"author":"编程随想","excerpt":"今天主要是忽悠一下动态语言，捎带忽悠一下 Python。如果你看完本贴，觉得动态语言不错，那俺建议你从 Python 开始入手。","categories":"post","milestoneID":2},"mdAst":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"文章目录","position":{"start":{"line":2,"column":5,"offset":6},"end":{"line":2,"column":9,"offset":10}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":9,"offset":10}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#overview","children":[{"type":"text","value":"动态语言扫盲","position":{"start":{"line":4,"column":4,"offset":17},"end":{"line":4,"column":10,"offset":23}}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":22,"offset":35}}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":22,"offset":35}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":22,"offset":35}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#whyDynamic","children":[{"type":"text","value":"为啥要学习动态语言？","position":{"start":{"line":5,"column":4,"offset":40},"end":{"line":5,"column":14,"offset":50}}}],"position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":28,"offset":64}}}],"position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":28,"offset":64}}}],"position":{"start":{"line":5,"column":1,"offset":37},"end":{"line":5,"column":28,"offset":64}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#whyPython","children":[{"type":"text","value":"为什么是 Python？","position":{"start":{"line":6,"column":4,"offset":69},"end":{"line":6,"column":16,"offset":81}}}],"position":{"start":{"line":6,"column":3,"offset":68},"end":{"line":6,"column":29,"offset":94}}}],"position":{"start":{"line":6,"column":3,"offset":68},"end":{"line":6,"column":29,"offset":94}}}],"position":{"start":{"line":6,"column":1,"offset":66},"end":{"line":6,"column":29,"offset":94}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"#summary","children":[{"type":"text","value":"总结","position":{"start":{"line":7,"column":4,"offset":99},"end":{"line":7,"column":6,"offset":101}}}],"position":{"start":{"line":7,"column":3,"offset":98},"end":{"line":7,"column":17,"offset":112}}}],"position":{"start":{"line":7,"column":3,"offset":98},"end":{"line":7,"column":17,"offset":112}}}],"position":{"start":{"line":7,"column":1,"offset":96},"end":{"line":7,"column":17,"offset":112}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":7,"column":17,"offset":112}}},{"type":"paragraph","children":[{"type":"text","value":"上一篇帖子介绍了脚本语言的优缺点，然后又拿 Python 和其它脚本语言PK了一下。今天主要是忽悠一下动态语言，捎带忽悠一下 Python。如果你看完本贴，觉得动态语言不错，那俺建议你从 Python 开始入手。","position":{"start":{"line":9,"column":1,"offset":116},"end":{"line":9,"column":107,"offset":222}}}],"position":{"start":{"line":9,"column":1,"offset":116},"end":{"line":9,"column":107,"offset":222}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"动态语言扫盲","position":{"start":{"line":11,"column":3,"offset":228},"end":{"line":11,"column":9,"offset":234}}},{"type":"html","value":"<a name=\"overview\">","position":{"start":{"line":11,"column":9,"offset":234},"end":{"line":11,"column":28,"offset":253}}},{"type":"html","value":"</a>","position":{"start":{"line":11,"column":28,"offset":253},"end":{"line":11,"column":32,"offset":257}}}],"position":{"start":{"line":11,"column":1,"offset":226},"end":{"line":11,"column":32,"offset":257}}},{"type":"paragraph","children":[{"type":"text","value":"考虑到还有很多同学对动态语言了解不深入，有必要先来普及一下它的基本常识。已经了解的同学，请略过本节。","position":{"start":{"line":13,"column":1,"offset":261},"end":{"line":13,"column":51,"offset":311}}}],"position":{"start":{"line":13,"column":1,"offset":261},"end":{"line":13,"column":51,"offset":311}}},{"type":"paragraph","children":[{"type":"text","value":"通俗地说：能够在运行时修改自身程序结构的语言，就属于动态语言。那怎样才算是“运行时修改自身程序结构”捏？比如下面这几个例子都 算：在【运行时】给某个类增加成员函数及成员变量；在【运行时】改变某个类的父类；在【运行时】创建出某个函数......","position":{"start":{"line":15,"column":1,"offset":315},"end":{"line":15,"column":122,"offset":436}}}],"position":{"start":{"line":15,"column":1,"offset":315},"end":{"line":15,"column":122,"offset":436}}},{"type":"paragraph","children":[{"type":"text","value":"从这些例子，你应该对动态语言有一个初步的感觉了吧？毕竟传统的静态语言（比如C、C++、Java），是很难达到这些效果滴。","position":{"start":{"line":17,"column":1,"offset":440},"end":{"line":17,"column":61,"offset":500}}}],"position":{"start":{"line":17,"column":1,"offset":440},"end":{"line":17,"column":61,"offset":500}}},{"type":"paragraph","children":[{"type":"text","value":"另外，有个误区需要澄清一下。很多同学以为脚本语言也就是动态语言。其实两者是不等价滴——虽然两者有很大的交集。比如 C# 在4.0之后，就可以算是动态语言了，但它不能算是脚本语言；另外，有很多 Shell 脚本语言（比如 DOS & Windows 下的 bat），不能算是动态语言。","position":{"start":{"line":19,"column":1,"offset":504},"end":{"line":19,"column":142,"offset":645}}}],"position":{"start":{"line":19,"column":1,"offset":504},"end":{"line":19,"column":142,"offset":645}}},{"type":"paragraph","children":[{"type":"text","value":"关于动态语言更深入的介绍，大伙儿可以看“这里”。","position":{"start":{"line":21,"column":1,"offset":649},"end":{"line":21,"column":25,"offset":673}}}],"position":{"start":{"line":21,"column":1,"offset":649},"end":{"line":21,"column":25,"offset":673}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"为啥要学习动态语言？","position":{"start":{"line":23,"column":3,"offset":679},"end":{"line":23,"column":13,"offset":689}}},{"type":"html","value":"<a name=\"whyDynamic\">","position":{"start":{"line":23,"column":13,"offset":689},"end":{"line":23,"column":34,"offset":710}}},{"type":"html","value":"</a>","position":{"start":{"line":23,"column":34,"offset":710},"end":{"line":23,"column":38,"offset":714}}}],"position":{"start":{"line":23,"column":1,"offset":677},"end":{"line":23,"column":38,"offset":714}}},{"type":"paragraph","children":[{"type":"text","value":"扫盲之后，就该来说一下，学习动态语言的动机了。搞明白动机，学起来才有干劲嘛 :-)","position":{"start":{"line":25,"column":1,"offset":718},"end":{"line":25,"column":42,"offset":759}}}],"position":{"start":{"line":25,"column":1,"offset":718},"end":{"line":25,"column":42,"offset":759}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"顺应大趋势","position":{"start":{"line":27,"column":4,"offset":766},"end":{"line":27,"column":9,"offset":771}}}],"position":{"start":{"line":27,"column":1,"offset":763},"end":{"line":27,"column":9,"offset":771}}},{"type":"paragraph","children":[{"type":"text","value":"假如你经常关注 TIOBE 的排名，那你应该能察觉出来，动态语言近两年的发展势头比较迅猛（在 Top10 里面，至少占了半壁江山）。这能从某个侧面反映出动态语言的影响力在扩大。","position":{"start":{"line":29,"column":1,"offset":775},"end":{"line":29,"column":89,"offset":863}}}],"position":{"start":{"line":29,"column":1,"offset":775},"end":{"line":29,"column":89,"offset":863}}},{"type":"paragraph","children":[{"type":"text","value":"假使你不相信 TIOBE 的排名，俺再举一个例子。两大开发阵营（Java 和 dotNet）最近几年也加大了对动态语言的支持力度。比如，dotNet 的 CLR 加入了对IronPython 和 IronRuby 的支持；Sun 当然也不甘示弱，JVM 也开始支持 Groovy，JRuby 等语言。","position":{"start":{"line":31,"column":1,"offset":867},"end":{"line":31,"column":151,"offset":1017}}}],"position":{"start":{"line":31,"column":1,"offset":867},"end":{"line":31,"column":151,"offset":1017}}},{"type":"paragraph","children":[{"type":"text","value":"俺费了这许多口水，列位看官应该明白动态语言是大势所趋吧。在这动态语言大行其道的日子里，你如果连一门动态语言都没搞懂，那出门都不好意思跟人打招呼。","position":{"start":{"line":33,"column":1,"offset":1021},"end":{"line":33,"column":73,"offset":1093}}}],"position":{"start":{"line":33,"column":1,"offset":1021},"end":{"line":33,"column":73,"offset":1093}}},{"type":"paragraph","children":[{"type":"text","value":"不过，话又说回来，静态语言也是不会消亡滴。毕竟，静态语言有自己的优势（比如严谨、性能）。长期来说，必定是动态语言和静态语言并存。各自弥补对方的缺点。","position":{"start":{"line":35,"column":1,"offset":1097},"end":{"line":35,"column":75,"offset":1171}}}],"position":{"start":{"line":35,"column":1,"offset":1097},"end":{"line":35,"column":75,"offset":1171}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"了解新思维、新理念","position":{"start":{"line":37,"column":4,"offset":1178},"end":{"line":37,"column":13,"offset":1187}}}],"position":{"start":{"line":37,"column":1,"offset":1175},"end":{"line":37,"column":13,"offset":1187}}},{"type":"paragraph","children":[{"type":"text","value":"学习一门动态语言还有一个好处：有很多时候，多学习一门语言，并不一定是为了在工作中用它，而是为了学习新的思维方式、体会新的理念。比如俺就曾经花时间去看 Prolog，但是俺在工作中，从来不需要用到它。（以后有空的话，俺会介绍一下这玩意儿）","position":{"start":{"line":39,"column":1,"offset":1191},"end":{"line":39,"column":119,"offset":1309}}}],"position":{"start":{"line":39,"column":1,"offset":1191},"end":{"line":39,"column":119,"offset":1309}}},{"type":"paragraph","children":[{"type":"text","value":"由于动态语言可以在运行时修改自身结构，因此就会产生很多静态语言所没有编程范式和手法（比如 eval、Mixin）。如果你以前只使用静态语言，那你在学习了动态语言之后，多半会从它身上领略到很多新的思想和理念。","position":{"start":{"line":41,"column":1,"offset":1313},"end":{"line":41,"column":104,"offset":1416}}}],"position":{"start":{"line":41,"column":1,"offset":1313},"end":{"line":41,"column":104,"offset":1416}}},{"type":"paragraph","children":[{"type":"text","value":"（关于 eval 的招数，俺后来写了一篇《再举几个动态语言 eval 手法的例子》）","position":{"start":{"line":43,"column":1,"offset":1420},"end":{"line":43,"column":43,"offset":1462}}}],"position":{"start":{"line":43,"column":1,"offset":1420},"end":{"line":43,"column":43,"offset":1462}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"能够化繁为简","position":{"start":{"line":45,"column":4,"offset":1469},"end":{"line":45,"column":10,"offset":1475}}}],"position":{"start":{"line":45,"column":1,"offset":1466},"end":{"line":45,"column":10,"offset":1475}}},{"type":"paragraph","children":[{"type":"text","value":"可能有些同学觉得，前面说的都有些务虚，那咱再来说点具体实在的。大牛 Edsger Dijkstra（图灵奖得主）曾经说过：编程的艺术就是处理复杂性的艺术。咱们来看看，动态语言是如何处理复杂问题滴。","position":{"start":{"line":47,"column":1,"offset":1479},"end":{"line":47,"column":99,"offset":1577}}}],"position":{"start":{"line":47,"column":1,"offset":1479},"end":{"line":47,"column":99,"offset":1577}}},{"type":"paragraph","children":[{"type":"text","value":"假设要你实现一个函数，用来完成两个数的“某种运算”，具体的运算类型作为函数的参数传入，然后该函数返回运算结果。比如：","position":{"start":{"line":49,"column":1,"offset":1581},"end":{"line":49,"column":59,"offset":1639}}}],"position":{"start":{"line":49,"column":1,"offset":1581},"end":{"line":49,"column":59,"offset":1639}}},{"type":"code","lang":"python","meta":null,"value":"\r\nFoo(\"+\", 2, 4)  # 返回 6\r\nFoo(\"*\", 3, 5)  # 返回 15\r\n","position":{"start":{"line":51,"column":1,"offset":1643},"end":{"line":56,"column":4,"offset":1710}}},{"type":"paragraph","children":[{"type":"text","value":"对于上述需求，你会如何实现捏？","position":{"start":{"line":58,"column":1,"offset":1714},"end":{"line":58,"column":16,"offset":1729}}}],"position":{"start":{"line":58,"column":1,"offset":1714},"end":{"line":58,"column":16,"offset":1729}}},{"type":"paragraph","children":[{"type":"text","value":"请先暗自盘算一柱香的功夫，然后再往下看。","position":{"start":{"line":60,"column":1,"offset":1733},"end":{"line":60,"column":21,"offset":1753}}}],"position":{"start":{"line":60,"column":1,"offset":1733},"end":{"line":60,"column":21,"offset":1753}}},{"type":"paragraph","children":[{"type":"text","value":"．．．．．．","position":{"start":{"line":62,"column":1,"offset":1757},"end":{"line":62,"column":7,"offset":1763}}}],"position":{"start":{"line":62,"column":1,"offset":1757},"end":{"line":62,"column":7,"offset":1763}}},{"type":"paragraph","children":[{"type":"text","value":"Ｔｈｉｎｋｉｎｇ","position":{"start":{"line":64,"column":1,"offset":1767},"end":{"line":64,"column":9,"offset":1775}}}],"position":{"start":{"line":64,"column":1,"offset":1767},"end":{"line":64,"column":9,"offset":1775}}},{"type":"paragraph","children":[{"type":"text","value":"．．．．．．","position":{"start":{"line":66,"column":1,"offset":1779},"end":{"line":66,"column":7,"offset":1785}}}],"position":{"start":{"line":66,"column":1,"offset":1779},"end":{"line":66,"column":7,"offset":1785}}},{"type":"paragraph","children":[{"type":"text","value":"如果你用静态语言（比如 C、C++、Java）来实现，你可能会在函数内使用一个 switch，根据不同的运算符，进行计算，然后返回计算结果。","position":{"start":{"line":68,"column":1,"offset":1789},"end":{"line":68,"column":71,"offset":1859}}}],"position":{"start":{"line":68,"column":1,"offset":1789},"end":{"line":68,"column":71,"offset":1859}}},{"type":"paragraph","children":[{"type":"text","value":"对于某些比较 ＯＯ 的语言（例如 C++、Java），你或许还会抽象出一个运算的接口类（纯虚类），然后分别派生出若干个不同的计算类（比如加法类、乘法类），看起来似乎比 switch 要优雅一些。","position":{"start":{"line":70,"column":1,"offset":1863},"end":{"line":70,"column":98,"offset":1960}}}],"position":{"start":{"line":70,"column":1,"offset":1863},"end":{"line":70,"column":98,"offset":1960}}},{"type":"paragraph","children":[{"type":"text","value":"当然，用静态语言还有其它一些玩法，但是代码量都不会少。具体详情可以看很早以前的一个老故事：《4个程序员的一天》。（其实俺这个例子的灵感就是从那个老故事剽窃滴）","position":{"start":{"line":72,"column":1,"offset":1964},"end":{"line":72,"column":80,"offset":2043}}}],"position":{"start":{"line":72,"column":1,"offset":1964},"end":{"line":72,"column":80,"offset":2043}}},{"type":"paragraph","children":[{"type":"text","value":"现在，咱们来看看 Python 是如何【优雅地】实现该需求滴。用 Python 只需要【两行代码】即可。请看：","position":{"start":{"line":74,"column":1,"offset":2047},"end":{"line":74,"column":56,"offset":2102}}}],"position":{"start":{"line":74,"column":1,"offset":2047},"end":{"line":74,"column":56,"offset":2102}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef Foo(op, n1, n2) :\r\n    return eval( \"%d %s %d\" % (n1, op, n2) )\r\n","position":{"start":{"line":76,"column":1,"offset":2106},"end":{"line":81,"column":4,"offset":2193}}},{"type":"paragraph","children":[{"type":"text","value":"不懂 Python 的同学可能要问了，这两行代码是啥子意思呀？","position":{"start":{"line":83,"column":1,"offset":2197},"end":{"line":83,"column":32,"offset":2228}}}],"position":{"start":{"line":83,"column":1,"offset":2197},"end":{"line":83,"column":32,"offset":2228}}},{"type":"paragraph","children":[{"type":"text","value":"其实，第一行代码只不过是定义了一个函数头，第2行代码才是精华。这里面利用了动态语言常见的 eval 手法（具体参见“这里”）。在 python 里面，内置的 eval 函数可以把某个字符串当成一个表达式，并对其求值。而语句 \"%d %s %d\" % (n1, op, n2) 只不过格式化出一个表达式的字符串。","position":{"start":{"line":85,"column":1,"offset":2232},"end":{"line":85,"column":156,"offset":2387}}}],"position":{"start":{"line":85,"column":1,"offset":2232},"end":{"line":85,"column":156,"offset":2387}}},{"type":"paragraph","children":[{"type":"text","value":"顺便再插一句，Python 还有一个 exec 的内置函数，可以把一段 Python 源代码作为字符串参数传递给它，让该函数去执行。两个函数结合起来，就能玩出很多花样。具体的花样可以参见“这篇博文”。","position":{"start":{"line":87,"column":1,"offset":2391},"end":{"line":87,"column":101,"offset":2491}}}],"position":{"start":{"line":87,"column":1,"offset":2391},"end":{"line":87,"column":101,"offset":2491}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"为什么是 Python？","position":{"start":{"line":89,"column":3,"offset":2497},"end":{"line":89,"column":15,"offset":2509}}},{"type":"html","value":"<a name=\"whyPython\">","position":{"start":{"line":89,"column":15,"offset":2509},"end":{"line":89,"column":35,"offset":2529}}},{"type":"html","value":"</a>","position":{"start":{"line":89,"column":35,"offset":2529},"end":{"line":89,"column":39,"offset":2533}}}],"position":{"start":{"line":89,"column":1,"offset":2495},"end":{"line":89,"column":39,"offset":2533}}},{"type":"paragraph","children":[{"type":"text","value":"说了动态语言的种种好话，有同学会问了，动态语言有很多种，为啥非要学习 Python 捏？","position":{"start":{"line":91,"column":1,"offset":2537},"end":{"line":91,"column":45,"offset":2581}}}],"position":{"start":{"line":91,"column":1,"offset":2537},"end":{"line":91,"column":45,"offset":2581}}},{"type":"paragraph","children":[{"type":"text","value":"首先，俺在本系列的第1篇帖子，已经对比过 Python 和另外几种脚本语言。那几种“脚本语言”碰巧也是知名的“动态语言”。Python 相对于他们的优势，此处就不再重复啰嗦了。","position":{"start":{"line":93,"column":1,"offset":2585},"end":{"line":93,"column":89,"offset":2673}}}],"position":{"start":{"line":93,"column":1,"offset":2585},"end":{"line":93,"column":89,"offset":2673}}},{"type":"paragraph","children":[{"type":"text","value":"其次，单就语法本身而言，Python 的语法对动态性的支持是很优雅、很简洁滴。通过刚才那个 eval 小例子，大伙应该已经看出来了。为了更形象一点，咱拿前面提到的 Mixin 来 Show 一下 Python 的语法是如何的简洁。","position":{"start":{"line":95,"column":1,"offset":2677},"end":{"line":95,"column":116,"offset":2792}}}],"position":{"start":{"line":95,"column":1,"offset":2677},"end":{"line":95,"column":116,"offset":2792}}},{"type":"paragraph","children":[{"type":"text","value":"通俗地说，Mixin 手法需要在【运行时】给某个类增加基类（也就是父类）。对于 Python 而言，每一个类都有一个内置属性 ","position":{"start":{"line":97,"column":1,"offset":2796},"end":{"line":97,"column":64,"offset":2859}}},{"type":"strong","children":[{"type":"text","value":"bases","position":{"start":{"line":97,"column":66,"offset":2861},"end":{"line":97,"column":71,"offset":2866}}}],"position":{"start":{"line":97,"column":64,"offset":2859},"end":{"line":97,"column":73,"offset":2868}}},{"type":"text","value":"，里面包含这个类【当前】的所有基类。假如要在【运行时】增加基类，只需操作 ","position":{"start":{"line":97,"column":73,"offset":2868},"end":{"line":97,"column":110,"offset":2905}}},{"type":"strong","children":[{"type":"text","value":"bases","position":{"start":{"line":97,"column":112,"offset":2907},"end":{"line":97,"column":117,"offset":2912}}}],"position":{"start":{"line":97,"column":110,"offset":2905},"end":{"line":97,"column":119,"offset":2914}}},{"type":"text","value":" 这个属性即可。","position":{"start":{"line":97,"column":119,"offset":2914},"end":{"line":97,"column":127,"offset":2922}}}],"position":{"start":{"line":97,"column":1,"offset":2796},"end":{"line":97,"column":127,"offset":2922}}},{"type":"paragraph","children":[{"type":"text","value":"比如有一个类 A 和类 B。如果要在运行时把 B 加为 A 的父类，可以用如下语句：\r\nA.","position":{"start":{"line":99,"column":1,"offset":2926},"end":{"line":100,"column":3,"offset":2972}}},{"type":"strong","children":[{"type":"text","value":"bases","position":{"start":{"line":100,"column":5,"offset":2974},"end":{"line":100,"column":10,"offset":2979}}}],"position":{"start":{"line":100,"column":3,"offset":2972},"end":{"line":100,"column":12,"offset":2981}}},{"type":"text","value":" += (B,)","position":{"start":{"line":100,"column":12,"offset":2981},"end":{"line":100,"column":20,"offset":2989}}}],"position":{"start":{"line":99,"column":1,"offset":2926},"end":{"line":100,"column":20,"offset":2989}}},{"type":"paragraph","children":[{"type":"text","value":"是不是也很简洁，而且可读性也不差？相比而言，有些动态语言（比如 JavaScript），要实现类似的效果，代码就相对复杂了。","position":{"start":{"line":102,"column":1,"offset":2993},"end":{"line":102,"column":63,"offset":3055}}}],"position":{"start":{"line":102,"column":1,"offset":2993},"end":{"line":102,"column":63,"offset":3055}}},{"type":"paragraph","children":[{"type":"text","value":"由于 Mixin 不是今天的重点，就不再深入展开了。","position":{"start":{"line":104,"column":1,"offset":3059},"end":{"line":104,"column":27,"offset":3085}}}],"position":{"start":{"line":104,"column":1,"offset":3059},"end":{"line":104,"column":27,"offset":3085}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"总结","position":{"start":{"line":107,"column":3,"offset":3093},"end":{"line":107,"column":5,"offset":3095}}},{"type":"html","value":"<a name=\"summary\">","position":{"start":{"line":107,"column":5,"offset":3095},"end":{"line":107,"column":23,"offset":3113}}},{"type":"html","value":"</a>","position":{"start":{"line":107,"column":23,"offset":3113},"end":{"line":107,"column":27,"offset":3117}}}],"position":{"start":{"line":107,"column":1,"offset":3091},"end":{"line":107,"column":27,"offset":3117}}},{"type":"paragraph","children":[{"type":"text","value":"最后，来个总结发言：如果你之前没有接触过动态语言，建议去学习一下；如果你已经打定主意要学，Python 是比较好的候选者。","position":{"start":{"line":110,"column":1,"offset":3123},"end":{"line":110,"column":62,"offset":3184}}}],"position":{"start":{"line":110,"column":1,"offset":3123},"end":{"line":110,"column":62,"offset":3184}}},{"type":"paragraph","children":[{"type":"text","value":"好了，今天就聊到这里。下一个帖子，咱们来讲讲 Python 作为一个纯粹的面向对象语言，有些啥特色。","position":{"start":{"line":112,"column":1,"offset":3188},"end":{"line":112,"column":51,"offset":3238}}}],"position":{"start":{"line":112,"column":1,"offset":3188},"end":{"line":112,"column":51,"offset":3238}}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"RP-why-choose-python-0-overview","children":[{"type":"text","value":"回到本系列的目录","position":{"start":{"line":114,"column":2,"offset":3243},"end":{"line":114,"column":10,"offset":3251}}}],"position":{"start":{"line":114,"column":1,"offset":3242},"end":{"line":114,"column":44,"offset":3285}}}],"position":{"start":{"line":114,"column":1,"offset":3242},"end":{"line":114,"column":44,"offset":3285}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"版权声明","position":{"start":{"line":116,"column":5,"offset":3293},"end":{"line":116,"column":9,"offset":3297}}}],"position":{"start":{"line":116,"column":3,"offset":3291},"end":{"line":116,"column":11,"offset":3299}}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":11,"offset":3299},"end":{"line":116,"column":15,"offset":3303}}},{"type":"text","value":"\r\n本博客（编程随想的博客）所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者编程随想和本文原始地址：","position":{"start":{"line":116,"column":15,"offset":3303},"end":{"line":117,"column":71,"offset":3375}}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":71,"offset":3375},"end":{"line":117,"column":75,"offset":3379}}},{"type":"text","value":"\r\n","position":{"start":{"line":117,"column":75,"offset":3379},"end":{"line":118,"column":1,"offset":3381}}},{"type":"link","title":null,"url":"https://program-think.blogspot.com/2009/08/why-choose-python-2-dynamic.html","children":[{"type":"text","value":" https://program-think.blogspot.com/2009/08/why-choose-python-2-dynamic.html ","position":{"start":{"line":118,"column":4,"offset":3384},"end":{"line":118,"column":81,"offset":3461}}}],"position":{"start":{"line":118,"column":3,"offset":3383},"end":{"line":118,"column":159,"offset":3539}}}],"position":{"start":{"line":116,"column":3,"offset":3291},"end":{"line":118,"column":159,"offset":3539}}}],"position":{"start":{"line":116,"column":1,"offset":3289},"end":{"line":118,"column":159,"offset":3539}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":118,"column":159,"offset":3539}}},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{"id":"文章目录"},"children":[{"type":"element","tagName":"a","properties":{"href":"#文章目录"},"children":[{"type":"text","value":"文章目录","position":{"start":{"line":2,"column":5,"offset":6},"end":{"line":2,"column":9,"offset":10}}}]}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":9,"offset":10}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#overview"},"children":[{"type":"text","value":"动态语言扫盲","position":{"start":{"line":4,"column":4,"offset":17},"end":{"line":4,"column":10,"offset":23}}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":22,"offset":35}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":22,"offset":35}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#whyDynamic"},"children":[{"type":"text","value":"为啥要学习动态语言？","position":{"start":{"line":5,"column":4,"offset":40},"end":{"line":5,"column":14,"offset":50}}}],"position":{"start":{"line":5,"column":3,"offset":39},"end":{"line":5,"column":28,"offset":64}}}],"position":{"start":{"line":5,"column":1,"offset":37},"end":{"line":5,"column":28,"offset":64}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#whyPython"},"children":[{"type":"text","value":"为什么是 Python？","position":{"start":{"line":6,"column":4,"offset":69},"end":{"line":6,"column":16,"offset":81}}}],"position":{"start":{"line":6,"column":3,"offset":68},"end":{"line":6,"column":29,"offset":94}}}],"position":{"start":{"line":6,"column":1,"offset":66},"end":{"line":6,"column":29,"offset":94}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#summary"},"children":[{"type":"text","value":"总结","position":{"start":{"line":7,"column":4,"offset":99},"end":{"line":7,"column":6,"offset":101}}}],"position":{"start":{"line":7,"column":3,"offset":98},"end":{"line":7,"column":17,"offset":112}}}],"position":{"start":{"line":7,"column":1,"offset":96},"end":{"line":7,"column":17,"offset":112}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":7,"column":17,"offset":112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上一篇帖子介绍了脚本语言的优缺点，然后又拿 Python 和其它脚本语言PK了一下。今天主要是忽悠一下动态语言，捎带忽悠一下 Python。如果你看完本贴，觉得动态语言不错，那俺建议你从 Python 开始入手。","position":{"start":{"line":9,"column":1,"offset":116},"end":{"line":9,"column":107,"offset":222}}}],"position":{"start":{"line":9,"column":1,"offset":116},"end":{"line":9,"column":107,"offset":222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"动态语言扫盲"},"children":[{"type":"element","tagName":"a","properties":{"href":"#动态语言扫盲"},"children":[{"type":"text","value":"动态语言扫盲","position":{"start":{"line":11,"column":3,"offset":228},"end":{"line":11,"column":9,"offset":234}}}]}],"position":{"start":{"line":11,"column":1,"offset":226},"end":{"line":11,"column":32,"offset":257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"考虑到还有很多同学对动态语言了解不深入，有必要先来普及一下它的基本常识。已经了解的同学，请略过本节。","position":{"start":{"line":13,"column":1,"offset":261},"end":{"line":13,"column":51,"offset":311}}}],"position":{"start":{"line":13,"column":1,"offset":261},"end":{"line":13,"column":51,"offset":311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通俗地说：能够在运行时修改自身程序结构的语言，就属于动态语言。那怎样才算是“运行时修改自身程序结构”捏？比如下面这几个例子都 算：在【运行时】给某个类增加成员函数及成员变量；在【运行时】改变某个类的父类；在【运行时】创建出某个函数......","position":{"start":{"line":15,"column":1,"offset":315},"end":{"line":15,"column":122,"offset":436}}}],"position":{"start":{"line":15,"column":1,"offset":315},"end":{"line":15,"column":122,"offset":436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从这些例子，你应该对动态语言有一个初步的感觉了吧？毕竟传统的静态语言（比如C、C++、Java），是很难达到这些效果滴。","position":{"start":{"line":17,"column":1,"offset":440},"end":{"line":17,"column":61,"offset":500}}}],"position":{"start":{"line":17,"column":1,"offset":440},"end":{"line":17,"column":61,"offset":500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外，有个误区需要澄清一下。很多同学以为脚本语言也就是动态语言。其实两者是不等价滴——虽然两者有很大的交集。比如 C# 在4.0之后，就可以算是动态语言了，但它不能算是脚本语言；另外，有很多 Shell 脚本语言（比如 DOS & Windows 下的 bat），不能算是动态语言。","position":{"start":{"line":19,"column":1,"offset":504},"end":{"line":19,"column":142,"offset":645}}}],"position":{"start":{"line":19,"column":1,"offset":504},"end":{"line":19,"column":142,"offset":645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"关于动态语言更深入的介绍，大伙儿可以看“这里”。","position":{"start":{"line":21,"column":1,"offset":649},"end":{"line":21,"column":25,"offset":673}}}],"position":{"start":{"line":21,"column":1,"offset":649},"end":{"line":21,"column":25,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"为啥要学习动态语言"},"children":[{"type":"element","tagName":"a","properties":{"href":"#为啥要学习动态语言"},"children":[{"type":"text","value":"为啥要学习动态语言？","position":{"start":{"line":23,"column":3,"offset":679},"end":{"line":23,"column":13,"offset":689}}}]}],"position":{"start":{"line":23,"column":1,"offset":677},"end":{"line":23,"column":38,"offset":714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"扫盲之后，就该来说一下，学习动态语言的动机了。搞明白动机，学起来才有干劲嘛 :-)","position":{"start":{"line":25,"column":1,"offset":718},"end":{"line":25,"column":42,"offset":759}}}],"position":{"start":{"line":25,"column":1,"offset":718},"end":{"line":25,"column":42,"offset":759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"顺应大趋势"},"children":[{"type":"element","tagName":"a","properties":{"href":"#顺应大趋势"},"children":[{"type":"text","value":"顺应大趋势","position":{"start":{"line":27,"column":4,"offset":766},"end":{"line":27,"column":9,"offset":771}}}]}],"position":{"start":{"line":27,"column":1,"offset":763},"end":{"line":27,"column":9,"offset":771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"假如你经常关注 TIOBE 的排名，那你应该能察觉出来，动态语言近两年的发展势头比较迅猛（在 Top10 里面，至少占了半壁江山）。这能从某个侧面反映出动态语言的影响力在扩大。","position":{"start":{"line":29,"column":1,"offset":775},"end":{"line":29,"column":89,"offset":863}}}],"position":{"start":{"line":29,"column":1,"offset":775},"end":{"line":29,"column":89,"offset":863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"假使你不相信 TIOBE 的排名，俺再举一个例子。两大开发阵营（Java 和 dotNet）最近几年也加大了对动态语言的支持力度。比如，dotNet 的 CLR 加入了对IronPython 和 IronRuby 的支持；Sun 当然也不甘示弱，JVM 也开始支持 Groovy，JRuby 等语言。","position":{"start":{"line":31,"column":1,"offset":867},"end":{"line":31,"column":151,"offset":1017}}}],"position":{"start":{"line":31,"column":1,"offset":867},"end":{"line":31,"column":151,"offset":1017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"俺费了这许多口水，列位看官应该明白动态语言是大势所趋吧。在这动态语言大行其道的日子里，你如果连一门动态语言都没搞懂，那出门都不好意思跟人打招呼。","position":{"start":{"line":33,"column":1,"offset":1021},"end":{"line":33,"column":73,"offset":1093}}}],"position":{"start":{"line":33,"column":1,"offset":1021},"end":{"line":33,"column":73,"offset":1093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不过，话又说回来，静态语言也是不会消亡滴。毕竟，静态语言有自己的优势（比如严谨、性能）。长期来说，必定是动态语言和静态语言并存。各自弥补对方的缺点。","position":{"start":{"line":35,"column":1,"offset":1097},"end":{"line":35,"column":75,"offset":1171}}}],"position":{"start":{"line":35,"column":1,"offset":1097},"end":{"line":35,"column":75,"offset":1171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"了解新思维新理念"},"children":[{"type":"element","tagName":"a","properties":{"href":"#了解新思维新理念"},"children":[{"type":"text","value":"了解新思维、新理念","position":{"start":{"line":37,"column":4,"offset":1178},"end":{"line":37,"column":13,"offset":1187}}}]}],"position":{"start":{"line":37,"column":1,"offset":1175},"end":{"line":37,"column":13,"offset":1187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"学习一门动态语言还有一个好处：有很多时候，多学习一门语言，并不一定是为了在工作中用它，而是为了学习新的思维方式、体会新的理念。比如俺就曾经花时间去看 Prolog，但是俺在工作中，从来不需要用到它。（以后有空的话，俺会介绍一下这玩意儿）","position":{"start":{"line":39,"column":1,"offset":1191},"end":{"line":39,"column":119,"offset":1309}}}],"position":{"start":{"line":39,"column":1,"offset":1191},"end":{"line":39,"column":119,"offset":1309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于动态语言可以在运行时修改自身结构，因此就会产生很多静态语言所没有编程范式和手法（比如 eval、Mixin）。如果你以前只使用静态语言，那你在学习了动态语言之后，多半会从它身上领略到很多新的思想和理念。","position":{"start":{"line":41,"column":1,"offset":1313},"end":{"line":41,"column":104,"offset":1416}}}],"position":{"start":{"line":41,"column":1,"offset":1313},"end":{"line":41,"column":104,"offset":1416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"（关于 eval 的招数，俺后来写了一篇《再举几个动态语言 eval 手法的例子》）","position":{"start":{"line":43,"column":1,"offset":1420},"end":{"line":43,"column":43,"offset":1462}}}],"position":{"start":{"line":43,"column":1,"offset":1420},"end":{"line":43,"column":43,"offset":1462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"能够化繁为简"},"children":[{"type":"element","tagName":"a","properties":{"href":"#能够化繁为简"},"children":[{"type":"text","value":"能够化繁为简","position":{"start":{"line":45,"column":4,"offset":1469},"end":{"line":45,"column":10,"offset":1475}}}]}],"position":{"start":{"line":45,"column":1,"offset":1466},"end":{"line":45,"column":10,"offset":1475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可能有些同学觉得，前面说的都有些务虚，那咱再来说点具体实在的。大牛 Edsger Dijkstra（图灵奖得主）曾经说过：编程的艺术就是处理复杂性的艺术。咱们来看看，动态语言是如何处理复杂问题滴。","position":{"start":{"line":47,"column":1,"offset":1479},"end":{"line":47,"column":99,"offset":1577}}}],"position":{"start":{"line":47,"column":1,"offset":1479},"end":{"line":47,"column":99,"offset":1577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"假设要你实现一个函数，用来完成两个数的“某种运算”，具体的运算类型作为函数的参数传入，然后该函数返回运算结果。比如：","position":{"start":{"line":49,"column":1,"offset":1581},"end":{"line":49,"column":59,"offset":1639}}}],"position":{"start":{"line":49,"column":1,"offset":1581},"end":{"line":49,"column":59,"offset":1639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"Foo("}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"\"+\""}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 返回 6"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"Foo("}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"\"*\""}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"5"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 返回 15"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于上述需求，你会如何实现捏？","position":{"start":{"line":58,"column":1,"offset":1714},"end":{"line":58,"column":16,"offset":1729}}}],"position":{"start":{"line":58,"column":1,"offset":1714},"end":{"line":58,"column":16,"offset":1729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"请先暗自盘算一柱香的功夫，然后再往下看。","position":{"start":{"line":60,"column":1,"offset":1733},"end":{"line":60,"column":21,"offset":1753}}}],"position":{"start":{"line":60,"column":1,"offset":1733},"end":{"line":60,"column":21,"offset":1753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"．．．．．．","position":{"start":{"line":62,"column":1,"offset":1757},"end":{"line":62,"column":7,"offset":1763}}}],"position":{"start":{"line":62,"column":1,"offset":1757},"end":{"line":62,"column":7,"offset":1763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ｔｈｉｎｋｉｎｇ","position":{"start":{"line":64,"column":1,"offset":1767},"end":{"line":64,"column":9,"offset":1775}}}],"position":{"start":{"line":64,"column":1,"offset":1767},"end":{"line":64,"column":9,"offset":1775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"．．．．．．","position":{"start":{"line":66,"column":1,"offset":1779},"end":{"line":66,"column":7,"offset":1785}}}],"position":{"start":{"line":66,"column":1,"offset":1779},"end":{"line":66,"column":7,"offset":1785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你用静态语言（比如 C、C++、Java）来实现，你可能会在函数内使用一个 switch，根据不同的运算符，进行计算，然后返回计算结果。","position":{"start":{"line":68,"column":1,"offset":1789},"end":{"line":68,"column":71,"offset":1859}}}],"position":{"start":{"line":68,"column":1,"offset":1789},"end":{"line":68,"column":71,"offset":1859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于某些比较 ＯＯ 的语言（例如 C++、Java），你或许还会抽象出一个运算的接口类（纯虚类），然后分别派生出若干个不同的计算类（比如加法类、乘法类），看起来似乎比 switch 要优雅一些。","position":{"start":{"line":70,"column":1,"offset":1863},"end":{"line":70,"column":98,"offset":1960}}}],"position":{"start":{"line":70,"column":1,"offset":1863},"end":{"line":70,"column":98,"offset":1960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当然，用静态语言还有其它一些玩法，但是代码量都不会少。具体详情可以看很早以前的一个老故事：《4个程序员的一天》。（其实俺这个例子的灵感就是从那个老故事剽窃滴）","position":{"start":{"line":72,"column":1,"offset":1964},"end":{"line":72,"column":80,"offset":2043}}}],"position":{"start":{"line":72,"column":1,"offset":1964},"end":{"line":72,"column":80,"offset":2043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在，咱们来看看 Python 是如何【优雅地】实现该需求滴。用 Python 只需要【两行代码】即可。请看：","position":{"start":{"line":74,"column":1,"offset":2047},"end":{"line":74,"column":56,"offset":2102}}}],"position":{"start":{"line":74,"column":1,"offset":2047},"end":{"line":74,"column":56,"offset":2102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" Foo"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(op, n1, n2) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" eval"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"( "}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"\""}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"%d"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" %s"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" %d"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"\""}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":" %"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" (n1, op, n2) )"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不懂 Python 的同学可能要问了，这两行代码是啥子意思呀？","position":{"start":{"line":83,"column":1,"offset":2197},"end":{"line":83,"column":32,"offset":2228}}}],"position":{"start":{"line":83,"column":1,"offset":2197},"end":{"line":83,"column":32,"offset":2228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"其实，第一行代码只不过是定义了一个函数头，第2行代码才是精华。这里面利用了动态语言常见的 eval 手法（具体参见“这里”）。在 python 里面，内置的 eval 函数可以把某个字符串当成一个表达式，并对其求值。而语句 \"%d %s %d\" % (n1, op, n2) 只不过格式化出一个表达式的字符串。","position":{"start":{"line":85,"column":1,"offset":2232},"end":{"line":85,"column":156,"offset":2387}}}],"position":{"start":{"line":85,"column":1,"offset":2232},"end":{"line":85,"column":156,"offset":2387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"顺便再插一句，Python 还有一个 exec 的内置函数，可以把一段 Python 源代码作为字符串参数传递给它，让该函数去执行。两个函数结合起来，就能玩出很多花样。具体的花样可以参见“这篇博文”。","position":{"start":{"line":87,"column":1,"offset":2391},"end":{"line":87,"column":101,"offset":2491}}}],"position":{"start":{"line":87,"column":1,"offset":2391},"end":{"line":87,"column":101,"offset":2491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"为什么是-python"},"children":[{"type":"element","tagName":"a","properties":{"href":"#为什么是-python"},"children":[{"type":"text","value":"为什么是 Python？","position":{"start":{"line":89,"column":3,"offset":2497},"end":{"line":89,"column":15,"offset":2509}}}]}],"position":{"start":{"line":89,"column":1,"offset":2495},"end":{"line":89,"column":39,"offset":2533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"说了动态语言的种种好话，有同学会问了，动态语言有很多种，为啥非要学习 Python 捏？","position":{"start":{"line":91,"column":1,"offset":2537},"end":{"line":91,"column":45,"offset":2581}}}],"position":{"start":{"line":91,"column":1,"offset":2537},"end":{"line":91,"column":45,"offset":2581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"首先，俺在本系列的第1篇帖子，已经对比过 Python 和另外几种脚本语言。那几种“脚本语言”碰巧也是知名的“动态语言”。Python 相对于他们的优势，此处就不再重复啰嗦了。","position":{"start":{"line":93,"column":1,"offset":2585},"end":{"line":93,"column":89,"offset":2673}}}],"position":{"start":{"line":93,"column":1,"offset":2585},"end":{"line":93,"column":89,"offset":2673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"其次，单就语法本身而言，Python 的语法对动态性的支持是很优雅、很简洁滴。通过刚才那个 eval 小例子，大伙应该已经看出来了。为了更形象一点，咱拿前面提到的 Mixin 来 Show 一下 Python 的语法是如何的简洁。","position":{"start":{"line":95,"column":1,"offset":2677},"end":{"line":95,"column":116,"offset":2792}}}],"position":{"start":{"line":95,"column":1,"offset":2677},"end":{"line":95,"column":116,"offset":2792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通俗地说，Mixin 手法需要在【运行时】给某个类增加基类（也就是父类）。对于 Python 而言，每一个类都有一个内置属性 ","position":{"start":{"line":97,"column":1,"offset":2796},"end":{"line":97,"column":64,"offset":2859}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"bases","position":{"start":{"line":97,"column":66,"offset":2861},"end":{"line":97,"column":71,"offset":2866}}}],"position":{"start":{"line":97,"column":64,"offset":2859},"end":{"line":97,"column":73,"offset":2868}}},{"type":"text","value":"，里面包含这个类【当前】的所有基类。假如要在【运行时】增加基类，只需操作 ","position":{"start":{"line":97,"column":73,"offset":2868},"end":{"line":97,"column":110,"offset":2905}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"bases","position":{"start":{"line":97,"column":112,"offset":2907},"end":{"line":97,"column":117,"offset":2912}}}],"position":{"start":{"line":97,"column":110,"offset":2905},"end":{"line":97,"column":119,"offset":2914}}},{"type":"text","value":" 这个属性即可。","position":{"start":{"line":97,"column":119,"offset":2914},"end":{"line":97,"column":127,"offset":2922}}}],"position":{"start":{"line":97,"column":1,"offset":2796},"end":{"line":97,"column":127,"offset":2922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"比如有一个类 A 和类 B。如果要在运行时把 B 加为 A 的父类，可以用如下语句：\r\nA.","position":{"start":{"line":99,"column":1,"offset":2926},"end":{"line":100,"column":3,"offset":2972}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"bases","position":{"start":{"line":100,"column":5,"offset":2974},"end":{"line":100,"column":10,"offset":2979}}}],"position":{"start":{"line":100,"column":3,"offset":2972},"end":{"line":100,"column":12,"offset":2981}}},{"type":"text","value":" += (B,)","position":{"start":{"line":100,"column":12,"offset":2981},"end":{"line":100,"column":20,"offset":2989}}}],"position":{"start":{"line":99,"column":1,"offset":2926},"end":{"line":100,"column":20,"offset":2989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"是不是也很简洁，而且可读性也不差？相比而言，有些动态语言（比如 JavaScript），要实现类似的效果，代码就相对复杂了。","position":{"start":{"line":102,"column":1,"offset":2993},"end":{"line":102,"column":63,"offset":3055}}}],"position":{"start":{"line":102,"column":1,"offset":2993},"end":{"line":102,"column":63,"offset":3055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于 Mixin 不是今天的重点，就不再深入展开了。","position":{"start":{"line":104,"column":1,"offset":3059},"end":{"line":104,"column":27,"offset":3085}}}],"position":{"start":{"line":104,"column":1,"offset":3059},"end":{"line":104,"column":27,"offset":3085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"总结"},"children":[{"type":"element","tagName":"a","properties":{"href":"#总结"},"children":[{"type":"text","value":"总结","position":{"start":{"line":107,"column":3,"offset":3093},"end":{"line":107,"column":5,"offset":3095}}}]}],"position":{"start":{"line":107,"column":1,"offset":3091},"end":{"line":107,"column":27,"offset":3117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最后，来个总结发言：如果你之前没有接触过动态语言，建议去学习一下；如果你已经打定主意要学，Python 是比较好的候选者。","position":{"start":{"line":110,"column":1,"offset":3123},"end":{"line":110,"column":62,"offset":3184}}}],"position":{"start":{"line":110,"column":1,"offset":3123},"end":{"line":110,"column":62,"offset":3184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"好了，今天就聊到这里。下一个帖子，咱们来讲讲 Python 作为一个纯粹的面向对象语言，有些啥特色。","position":{"start":{"line":112,"column":1,"offset":3188},"end":{"line":112,"column":51,"offset":3238}}}],"position":{"start":{"line":112,"column":1,"offset":3188},"end":{"line":112,"column":51,"offset":3238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"RP-why-choose-python-0-overview"},"children":[{"type":"text","value":"回到本系列的目录","position":{"start":{"line":114,"column":2,"offset":3243},"end":{"line":114,"column":10,"offset":3251}}}],"position":{"start":{"line":114,"column":1,"offset":3242},"end":{"line":114,"column":44,"offset":3285}}}],"position":{"start":{"line":114,"column":1,"offset":3242},"end":{"line":114,"column":44,"offset":3285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"版权声明","position":{"start":{"line":116,"column":5,"offset":3293},"end":{"line":116,"column":9,"offset":3297}}}],"position":{"start":{"line":116,"column":3,"offset":3291},"end":{"line":116,"column":11,"offset":3299}}},{"type":"text","value":"\r\n本博客（编程随想的博客）所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者编程随想和本文原始地址：","position":{"start":{"line":116,"column":15,"offset":3303},"end":{"line":117,"column":71,"offset":3375}}},{"type":"text","value":"\r\n","position":{"start":{"line":117,"column":75,"offset":3379},"end":{"line":118,"column":1,"offset":3381}}},{"type":"element","tagName":"a","properties":{"href":"https://program-think.blogspot.com/2009/08/why-choose-python-2-dynamic.html"},"children":[{"type":"text","value":" https://program-think.blogspot.com/2009/08/why-choose-python-2-dynamic.html ","position":{"start":{"line":118,"column":4,"offset":3384},"end":{"line":118,"column":81,"offset":3461}}}],"position":{"start":{"line":118,"column":3,"offset":3383},"end":{"line":118,"column":159,"offset":3539}}}],"position":{"start":{"line":116,"column":3,"offset":3291},"end":{"line":118,"column":159,"offset":3539}}},{"type":"text","value":"\n"}],"position":{"start":{"line":116,"column":1,"offset":3289},"end":{"line":118,"column":159,"offset":3539}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":118,"column":159,"offset":3539}}}},"__N_SSG":true}