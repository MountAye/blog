{"pageProps":{"metadata":{"date":"2019-02-07","title":".py | 转载：为什么俺推荐 Python[4]·作为函数式编程语言的 Python","filename":"2019-02-07-RP-why-choose-python-4-fp.md","url":"RP-why-choose-python-4-fp","layout":"post","author":"编程随想","keywords":["html","py"],"excerpt":"聊一聊 Python 作为“函数式编程”（以下简称 FP）语言的特点。考虑到本系列面向的是 Python 的门外汉或刚入门的新手，故本文仅介绍若干浅显的 FP 特性。","categories":"post","milestoneID":2},"mdAst":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"文章目录","position":{"start":{"line":2,"column":5,"offset":6},"end":{"line":2,"column":9,"offset":10}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":9,"offset":10}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"什么是函数式编程","position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":11,"offset":24}}}],"position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":11,"offset":24}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":11,"offset":24}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"FP 的特点","position":{"start":{"line":5,"column":3,"offset":28},"end":{"line":5,"column":9,"offset":34}}}],"position":{"start":{"line":5,"column":3,"offset":28},"end":{"line":5,"column":9,"offset":34}}}],"position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":9,"offset":34}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"FP 的优点","position":{"start":{"line":6,"column":3,"offset":38},"end":{"line":6,"column":9,"offset":44}}}],"position":{"start":{"line":6,"column":3,"offset":38},"end":{"line":6,"column":9,"offset":44}}}],"position":{"start":{"line":6,"column":1,"offset":36},"end":{"line":6,"column":9,"offset":44}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Python 的函数语法","position":{"start":{"line":7,"column":3,"offset":48},"end":{"line":7,"column":15,"offset":60}}}],"position":{"start":{"line":7,"column":3,"offset":48},"end":{"line":7,"column":15,"offset":60}}}],"position":{"start":{"line":7,"column":1,"offset":46},"end":{"line":7,"column":15,"offset":60}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"和 FP 相关的内置函数","position":{"start":{"line":8,"column":3,"offset":64},"end":{"line":8,"column":15,"offset":76}}}],"position":{"start":{"line":8,"column":3,"offset":64},"end":{"line":8,"column":15,"offset":76}}}],"position":{"start":{"line":8,"column":1,"offset":62},"end":{"line":8,"column":15,"offset":76}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"消除控制流","position":{"start":{"line":9,"column":3,"offset":80},"end":{"line":9,"column":8,"offset":85}}}],"position":{"start":{"line":9,"column":3,"offset":80},"end":{"line":9,"column":8,"offset":85}}}],"position":{"start":{"line":9,"column":1,"offset":78},"end":{"line":9,"column":8,"offset":85}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"List Comprehension","position":{"start":{"line":10,"column":3,"offset":89},"end":{"line":10,"column":21,"offset":107}}}],"position":{"start":{"line":10,"column":3,"offset":89},"end":{"line":10,"column":21,"offset":107}}}],"position":{"start":{"line":10,"column":1,"offset":87},"end":{"line":10,"column":21,"offset":107}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"闭包","position":{"start":{"line":11,"column":3,"offset":111},"end":{"line":11,"column":5,"offset":113}}}],"position":{"start":{"line":11,"column":3,"offset":111},"end":{"line":11,"column":5,"offset":113}}}],"position":{"start":{"line":11,"column":1,"offset":109},"end":{"line":11,"column":5,"offset":113}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"结尾","position":{"start":{"line":12,"column":3,"offset":117},"end":{"line":12,"column":5,"offset":119}}}],"position":{"start":{"line":12,"column":3,"offset":117},"end":{"line":12,"column":5,"offset":119}}}],"position":{"start":{"line":12,"column":1,"offset":115},"end":{"line":12,"column":5,"offset":119}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":12,"column":5,"offset":119}}},{"type":"paragraph","children":[{"type":"text","value":"春节前看到热心读者留言，提醒俺：Python 系列好久没更新了（不知不觉又过了一年多）。俺当时回复说：春节假期补上后一篇。昨天听到鞭炮声才发觉元宵已经到了，赶忙写出本文。","position":{"start":{"line":14,"column":1,"offset":123},"end":{"line":14,"column":86,"offset":208}}}],"position":{"start":{"line":14,"column":1,"offset":123},"end":{"line":14,"column":86,"offset":208}}},{"type":"paragraph","children":[{"type":"text","value":"前一个帖子介绍了 Python 作为“面向对象编程”（以下简称 OOP）语言的特点，今天来聊一聊 Python 作为“函数式编程”（以下简称 FP）语言的特点。考虑到本系列面向的是 Python 的门外汉或刚入门的新手，故本文仅介绍若干浅显的 FP 特性。","position":{"start":{"line":16,"column":1,"offset":212},"end":{"line":16,"column":129,"offset":340}}}],"position":{"start":{"line":16,"column":1,"offset":212},"end":{"line":16,"column":129,"offset":340}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"什么是函数式编程","position":{"start":{"line":18,"column":3,"offset":346},"end":{"line":18,"column":11,"offset":354}}}],"position":{"start":{"line":18,"column":1,"offset":344},"end":{"line":18,"column":11,"offset":354}}},{"type":"paragraph","children":[{"type":"text","value":"说实话，“函数式编程语言”是一个很大的话题。由于篇幅有限，本文不可能对这个话题做全面介绍。俺干脆偷一下懒，只简单说说。","position":{"start":{"line":20,"column":1,"offset":358},"end":{"line":20,"column":60,"offset":417}}}],"position":{"start":{"line":20,"column":1,"offset":358},"end":{"line":20,"column":60,"offset":417}}},{"type":"paragraph","children":[{"type":"text","value":"从字面上看，所谓的函数式编程，就是以“函数”为中心的“编程范式”。估计有同学又会问了，啥是“编程范式”捏？哎呦，这又是一个很大的话题。通俗来讲，“编程范式”就是指编程的套路。比方说大家很熟悉的 OOP，就是一种“编程范式”。FP 跟 OOP 一样，都是一种编程的套路。做个简单类比：OOP 以“对象/类”作为程序设计的核心，而 FP 以“函数”作为程序设计的核心。","position":{"start":{"line":22,"column":1,"offset":421},"end":{"line":22,"column":183,"offset":603}}}],"position":{"start":{"line":22,"column":1,"offset":421},"end":{"line":22,"column":183,"offset":603}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"FP的特点","position":{"start":{"line":24,"column":3,"offset":609},"end":{"line":24,"column":8,"offset":614}}}],"position":{"start":{"line":24,"column":1,"offset":607},"end":{"line":24,"column":8,"offset":614}}},{"type":"paragraph","children":[{"type":"text","value":"既然说到 FP，自然要稍微说一下 FP 的特色。","position":{"start":{"line":26,"column":1,"offset":618},"end":{"line":26,"column":25,"offset":642}}}],"position":{"start":{"line":26,"column":1,"offset":618},"end":{"line":26,"column":25,"offset":642}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"函数很牛X","position":{"start":{"line":28,"column":4,"offset":649},"end":{"line":28,"column":9,"offset":654}}}],"position":{"start":{"line":28,"column":1,"offset":646},"end":{"line":28,"column":9,"offset":654}}},{"type":"paragraph","children":[{"type":"text","value":"刚才说了，FP 是以函数为中心。既然如此，在支持 FP 的语言中，函数的功能自然十分牛X。通俗地说，OOP 语言中，类/对象能干的事情，FP 语言中的函数也能干。下面做一些对比，以加深大伙儿的印象。","position":{"start":{"line":30,"column":1,"offset":658},"end":{"line":30,"column":100,"offset":757}}}],"position":{"start":{"line":30,"column":1,"offset":658},"end":{"line":30,"column":100,"offset":757}}},{"type":"paragraph","children":[{"type":"text","value":"OOP 中，对象可以互相赋值；FP 中，函数可以互相赋值。","position":{"start":{"line":32,"column":1,"offset":761},"end":{"line":32,"column":30,"offset":790}}}],"position":{"start":{"line":32,"column":1,"offset":761},"end":{"line":32,"column":30,"offset":790}}},{"type":"paragraph","children":[{"type":"text","value":"OOP 中，对象可以作为函数的参数/返回值，FP 中，函数可以作为函数的参数/返回值。","position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":44,"offset":837}}}],"position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":44,"offset":837}}},{"type":"paragraph","children":[{"type":"text","value":"某些 OOP 中，类可以嵌套定义；FP 中，函数可以嵌套定义。","position":{"start":{"line":36,"column":1,"offset":841},"end":{"line":36,"column":32,"offset":872}}}],"position":{"start":{"line":36,"column":1,"offset":841},"end":{"line":36,"column":32,"offset":872}}},{"type":"paragraph","children":[{"type":"text","value":"某些 OOP 中，可以有匿名类；FP 中，可以有匿名函数。","position":{"start":{"line":38,"column":1,"offset":876},"end":{"line":38,"column":30,"offset":905}}}],"position":{"start":{"line":38,"column":1,"offset":876},"end":{"line":38,"column":30,"offset":905}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"避免副作用","position":{"start":{"line":40,"column":4,"offset":912},"end":{"line":40,"column":9,"offset":917}}}],"position":{"start":{"line":40,"column":1,"offset":909},"end":{"line":40,"column":9,"offset":917}}},{"type":"paragraph","children":[{"type":"text","value":"在 FP 中，特别强调函数不要有“副作用”（洋文叫“side effect”）。没有副作用的函数，又称之为纯函数（pure function）。其输出完全依赖于输入。换句话说，只要输入一样，输出就一样。","position":{"start":{"line":42,"column":1,"offset":921},"end":{"line":42,"column":102,"offset":1022}}}],"position":{"start":{"line":42,"column":1,"offset":921},"end":{"line":42,"column":102,"offset":1022}}},{"type":"paragraph","children":[{"type":"text","value":"要成为纯函数，函数内部不能读写函数外部变量、不能有设备 I/O（比如读写文件）......","position":{"start":{"line":44,"column":1,"offset":1026},"end":{"line":44,"column":46,"offset":1071}}}],"position":{"start":{"line":44,"column":1,"offset":1026},"end":{"line":44,"column":46,"offset":1071}}},{"type":"paragraph","children":[{"type":"text","value":"无副作用是 FP 的重要特性。FP的很多优点来自于此特性。","position":{"start":{"line":46,"column":1,"offset":1075},"end":{"line":46,"column":30,"offset":1104}}}],"position":{"start":{"line":46,"column":1,"offset":1075},"end":{"line":46,"column":30,"offset":1104}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"避免控制流","position":{"start":{"line":48,"column":4,"offset":1111},"end":{"line":48,"column":9,"offset":1116}}}],"position":{"start":{"line":48,"column":1,"offset":1108},"end":{"line":48,"column":9,"offset":1116}}},{"type":"paragraph","children":[{"type":"text","value":"在 FP 中，尽量避免用控制流语句（循环语句、判断语句）。对于控制流语句，FP 有另外的替代方式。比如：常用递归或高阶函数来替代循环。如此一来，FP 的代码会显得更简洁，更可读。","position":{"start":{"line":50,"column":1,"offset":1120},"end":{"line":50,"column":90,"offset":1209}}}],"position":{"start":{"line":50,"column":1,"offset":1120},"end":{"line":50,"column":90,"offset":1209}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"多态","position":{"start":{"line":52,"column":4,"offset":1216},"end":{"line":52,"column":6,"offset":1218}}}],"position":{"start":{"line":52,"column":1,"offset":1213},"end":{"line":52,"column":6,"offset":1218}}},{"type":"paragraph","children":[{"type":"text","value":"大部分支持 FP 的语言，也都支持多态。函数参数支持多态化，便可实现非常灵活的功能。","position":{"start":{"line":54,"column":1,"offset":1222},"end":{"line":54,"column":43,"offset":1264}}}],"position":{"start":{"line":54,"column":1,"offset":1222},"end":{"line":54,"column":43,"offset":1264}}},{"type":"paragraph","children":[{"type":"text","value":"说了这么多，不知道大伙儿明白了没？还是没整明白的同学，请看维基百科的英文词条（中文词条太简单，看不明白滴）。","position":{"start":{"line":56,"column":1,"offset":1268},"end":{"line":56,"column":55,"offset":1322}}}],"position":{"start":{"line":56,"column":1,"offset":1268},"end":{"line":56,"column":55,"offset":1322}}},{"type":"paragraph","children":[{"type":"text","value":"洋文实在看不下去吗？那不妨看看 IT 大牛 Joel 写的《你的编程语言能这样做吗？》（中文版在“这里”）。此文以 JavaScript 来阐述 FP 的妙处。","position":{"start":{"line":58,"column":1,"offset":1326},"end":{"line":58,"column":81,"offset":1406}}}],"position":{"start":{"line":58,"column":1,"offset":1326},"end":{"line":58,"column":81,"offset":1406}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"FP 的优点","position":{"start":{"line":60,"column":3,"offset":1412},"end":{"line":60,"column":9,"offset":1418}}}],"position":{"start":{"line":60,"column":1,"offset":1410},"end":{"line":60,"column":9,"offset":1418}}},{"type":"paragraph","children":[{"type":"text","value":"再稍微说一下 FP 的好处，以强化大伙儿学习的动力。","position":{"start":{"line":62,"column":1,"offset":1422},"end":{"line":62,"column":27,"offset":1448}}}],"position":{"start":{"line":62,"column":1,"offset":1422},"end":{"line":62,"column":27,"offset":1448}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"模块化","position":{"start":{"line":64,"column":4,"offset":1455},"end":{"line":64,"column":7,"offset":1458}}}],"position":{"start":{"line":64,"column":1,"offset":1452},"end":{"line":64,"column":7,"offset":1458}}},{"type":"paragraph","children":[{"type":"text","value":"在 FP 的思想中，函数最好是“纯”的，而且最好只完成“单一”的任务。在这种指导思想下，函数的模块化程度自然就高。","position":{"start":{"line":66,"column":1,"offset":1462},"end":{"line":66,"column":58,"offset":1519}}}],"position":{"start":{"line":66,"column":1,"offset":1462},"end":{"line":66,"column":58,"offset":1519}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"可复用性","position":{"start":{"line":68,"column":4,"offset":1526},"end":{"line":68,"column":8,"offset":1530}}}],"position":{"start":{"line":68,"column":1,"offset":1523},"end":{"line":68,"column":8,"offset":1530}}},{"type":"paragraph","children":[{"type":"text","value":"模块化程度高，直接的好处就是可复用性好。","position":{"start":{"line":70,"column":1,"offset":1534},"end":{"line":70,"column":21,"offset":1554}}}],"position":{"start":{"line":70,"column":1,"offset":1534},"end":{"line":70,"column":21,"offset":1554}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"可读性","position":{"start":{"line":72,"column":4,"offset":1561},"end":{"line":72,"column":7,"offset":1564}}}],"position":{"start":{"line":72,"column":1,"offset":1558},"end":{"line":72,"column":7,"offset":1564}}},{"type":"paragraph","children":[{"type":"text","value":"刚才说了，FP 的思想强调函数又纯又小。这样的函数，代码的可读性自然好，修改起来也方便。","position":{"start":{"line":74,"column":1,"offset":1568},"end":{"line":74,"column":45,"offset":1612}}}],"position":{"start":{"line":74,"column":1,"offset":1568},"end":{"line":74,"column":45,"offset":1612}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"易于调试","position":{"start":{"line":76,"column":4,"offset":1619},"end":{"line":76,"column":8,"offset":1623}}}],"position":{"start":{"line":76,"column":1,"offset":1616},"end":{"line":76,"column":8,"offset":1623}}},{"type":"paragraph","children":[{"type":"text","value":"前面提到了纯函数。如果你的程序中大部分函数都是纯函数，则调试 Bug 会容易很多。像 OOP 中，类的多个成员函数都可以修改类的成员变量，有时候会导致调试极其困难。而纯函数没有此问题。","position":{"start":{"line":78,"column":1,"offset":1627},"end":{"line":78,"column":93,"offset":1719}}}],"position":{"start":{"line":78,"column":1,"offset":1627},"end":{"line":78,"column":93,"offset":1719}}},{"type":"paragraph","children":[{"type":"text","value":"另外，多线程是调试的一大噩梦。当年俺还专门写过帖子，介绍 C++ 多线程的注意事项（在“这里”）。而纯函数由于没有副作用，不必担心各种“互斥”、“死锁”等问题。","position":{"start":{"line":80,"column":1,"offset":1723},"end":{"line":80,"column":81,"offset":1803}}}],"position":{"start":{"line":80,"column":1,"offset":1723},"end":{"line":80,"column":81,"offset":1803}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"易于测试","position":{"start":{"line":82,"column":4,"offset":1810},"end":{"line":82,"column":8,"offset":1814}}}],"position":{"start":{"line":82,"column":1,"offset":1807},"end":{"line":82,"column":8,"offset":1814}}},{"type":"paragraph","children":[{"type":"text","value":"除了易于调试，纯函数的输出仅仅依赖于输入，这一特点注定了它很容易进行单元测试。","position":{"start":{"line":84,"column":1,"offset":1818},"end":{"line":84,"column":40,"offset":1857}}}],"position":{"start":{"line":84,"column":1,"offset":1818},"end":{"line":84,"column":40,"offset":1857}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"适合并行","position":{"start":{"line":86,"column":4,"offset":1864},"end":{"line":86,"column":8,"offset":1868}}}],"position":{"start":{"line":86,"column":1,"offset":1861},"end":{"line":86,"column":8,"offset":1868}}},{"type":"paragraph","children":[{"type":"text","value":"在 FP 中，由于纯函数无副作用，很适合编写并行处理的代码。最典型并且在工业界获得巨大成功的例子就是 Erlang。","position":{"start":{"line":88,"column":1,"offset":1872},"end":{"line":88,"column":59,"offset":1930}}}],"position":{"start":{"line":88,"column":1,"offset":1872},"end":{"line":88,"column":59,"offset":1930}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"其它","position":{"start":{"line":90,"column":4,"offset":1937},"end":{"line":90,"column":6,"offset":1939}}}],"position":{"start":{"line":90,"column":1,"offset":1934},"end":{"line":90,"column":6,"offset":1939}}},{"type":"paragraph","children":[{"type":"text","value":"当然啦，FP 的好处远不止上述这些（比如还有：利于形式化证明）。限于篇幅，俺就不展开了。","position":{"start":{"line":92,"column":1,"offset":1943},"end":{"line":92,"column":45,"offset":1987}}}],"position":{"start":{"line":92,"column":1,"offset":1943},"end":{"line":92,"column":45,"offset":1987}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python 的函数语法","position":{"start":{"line":94,"column":3,"offset":1993},"end":{"line":94,"column":15,"offset":2005}}}],"position":{"start":{"line":94,"column":1,"offset":1991},"end":{"line":94,"column":15,"offset":2005}}},{"type":"paragraph","children":[{"type":"text","value":"Python 中，常见的函数定义和函数调用，想必各位都晓得了。下面说几种不太常见的，且跟 FP 有关的语法。","position":{"start":{"line":96,"column":1,"offset":2009},"end":{"line":96,"column":55,"offset":2063}}}],"position":{"start":{"line":96,"column":1,"offset":2009},"end":{"line":96,"column":55,"offset":2063}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"函数赋值","position":{"start":{"line":98,"column":4,"offset":2070},"end":{"line":98,"column":8,"offset":2074}}}],"position":{"start":{"line":98,"column":1,"offset":2067},"end":{"line":98,"column":8,"offset":2074}}},{"type":"paragraph","children":[{"type":"text","value":"Python 可以把函数直接赋值给一个变量。举例如下：","position":{"start":{"line":100,"column":1,"offset":2078},"end":{"line":100,"column":28,"offset":2105}}}],"position":{"start":{"line":100,"column":1,"offset":2078},"end":{"line":100,"column":28,"offset":2105}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef square(n) :  # 这是一个计算平方的小函数，后面会反复用它举例\r\n    return n ** 2\r\n\r\nf = square  # 此处赋值给变量 f\r\nf(10)  # 此处返回100。注意：对该变量使用小括号，等同于调用函数\r\n","position":{"start":{"line":102,"column":1,"offset":2109},"end":{"line":110,"column":4,"offset":2255}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"匿名定义","position":{"start":{"line":112,"column":4,"offset":2262},"end":{"line":112,"column":8,"offset":2266}}}],"position":{"start":{"line":112,"column":1,"offset":2259},"end":{"line":112,"column":8,"offset":2266}}},{"type":"paragraph","children":[{"type":"text","value":"Python 可以用 lambda 关键字定义【单行】的匿名函数。套用刚才的例子","position":{"start":{"line":114,"column":1,"offset":2270},"end":{"line":114,"column":41,"offset":2310}}}],"position":{"start":{"line":114,"column":1,"offset":2270},"end":{"line":114,"column":41,"offset":2310}}},{"type":"code","lang":"python","meta":null,"value":"\r\nsquare = lambda x : x**2  # 定义一个单参数的匿名函数，并把该函数赋值给变量\r\nsquare(10)  # 此处返回 100\r\n","position":{"start":{"line":116,"column":1,"offset":2314},"end":{"line":121,"column":4,"offset":2409}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"嵌套定义","position":{"start":{"line":123,"column":4,"offset":2416},"end":{"line":123,"column":8,"offset":2420}}}],"position":{"start":{"line":123,"column":1,"offset":2413},"end":{"line":123,"column":8,"offset":2420}}},{"type":"paragraph","children":[{"type":"text","value":"Python 支持函数的嵌套定义（请看如下例子）。这种语法，在“闭包”中经常出现（后面会具体介绍“闭包”）。","position":{"start":{"line":125,"column":1,"offset":2424},"end":{"line":125,"column":55,"offset":2478}}}],"position":{"start":{"line":125,"column":1,"offset":2424},"end":{"line":125,"column":55,"offset":2478}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef outer() :  # 外层函数\r\n    s = \"hello\"\r\n    def inner() :  # 内层函数\r\n        print(s)  # 此处引用的是外层作用域的变量\r\n\r\n    inner()  # 输出 hello\r\n    s = \"world\"\r\n    inner()  # 输出 world\r\n","position":{"start":{"line":127,"column":1,"offset":2482},"end":{"line":138,"column":4,"offset":2672}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"和 FP 相关的内置函数","position":{"start":{"line":140,"column":3,"offset":2678},"end":{"line":140,"column":15,"offset":2690}}}],"position":{"start":{"line":140,"column":1,"offset":2676},"end":{"line":140,"column":15,"offset":2690}}},{"type":"paragraph","children":[{"type":"text","value":"Python 内置了一大坨用于 FP 的函数，以方便程序猿写出简洁的代码。在接下去聊之前，俺有必要先介绍其中的2个。","position":{"start":{"line":142,"column":1,"offset":2694},"end":{"line":142,"column":59,"offset":2752}}}],"position":{"start":{"line":142,"column":1,"offset":2694},"end":{"line":142,"column":59,"offset":2752}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"map(func, iter)","position":{"start":{"line":144,"column":4,"offset":2759},"end":{"line":144,"column":19,"offset":2774}}}],"position":{"start":{"line":144,"column":1,"offset":2756},"end":{"line":144,"column":19,"offset":2774}}},{"type":"paragraph","children":[{"type":"text","value":"为了省事，俺只介绍2参数的 map（正宗的 map 支持 N 参数）。","position":{"start":{"line":146,"column":1,"offset":2778},"end":{"line":146,"column":36,"offset":2813}}}],"position":{"start":{"line":146,"column":1,"offset":2778},"end":{"line":146,"column":36,"offset":2813}}},{"type":"paragraph","children":[{"type":"text","value":"参数 func 是个函数，参数 iter 是个迭代器（也可以理解为集合）","position":{"start":{"line":148,"column":1,"offset":2817},"end":{"line":148,"column":37,"offset":2853}}}],"position":{"start":{"line":148,"column":1,"offset":2817},"end":{"line":148,"column":37,"offset":2853}}},{"type":"paragraph","children":[{"type":"text","value":"map() 会把 iter 的每个元素传给 func，并把每次调用的结果保存到一个 list 中，然后返回此 list。","position":{"start":{"line":150,"column":1,"offset":2857},"end":{"line":150,"column":61,"offset":2917}}}],"position":{"start":{"line":150,"column":1,"offset":2857},"end":{"line":150,"column":61,"offset":2917}}},{"type":"paragraph","children":[{"type":"text","value":"举例：","position":{"start":{"line":152,"column":1,"offset":2921},"end":{"line":152,"column":4,"offset":2924}}}],"position":{"start":{"line":152,"column":1,"offset":2921},"end":{"line":152,"column":4,"offset":2924}}},{"type":"paragraph","children":[{"type":"text","value":"挨个计算整数 list 的平方：","position":{"start":{"line":154,"column":1,"offset":2928},"end":{"line":154,"column":17,"offset":2944}}}],"position":{"start":{"line":154,"column":1,"offset":2928},"end":{"line":154,"column":17,"offset":2944}}},{"type":"code","lang":"python","meta":null,"value":"\r\nmap(square, [1, 2, 3])  # 返回 [1, 4, 9]\r\n","position":{"start":{"line":156,"column":1,"offset":2948},"end":{"line":160,"column":4,"offset":3006}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"filter(func, iter)","position":{"start":{"line":162,"column":4,"offset":3013},"end":{"line":162,"column":22,"offset":3031}}}],"position":{"start":{"line":162,"column":1,"offset":3010},"end":{"line":162,"column":22,"offset":3031}}},{"type":"paragraph","children":[{"type":"text","value":"参数含义同 map","position":{"start":{"line":164,"column":1,"offset":3035},"end":{"line":164,"column":10,"offset":3044}}}],"position":{"start":{"line":164,"column":1,"offset":3035},"end":{"line":164,"column":10,"offset":3044}}},{"type":"paragraph","children":[{"type":"text","value":"filter() 会把 iter 的每个元素传给 func，如果 func 返回结果为 True，就把元素保存在一个 list 中，最后返回此 list。","position":{"start":{"line":166,"column":1,"offset":3048},"end":{"line":166,"column":78,"offset":3125}}}],"position":{"start":{"line":166,"column":1,"offset":3048},"end":{"line":166,"column":78,"offset":3125}}},{"type":"paragraph","children":[{"type":"text","value":"举例：","position":{"start":{"line":168,"column":1,"offset":3129},"end":{"line":168,"column":4,"offset":3132}}}],"position":{"start":{"line":168,"column":1,"offset":3129},"end":{"line":168,"column":4,"offset":3132}}},{"type":"paragraph","children":[{"type":"text","value":"要过滤出所有奇数，代码如下：","position":{"start":{"line":170,"column":1,"offset":3136},"end":{"line":170,"column":15,"offset":3150}}}],"position":{"start":{"line":170,"column":1,"offset":3136},"end":{"line":170,"column":15,"offset":3150}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef odd(n) :\r\n    return (n%2) == 1\r\n\r\nfilter(odd, [1, 2, 3])  # 返回[1, 3]\r\n","position":{"start":{"line":172,"column":1,"offset":3154},"end":{"line":179,"column":4,"offset":3247}}},{"type":"paragraph","children":[{"type":"text","value":"此处可以用上 lambda，把代码简化为一行：","position":{"start":{"line":181,"column":1,"offset":3251},"end":{"line":181,"column":24,"offset":3274}}}],"position":{"start":{"line":181,"column":1,"offset":3251},"end":{"line":181,"column":24,"offset":3274}}},{"type":"code","lang":"python","meta":null,"value":"filter(lambda n: (n%2)==1, lst)","position":{"start":{"line":183,"column":1,"offset":3278},"end":{"line":185,"column":4,"offset":3325}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"消除控制流","position":{"start":{"line":187,"column":3,"offset":3331},"end":{"line":187,"column":8,"offset":3336}}}],"position":{"start":{"line":187,"column":1,"offset":3329},"end":{"line":187,"column":8,"offset":3336}}},{"type":"paragraph","children":[{"type":"text","value":"为了让大伙儿更深刻体会 FP 风格同传统风格的差别，俺把刚才两个例子组合一下——要求返回整数list 中所有奇数的平方。","position":{"start":{"line":189,"column":1,"offset":3340},"end":{"line":189,"column":61,"offset":3400}}}],"position":{"start":{"line":189,"column":1,"offset":3340},"end":{"line":189,"column":61,"offset":3400}}},{"type":"paragraph","children":[{"type":"text","value":"传统的写法（有控制流）：","position":{"start":{"line":191,"column":1,"offset":3404},"end":{"line":191,"column":13,"offset":3416}}}],"position":{"start":{"line":191,"column":1,"offset":3404},"end":{"line":191,"column":13,"offset":3416}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef func1(old_lst) :\r\n    new_lst = []\r\n    for n in old_lst :\r\n        if odd(n) :\r\n            new_lst.append(square(n))\r\n    return new_lst\r\n","position":{"start":{"line":193,"column":1,"offset":3420},"end":{"line":202,"column":4,"offset":3582}}},{"type":"paragraph","children":[{"type":"text","value":"FP 的写法（无控制流）：","position":{"start":{"line":204,"column":1,"offset":3586},"end":{"line":204,"column":14,"offset":3599}}}],"position":{"start":{"line":204,"column":1,"offset":3586},"end":{"line":204,"column":14,"offset":3599}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef func2(lst) :\r\n    return map(square, filter(odd, lst))\r\n","position":{"start":{"line":206,"column":1,"offset":3603},"end":{"line":211,"column":4,"offset":3681}}},{"type":"paragraph","children":[{"type":"text","value":"怎么样？是不是更简洁？连 for / if 这两个关键字都不需要了。","position":{"start":{"line":213,"column":1,"offset":3685},"end":{"line":213,"column":35,"offset":3719}}}],"position":{"start":{"line":213,"column":1,"offset":3685},"end":{"line":213,"column":35,"offset":3719}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"List Comprehension","position":{"start":{"line":215,"column":3,"offset":3725},"end":{"line":215,"column":21,"offset":3743}}}],"position":{"start":{"line":215,"column":1,"offset":3723},"end":{"line":215,"column":21,"offset":3743}}},{"type":"paragraph","children":[{"type":"text","value":"这个洋文比较难翻译。有人叫做“列表推导”，也有人称为“列表展开”或“列表解析”。（俺比较喜欢头一个翻译——不禁让人联想到“推倒”:）","position":{"start":{"line":217,"column":1,"offset":3747},"end":{"line":217,"column":67,"offset":3813}}}],"position":{"start":{"line":217,"column":1,"offset":3747},"end":{"line":217,"column":67,"offset":3813}}},{"type":"paragraph","children":[{"type":"text","value":"在 Python 中，这是一个很好吃的语法糖——可以让你写出很简洁、很优雅的代码。","position":{"start":{"line":219,"column":1,"offset":3817},"end":{"line":219,"column":42,"offset":3858}}}],"position":{"start":{"line":219,"column":1,"offset":3817},"end":{"line":219,"column":42,"offset":3858}}},{"type":"paragraph","children":[{"type":"text","value":"举例1：","position":{"start":{"line":221,"column":1,"offset":3862},"end":{"line":221,"column":5,"offset":3866}}}],"position":{"start":{"line":221,"column":1,"offset":3862},"end":{"line":221,"column":5,"offset":3866}}},{"type":"paragraph","children":[{"type":"text","value":"还拿刚才过滤奇数的例子。","position":{"start":{"line":223,"column":1,"offset":3870},"end":{"line":223,"column":13,"offset":3882}}}],"position":{"start":{"line":223,"column":1,"offset":3870},"end":{"line":223,"column":13,"offset":3882}}},{"type":"code","lang":"python","meta":null,"value":"\r\nfilter(lambda n: (n%2)==1, lst)\r\n","position":{"start":{"line":225,"column":1,"offset":3886},"end":{"line":229,"column":4,"offset":3937}}},{"type":"paragraph","children":[{"type":"text","value":"上述写法可以等价替换为列表推导：","position":{"start":{"line":231,"column":1,"offset":3941},"end":{"line":231,"column":17,"offset":3957}}}],"position":{"start":{"line":231,"column":1,"offset":3941},"end":{"line":231,"column":17,"offset":3957}}},{"type":"code","lang":"python","meta":null,"value":"\r\n[n for n in lst if (n%2)==1]\r\n","position":{"start":{"line":233,"column":1,"offset":3961},"end":{"line":237,"column":4,"offset":4009}}},{"type":"paragraph","children":[{"type":"text","value":"举例2：\r\n　　\r\n再来一个稍微复杂的例子。假设有两个整数 list，分别存储矩形的宽度和高度。现在想把所有的宽度和高度进行两两组合，把大于 10 的面积打印出来。\r\n　　\r\n传统的写法（2层循环，4行代码）","position":{"start":{"line":239,"column":1,"offset":4013},"end":{"line":243,"column":17,"offset":4117}}}],"position":{"start":{"line":239,"column":1,"offset":4013},"end":{"line":243,"column":17,"offset":4117}}},{"type":"code","lang":"python","meta":null,"value":"\r\nfor w in width :\r\n    for h in height :\r\n        if w*h > 10 :\r\n            print(w*h)\r\n","position":{"start":{"line":245,"column":1,"offset":4121},"end":{"line":252,"column":4,"offset":4227}}},{"type":"paragraph","children":[{"type":"text","value":"FP 的写法（无循环，1行代码，多精致啊）","position":{"start":{"line":254,"column":1,"offset":4231},"end":{"line":254,"column":22,"offset":4252}}}],"position":{"start":{"line":254,"column":1,"offset":4231},"end":{"line":254,"column":22,"offset":4252}}},{"type":"code","lang":"python","meta":null,"value":"\r\nprint( [w*h for w in width for h in height if w*h > 10] )\r\n","position":{"start":{"line":256,"column":1,"offset":4256},"end":{"line":260,"column":4,"offset":4333}}},{"type":"paragraph","children":[{"type":"text","value":"除了列表推导，Python 中还有字典推导、集合推导等等。为了省点口水，暂且打住。","position":{"start":{"line":262,"column":1,"offset":4337},"end":{"line":262,"column":42,"offset":4378}}}],"position":{"start":{"line":262,"column":1,"offset":4337},"end":{"line":262,"column":42,"offset":4378}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"闭包","position":{"start":{"line":264,"column":3,"offset":4384},"end":{"line":264,"column":5,"offset":4386}}}],"position":{"start":{"line":264,"column":1,"offset":4382},"end":{"line":264,"column":5,"offset":4386}}},{"type":"paragraph","children":[{"type":"text","value":"闭包，洋文叫“closure”，解释在“这里”。它是 FP 的常见手法。那闭包到底有啥用捏？俺举一个微积分中，函数求导的例子。（不懂微积分或者对高数有心理阴影的同学，别担心，请把注意力集中在代码上）","position":{"start":{"line":266,"column":1,"offset":4390},"end":{"line":266,"column":100,"offset":4489}}}],"position":{"start":{"line":266,"column":1,"offset":4390},"end":{"line":266,"column":100,"offset":4489}}},{"type":"code","lang":"python","meta":null,"value":"\r\ndef d(f) :\r\n    def calc(x) :\r\n        dx = 0.000001  # 表示无穷小的Δx\r\n        return (f(x+dx) - f(x)) / dx  # 计算斜率。注意，此处引用了外层作用域的变量 f\r\n    return calc  # 此处用函数作为返回值（也就是函数 f 的导数）\r\n","position":{"start":{"line":268,"column":1,"offset":4493},"end":{"line":276,"column":4,"offset":4686}}},{"type":"paragraph","children":[{"type":"text","value":"现在，假设要计算二次函数 f(x) = x2 + x + 1 的导数，只需如下代码：","position":{"start":{"line":278,"column":1,"offset":4690},"end":{"line":278,"column":43,"offset":4732}}}],"position":{"start":{"line":278,"column":1,"offset":4690},"end":{"line":278,"column":43,"offset":4732}}},{"type":"code","lang":"python","meta":null,"value":"\r\nf = lambda x : x**2 + x + 1  # 先把二次函数用代码表达出来\r\nf1 = d(f)  # 这个f1 就是 f 的一阶导数啦。注意，导数依然是个函数\r\n","position":{"start":{"line":280,"column":1,"offset":4736},"end":{"line":285,"column":4,"offset":4843}}},{"type":"paragraph","children":[{"type":"text","value":"有了一阶导数，就可以很容易地计算该函数在某点的斜率","position":{"start":{"line":287,"column":1,"offset":4847},"end":{"line":287,"column":26,"offset":4872}}}],"position":{"start":{"line":287,"column":1,"offset":4847},"end":{"line":287,"column":26,"offset":4872}}},{"type":"paragraph","children":[{"type":"text","value":"比如要计算 x=3 的斜率，只需：","position":{"start":{"line":289,"column":1,"offset":4876},"end":{"line":289,"column":18,"offset":4893}}}],"position":{"start":{"line":289,"column":1,"offset":4876},"end":{"line":289,"column":18,"offset":4893}}},{"type":"code","lang":"python","meta":null,"value":"\r\nf1(3)\r\n","position":{"start":{"line":291,"column":1,"offset":4897},"end":{"line":295,"column":4,"offset":4922}}},{"type":"paragraph","children":[{"type":"text","value":"如果要想得到二阶导数（导数的导数），只需依样画葫芦（瞧这代码写得多优雅）","position":{"start":{"line":297,"column":1,"offset":4926},"end":{"line":297,"column":37,"offset":4962}}}],"position":{"start":{"line":297,"column":1,"offset":4926},"end":{"line":297,"column":37,"offset":4962}}},{"type":"code","lang":"python","meta":null,"value":"\r\nf2 = d(f1)\r\n","position":{"start":{"line":299,"column":1,"offset":4966},"end":{"line":303,"column":4,"offset":4996}}},{"type":"paragraph","children":[{"type":"text","value":"看到这里，大伙儿不妨设想一下：如果不用 FP，改用 OOP，上述需求该如何实现？俺觉得吧，用 OOP 来求导，这代码写起来多半是又丑又臭。","position":{"start":{"line":305,"column":1,"offset":5000},"end":{"line":305,"column":70,"offset":5069}}}],"position":{"start":{"line":305,"column":1,"offset":5000},"end":{"line":305,"column":70,"offset":5069}}},{"type":"heading","depth":1,"children":[{"type":"text","value":"结尾","position":{"start":{"line":307,"column":3,"offset":5075},"end":{"line":307,"column":5,"offset":5077}}}],"position":{"start":{"line":307,"column":1,"offset":5073},"end":{"line":307,"column":5,"offset":5077}}},{"type":"paragraph","children":[{"type":"text","value":"今天聊了不少 FP 的语法特性，可惜还是没聊完。由于俺比较懒，而且怕写得太长没人看，所以一些高级话题（比如：迭代器、生成器、等），今天就不介绍了。假如列位看官对那些玩意儿感兴趣，再抽空单独写一帖。","position":{"start":{"line":309,"column":1,"offset":5081},"end":{"line":309,"column":99,"offset":5179}}}],"position":{"start":{"line":309,"column":1,"offset":5081},"end":{"line":309,"column":99,"offset":5179}}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"RP-why-choose-python-0-overview","children":[{"type":"text","value":"回到本系列的目录","position":{"start":{"line":311,"column":2,"offset":5184},"end":{"line":311,"column":10,"offset":5192}}}],"position":{"start":{"line":311,"column":1,"offset":5183},"end":{"line":311,"column":44,"offset":5226}}}],"position":{"start":{"line":311,"column":1,"offset":5183},"end":{"line":311,"column":44,"offset":5226}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"版权声明","position":{"start":{"line":313,"column":5,"offset":5234},"end":{"line":313,"column":9,"offset":5238}}}],"position":{"start":{"line":313,"column":3,"offset":5232},"end":{"line":313,"column":11,"offset":5240}}},{"type":"html","value":"<br>","position":{"start":{"line":313,"column":11,"offset":5240},"end":{"line":313,"column":15,"offset":5244}}},{"type":"text","value":"\r\n本博客（编程随想的博客）所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者编程随想和本文原始地址：","position":{"start":{"line":313,"column":15,"offset":5244},"end":{"line":314,"column":71,"offset":5316}}},{"type":"html","value":"<br>","position":{"start":{"line":314,"column":71,"offset":5316},"end":{"line":314,"column":75,"offset":5320}}},{"type":"text","value":"\r\n","position":{"start":{"line":314,"column":75,"offset":5320},"end":{"line":315,"column":1,"offset":5322}}},{"type":"html","value":"<a href=\"https://program-think.blogspot.com/2012/02/why-choose-python-4-fp.html\">","position":{"start":{"line":315,"column":3,"offset":5324},"end":{"line":315,"column":84,"offset":5405}}},{"type":"link","title":null,"url":"https://program-think.blogspot.com/2012/02/why-choose-python-4-fp.html","children":[{"type":"text","value":"https://program-think.blogspot.com/2012/02/why-choose-python-4-fp.html","position":{"start":{"line":315,"column":84,"offset":5405},"end":{"line":315,"column":154,"offset":5475}}}],"position":{"start":{"line":315,"column":84,"offset":5405},"end":{"line":315,"column":154,"offset":5475}}},{"type":"html","value":"</a>","position":{"start":{"line":315,"column":154,"offset":5475},"end":{"line":315,"column":158,"offset":5479}}}],"position":{"start":{"line":313,"column":3,"offset":5232},"end":{"line":315,"column":158,"offset":5479}}}],"position":{"start":{"line":313,"column":1,"offset":5230},"end":{"line":315,"column":158,"offset":5479}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":316,"column":1,"offset":5481}}},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{"id":"文章目录"},"children":[{"type":"element","tagName":"a","properties":{"href":"#文章目录"},"children":[{"type":"text","value":"文章目录","position":{"start":{"line":2,"column":5,"offset":6},"end":{"line":2,"column":9,"offset":10}}}]}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":9,"offset":10}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"什么是函数式编程","position":{"start":{"line":4,"column":3,"offset":16},"end":{"line":4,"column":11,"offset":24}}}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":4,"column":11,"offset":24}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"FP 的特点","position":{"start":{"line":5,"column":3,"offset":28},"end":{"line":5,"column":9,"offset":34}}}],"position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":9,"offset":34}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"FP 的优点","position":{"start":{"line":6,"column":3,"offset":38},"end":{"line":6,"column":9,"offset":44}}}],"position":{"start":{"line":6,"column":1,"offset":36},"end":{"line":6,"column":9,"offset":44}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python 的函数语法","position":{"start":{"line":7,"column":3,"offset":48},"end":{"line":7,"column":15,"offset":60}}}],"position":{"start":{"line":7,"column":1,"offset":46},"end":{"line":7,"column":15,"offset":60}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"和 FP 相关的内置函数","position":{"start":{"line":8,"column":3,"offset":64},"end":{"line":8,"column":15,"offset":76}}}],"position":{"start":{"line":8,"column":1,"offset":62},"end":{"line":8,"column":15,"offset":76}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"消除控制流","position":{"start":{"line":9,"column":3,"offset":80},"end":{"line":9,"column":8,"offset":85}}}],"position":{"start":{"line":9,"column":1,"offset":78},"end":{"line":9,"column":8,"offset":85}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"List Comprehension","position":{"start":{"line":10,"column":3,"offset":89},"end":{"line":10,"column":21,"offset":107}}}],"position":{"start":{"line":10,"column":1,"offset":87},"end":{"line":10,"column":21,"offset":107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"闭包","position":{"start":{"line":11,"column":3,"offset":111},"end":{"line":11,"column":5,"offset":113}}}],"position":{"start":{"line":11,"column":1,"offset":109},"end":{"line":11,"column":5,"offset":113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"结尾","position":{"start":{"line":12,"column":3,"offset":117},"end":{"line":12,"column":5,"offset":119}}}],"position":{"start":{"line":12,"column":1,"offset":115},"end":{"line":12,"column":5,"offset":119}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4,"column":1,"offset":14},"end":{"line":12,"column":5,"offset":119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"春节前看到热心读者留言，提醒俺：Python 系列好久没更新了（不知不觉又过了一年多）。俺当时回复说：春节假期补上后一篇。昨天听到鞭炮声才发觉元宵已经到了，赶忙写出本文。","position":{"start":{"line":14,"column":1,"offset":123},"end":{"line":14,"column":86,"offset":208}}}],"position":{"start":{"line":14,"column":1,"offset":123},"end":{"line":14,"column":86,"offset":208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前一个帖子介绍了 Python 作为“面向对象编程”（以下简称 OOP）语言的特点，今天来聊一聊 Python 作为“函数式编程”（以下简称 FP）语言的特点。考虑到本系列面向的是 Python 的门外汉或刚入门的新手，故本文仅介绍若干浅显的 FP 特性。","position":{"start":{"line":16,"column":1,"offset":212},"end":{"line":16,"column":129,"offset":340}}}],"position":{"start":{"line":16,"column":1,"offset":212},"end":{"line":16,"column":129,"offset":340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"什么是函数式编程"},"children":[{"type":"element","tagName":"a","properties":{"href":"#什么是函数式编程"},"children":[{"type":"text","value":"什么是函数式编程","position":{"start":{"line":18,"column":3,"offset":346},"end":{"line":18,"column":11,"offset":354}}}]}],"position":{"start":{"line":18,"column":1,"offset":344},"end":{"line":18,"column":11,"offset":354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"说实话，“函数式编程语言”是一个很大的话题。由于篇幅有限，本文不可能对这个话题做全面介绍。俺干脆偷一下懒，只简单说说。","position":{"start":{"line":20,"column":1,"offset":358},"end":{"line":20,"column":60,"offset":417}}}],"position":{"start":{"line":20,"column":1,"offset":358},"end":{"line":20,"column":60,"offset":417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从字面上看，所谓的函数式编程，就是以“函数”为中心的“编程范式”。估计有同学又会问了，啥是“编程范式”捏？哎呦，这又是一个很大的话题。通俗来讲，“编程范式”就是指编程的套路。比方说大家很熟悉的 OOP，就是一种“编程范式”。FP 跟 OOP 一样，都是一种编程的套路。做个简单类比：OOP 以“对象/类”作为程序设计的核心，而 FP 以“函数”作为程序设计的核心。","position":{"start":{"line":22,"column":1,"offset":421},"end":{"line":22,"column":183,"offset":603}}}],"position":{"start":{"line":22,"column":1,"offset":421},"end":{"line":22,"column":183,"offset":603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"fp的特点"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fp的特点"},"children":[{"type":"text","value":"FP的特点","position":{"start":{"line":24,"column":3,"offset":609},"end":{"line":24,"column":8,"offset":614}}}]}],"position":{"start":{"line":24,"column":1,"offset":607},"end":{"line":24,"column":8,"offset":614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"既然说到 FP，自然要稍微说一下 FP 的特色。","position":{"start":{"line":26,"column":1,"offset":618},"end":{"line":26,"column":25,"offset":642}}}],"position":{"start":{"line":26,"column":1,"offset":618},"end":{"line":26,"column":25,"offset":642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"函数很牛x"},"children":[{"type":"element","tagName":"a","properties":{"href":"#函数很牛x"},"children":[{"type":"text","value":"函数很牛X","position":{"start":{"line":28,"column":4,"offset":649},"end":{"line":28,"column":9,"offset":654}}}]}],"position":{"start":{"line":28,"column":1,"offset":646},"end":{"line":28,"column":9,"offset":654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"刚才说了，FP 是以函数为中心。既然如此，在支持 FP 的语言中，函数的功能自然十分牛X。通俗地说，OOP 语言中，类/对象能干的事情，FP 语言中的函数也能干。下面做一些对比，以加深大伙儿的印象。","position":{"start":{"line":30,"column":1,"offset":658},"end":{"line":30,"column":100,"offset":757}}}],"position":{"start":{"line":30,"column":1,"offset":658},"end":{"line":30,"column":100,"offset":757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OOP 中，对象可以互相赋值；FP 中，函数可以互相赋值。","position":{"start":{"line":32,"column":1,"offset":761},"end":{"line":32,"column":30,"offset":790}}}],"position":{"start":{"line":32,"column":1,"offset":761},"end":{"line":32,"column":30,"offset":790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OOP 中，对象可以作为函数的参数/返回值，FP 中，函数可以作为函数的参数/返回值。","position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":44,"offset":837}}}],"position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":44,"offset":837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"某些 OOP 中，类可以嵌套定义；FP 中，函数可以嵌套定义。","position":{"start":{"line":36,"column":1,"offset":841},"end":{"line":36,"column":32,"offset":872}}}],"position":{"start":{"line":36,"column":1,"offset":841},"end":{"line":36,"column":32,"offset":872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"某些 OOP 中，可以有匿名类；FP 中，可以有匿名函数。","position":{"start":{"line":38,"column":1,"offset":876},"end":{"line":38,"column":30,"offset":905}}}],"position":{"start":{"line":38,"column":1,"offset":876},"end":{"line":38,"column":30,"offset":905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"避免副作用"},"children":[{"type":"element","tagName":"a","properties":{"href":"#避免副作用"},"children":[{"type":"text","value":"避免副作用","position":{"start":{"line":40,"column":4,"offset":912},"end":{"line":40,"column":9,"offset":917}}}]}],"position":{"start":{"line":40,"column":1,"offset":909},"end":{"line":40,"column":9,"offset":917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 FP 中，特别强调函数不要有“副作用”（洋文叫“side effect”）。没有副作用的函数，又称之为纯函数（pure function）。其输出完全依赖于输入。换句话说，只要输入一样，输出就一样。","position":{"start":{"line":42,"column":1,"offset":921},"end":{"line":42,"column":102,"offset":1022}}}],"position":{"start":{"line":42,"column":1,"offset":921},"end":{"line":42,"column":102,"offset":1022}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"要成为纯函数，函数内部不能读写函数外部变量、不能有设备 I/O（比如读写文件）......","position":{"start":{"line":44,"column":1,"offset":1026},"end":{"line":44,"column":46,"offset":1071}}}],"position":{"start":{"line":44,"column":1,"offset":1026},"end":{"line":44,"column":46,"offset":1071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"无副作用是 FP 的重要特性。FP的很多优点来自于此特性。","position":{"start":{"line":46,"column":1,"offset":1075},"end":{"line":46,"column":30,"offset":1104}}}],"position":{"start":{"line":46,"column":1,"offset":1075},"end":{"line":46,"column":30,"offset":1104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"避免控制流"},"children":[{"type":"element","tagName":"a","properties":{"href":"#避免控制流"},"children":[{"type":"text","value":"避免控制流","position":{"start":{"line":48,"column":4,"offset":1111},"end":{"line":48,"column":9,"offset":1116}}}]}],"position":{"start":{"line":48,"column":1,"offset":1108},"end":{"line":48,"column":9,"offset":1116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 FP 中，尽量避免用控制流语句（循环语句、判断语句）。对于控制流语句，FP 有另外的替代方式。比如：常用递归或高阶函数来替代循环。如此一来，FP 的代码会显得更简洁，更可读。","position":{"start":{"line":50,"column":1,"offset":1120},"end":{"line":50,"column":90,"offset":1209}}}],"position":{"start":{"line":50,"column":1,"offset":1120},"end":{"line":50,"column":90,"offset":1209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"多态"},"children":[{"type":"element","tagName":"a","properties":{"href":"#多态"},"children":[{"type":"text","value":"多态","position":{"start":{"line":52,"column":4,"offset":1216},"end":{"line":52,"column":6,"offset":1218}}}]}],"position":{"start":{"line":52,"column":1,"offset":1213},"end":{"line":52,"column":6,"offset":1218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大部分支持 FP 的语言，也都支持多态。函数参数支持多态化，便可实现非常灵活的功能。","position":{"start":{"line":54,"column":1,"offset":1222},"end":{"line":54,"column":43,"offset":1264}}}],"position":{"start":{"line":54,"column":1,"offset":1222},"end":{"line":54,"column":43,"offset":1264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"说了这么多，不知道大伙儿明白了没？还是没整明白的同学，请看维基百科的英文词条（中文词条太简单，看不明白滴）。","position":{"start":{"line":56,"column":1,"offset":1268},"end":{"line":56,"column":55,"offset":1322}}}],"position":{"start":{"line":56,"column":1,"offset":1268},"end":{"line":56,"column":55,"offset":1322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"洋文实在看不下去吗？那不妨看看 IT 大牛 Joel 写的《你的编程语言能这样做吗？》（中文版在“这里”）。此文以 JavaScript 来阐述 FP 的妙处。","position":{"start":{"line":58,"column":1,"offset":1326},"end":{"line":58,"column":81,"offset":1406}}}],"position":{"start":{"line":58,"column":1,"offset":1326},"end":{"line":58,"column":81,"offset":1406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"fp-的优点"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fp-的优点"},"children":[{"type":"text","value":"FP 的优点","position":{"start":{"line":60,"column":3,"offset":1412},"end":{"line":60,"column":9,"offset":1418}}}]}],"position":{"start":{"line":60,"column":1,"offset":1410},"end":{"line":60,"column":9,"offset":1418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"再稍微说一下 FP 的好处，以强化大伙儿学习的动力。","position":{"start":{"line":62,"column":1,"offset":1422},"end":{"line":62,"column":27,"offset":1448}}}],"position":{"start":{"line":62,"column":1,"offset":1422},"end":{"line":62,"column":27,"offset":1448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"模块化"},"children":[{"type":"element","tagName":"a","properties":{"href":"#模块化"},"children":[{"type":"text","value":"模块化","position":{"start":{"line":64,"column":4,"offset":1455},"end":{"line":64,"column":7,"offset":1458}}}]}],"position":{"start":{"line":64,"column":1,"offset":1452},"end":{"line":64,"column":7,"offset":1458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 FP 的思想中，函数最好是“纯”的，而且最好只完成“单一”的任务。在这种指导思想下，函数的模块化程度自然就高。","position":{"start":{"line":66,"column":1,"offset":1462},"end":{"line":66,"column":58,"offset":1519}}}],"position":{"start":{"line":66,"column":1,"offset":1462},"end":{"line":66,"column":58,"offset":1519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"可复用性"},"children":[{"type":"element","tagName":"a","properties":{"href":"#可复用性"},"children":[{"type":"text","value":"可复用性","position":{"start":{"line":68,"column":4,"offset":1526},"end":{"line":68,"column":8,"offset":1530}}}]}],"position":{"start":{"line":68,"column":1,"offset":1523},"end":{"line":68,"column":8,"offset":1530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"模块化程度高，直接的好处就是可复用性好。","position":{"start":{"line":70,"column":1,"offset":1534},"end":{"line":70,"column":21,"offset":1554}}}],"position":{"start":{"line":70,"column":1,"offset":1534},"end":{"line":70,"column":21,"offset":1554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"可读性"},"children":[{"type":"element","tagName":"a","properties":{"href":"#可读性"},"children":[{"type":"text","value":"可读性","position":{"start":{"line":72,"column":4,"offset":1561},"end":{"line":72,"column":7,"offset":1564}}}]}],"position":{"start":{"line":72,"column":1,"offset":1558},"end":{"line":72,"column":7,"offset":1564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"刚才说了，FP 的思想强调函数又纯又小。这样的函数，代码的可读性自然好，修改起来也方便。","position":{"start":{"line":74,"column":1,"offset":1568},"end":{"line":74,"column":45,"offset":1612}}}],"position":{"start":{"line":74,"column":1,"offset":1568},"end":{"line":74,"column":45,"offset":1612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"易于调试"},"children":[{"type":"element","tagName":"a","properties":{"href":"#易于调试"},"children":[{"type":"text","value":"易于调试","position":{"start":{"line":76,"column":4,"offset":1619},"end":{"line":76,"column":8,"offset":1623}}}]}],"position":{"start":{"line":76,"column":1,"offset":1616},"end":{"line":76,"column":8,"offset":1623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"前面提到了纯函数。如果你的程序中大部分函数都是纯函数，则调试 Bug 会容易很多。像 OOP 中，类的多个成员函数都可以修改类的成员变量，有时候会导致调试极其困难。而纯函数没有此问题。","position":{"start":{"line":78,"column":1,"offset":1627},"end":{"line":78,"column":93,"offset":1719}}}],"position":{"start":{"line":78,"column":1,"offset":1627},"end":{"line":78,"column":93,"offset":1719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外，多线程是调试的一大噩梦。当年俺还专门写过帖子，介绍 C++ 多线程的注意事项（在“这里”）。而纯函数由于没有副作用，不必担心各种“互斥”、“死锁”等问题。","position":{"start":{"line":80,"column":1,"offset":1723},"end":{"line":80,"column":81,"offset":1803}}}],"position":{"start":{"line":80,"column":1,"offset":1723},"end":{"line":80,"column":81,"offset":1803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"易于测试"},"children":[{"type":"element","tagName":"a","properties":{"href":"#易于测试"},"children":[{"type":"text","value":"易于测试","position":{"start":{"line":82,"column":4,"offset":1810},"end":{"line":82,"column":8,"offset":1814}}}]}],"position":{"start":{"line":82,"column":1,"offset":1807},"end":{"line":82,"column":8,"offset":1814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"除了易于调试，纯函数的输出仅仅依赖于输入，这一特点注定了它很容易进行单元测试。","position":{"start":{"line":84,"column":1,"offset":1818},"end":{"line":84,"column":40,"offset":1857}}}],"position":{"start":{"line":84,"column":1,"offset":1818},"end":{"line":84,"column":40,"offset":1857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"适合并行"},"children":[{"type":"element","tagName":"a","properties":{"href":"#适合并行"},"children":[{"type":"text","value":"适合并行","position":{"start":{"line":86,"column":4,"offset":1864},"end":{"line":86,"column":8,"offset":1868}}}]}],"position":{"start":{"line":86,"column":1,"offset":1861},"end":{"line":86,"column":8,"offset":1868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 FP 中，由于纯函数无副作用，很适合编写并行处理的代码。最典型并且在工业界获得巨大成功的例子就是 Erlang。","position":{"start":{"line":88,"column":1,"offset":1872},"end":{"line":88,"column":59,"offset":1930}}}],"position":{"start":{"line":88,"column":1,"offset":1872},"end":{"line":88,"column":59,"offset":1930}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"其它"},"children":[{"type":"element","tagName":"a","properties":{"href":"#其它"},"children":[{"type":"text","value":"其它","position":{"start":{"line":90,"column":4,"offset":1937},"end":{"line":90,"column":6,"offset":1939}}}]}],"position":{"start":{"line":90,"column":1,"offset":1934},"end":{"line":90,"column":6,"offset":1939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当然啦，FP 的好处远不止上述这些（比如还有：利于形式化证明）。限于篇幅，俺就不展开了。","position":{"start":{"line":92,"column":1,"offset":1943},"end":{"line":92,"column":45,"offset":1987}}}],"position":{"start":{"line":92,"column":1,"offset":1943},"end":{"line":92,"column":45,"offset":1987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"python-的函数语法"},"children":[{"type":"element","tagName":"a","properties":{"href":"#python-的函数语法"},"children":[{"type":"text","value":"Python 的函数语法","position":{"start":{"line":94,"column":3,"offset":1993},"end":{"line":94,"column":15,"offset":2005}}}]}],"position":{"start":{"line":94,"column":1,"offset":1991},"end":{"line":94,"column":15,"offset":2005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 中，常见的函数定义和函数调用，想必各位都晓得了。下面说几种不太常见的，且跟 FP 有关的语法。","position":{"start":{"line":96,"column":1,"offset":2009},"end":{"line":96,"column":55,"offset":2063}}}],"position":{"start":{"line":96,"column":1,"offset":2009},"end":{"line":96,"column":55,"offset":2063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"函数赋值"},"children":[{"type":"element","tagName":"a","properties":{"href":"#函数赋值"},"children":[{"type":"text","value":"函数赋值","position":{"start":{"line":98,"column":4,"offset":2070},"end":{"line":98,"column":8,"offset":2074}}}]}],"position":{"start":{"line":98,"column":1,"offset":2067},"end":{"line":98,"column":8,"offset":2074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 可以把函数直接赋值给一个变量。举例如下：","position":{"start":{"line":100,"column":1,"offset":2078},"end":{"line":100,"column":28,"offset":2105}}}],"position":{"start":{"line":100,"column":1,"offset":2078},"end":{"line":100,"column":28,"offset":2105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" square"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(n) :  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 这是一个计算平方的小函数，后面会反复用它举例"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" n "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"**"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 2"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" square  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 此处赋值给变量 f"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f("}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 此处返回100。注意：对该变量使用小括号，等同于调用函数"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"匿名定义"},"children":[{"type":"element","tagName":"a","properties":{"href":"#匿名定义"},"children":[{"type":"text","value":"匿名定义","position":{"start":{"line":112,"column":4,"offset":2262},"end":{"line":112,"column":8,"offset":2266}}}]}],"position":{"start":{"line":112,"column":1,"offset":2259},"end":{"line":112,"column":8,"offset":2266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 可以用 lambda 关键字定义【单行】的匿名函数。套用刚才的例子","position":{"start":{"line":114,"column":1,"offset":2270},"end":{"line":114,"column":41,"offset":2310}}}],"position":{"start":{"line":114,"column":1,"offset":2270},"end":{"line":114,"column":41,"offset":2310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"square "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":" lambda"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" x : x"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"**"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"  # 定义一个单参数的匿名函数，并把该函数赋值给变量"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"square("}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"10"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 此处返回 100"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"嵌套定义"},"children":[{"type":"element","tagName":"a","properties":{"href":"#嵌套定义"},"children":[{"type":"text","value":"嵌套定义","position":{"start":{"line":123,"column":4,"offset":2416},"end":{"line":123,"column":8,"offset":2420}}}]}],"position":{"start":{"line":123,"column":1,"offset":2413},"end":{"line":123,"column":8,"offset":2420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 支持函数的嵌套定义（请看如下例子）。这种语法，在“闭包”中经常出现（后面会具体介绍“闭包”）。","position":{"start":{"line":125,"column":1,"offset":2424},"end":{"line":125,"column":55,"offset":2478}}}],"position":{"start":{"line":125,"column":1,"offset":2424},"end":{"line":125,"column":55,"offset":2478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" outer"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"() :  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 外层函数"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"    s "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" \"hello\""}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" inner"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"() :  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 内层函数"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"        print"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(s)  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 此处引用的是外层作用域的变量"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"    inner()  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 输出 hello"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"    s "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" \"world\""}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"    inner()  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 输出 world"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"和-fp-相关的内置函数"},"children":[{"type":"element","tagName":"a","properties":{"href":"#和-fp-相关的内置函数"},"children":[{"type":"text","value":"和 FP 相关的内置函数","position":{"start":{"line":140,"column":3,"offset":2678},"end":{"line":140,"column":15,"offset":2690}}}]}],"position":{"start":{"line":140,"column":1,"offset":2676},"end":{"line":140,"column":15,"offset":2690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python 内置了一大坨用于 FP 的函数，以方便程序猿写出简洁的代码。在接下去聊之前，俺有必要先介绍其中的2个。","position":{"start":{"line":142,"column":1,"offset":2694},"end":{"line":142,"column":59,"offset":2752}}}],"position":{"start":{"line":142,"column":1,"offset":2694},"end":{"line":142,"column":59,"offset":2752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"mapfunc-iter"},"children":[{"type":"element","tagName":"a","properties":{"href":"#mapfunc-iter"},"children":[{"type":"text","value":"map(func, iter)","position":{"start":{"line":144,"column":4,"offset":2759},"end":{"line":144,"column":19,"offset":2774}}}]}],"position":{"start":{"line":144,"column":1,"offset":2756},"end":{"line":144,"column":19,"offset":2774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为了省事，俺只介绍2参数的 map（正宗的 map 支持 N 参数）。","position":{"start":{"line":146,"column":1,"offset":2778},"end":{"line":146,"column":36,"offset":2813}}}],"position":{"start":{"line":146,"column":1,"offset":2778},"end":{"line":146,"column":36,"offset":2813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"参数 func 是个函数，参数 iter 是个迭代器（也可以理解为集合）","position":{"start":{"line":148,"column":1,"offset":2817},"end":{"line":148,"column":37,"offset":2853}}}],"position":{"start":{"line":148,"column":1,"offset":2817},"end":{"line":148,"column":37,"offset":2853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"map() 会把 iter 的每个元素传给 func，并把每次调用的结果保存到一个 list 中，然后返回此 list。","position":{"start":{"line":150,"column":1,"offset":2857},"end":{"line":150,"column":61,"offset":2917}}}],"position":{"start":{"line":150,"column":1,"offset":2857},"end":{"line":150,"column":61,"offset":2917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"举例：","position":{"start":{"line":152,"column":1,"offset":2921},"end":{"line":152,"column":4,"offset":2924}}}],"position":{"start":{"line":152,"column":1,"offset":2921},"end":{"line":152,"column":4,"offset":2924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"挨个计算整数 list 的平方：","position":{"start":{"line":154,"column":1,"offset":2928},"end":{"line":154,"column":17,"offset":2944}}}],"position":{"start":{"line":154,"column":1,"offset":2928},"end":{"line":154,"column":17,"offset":2944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"map"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(square, ["}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"])  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 返回 [1, 4, 9]"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"filterfunc-iter"},"children":[{"type":"element","tagName":"a","properties":{"href":"#filterfunc-iter"},"children":[{"type":"text","value":"filter(func, iter)","position":{"start":{"line":162,"column":4,"offset":3013},"end":{"line":162,"column":22,"offset":3031}}}]}],"position":{"start":{"line":162,"column":1,"offset":3010},"end":{"line":162,"column":22,"offset":3031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"参数含义同 map","position":{"start":{"line":164,"column":1,"offset":3035},"end":{"line":164,"column":10,"offset":3044}}}],"position":{"start":{"line":164,"column":1,"offset":3035},"end":{"line":164,"column":10,"offset":3044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"filter() 会把 iter 的每个元素传给 func，如果 func 返回结果为 True，就把元素保存在一个 list 中，最后返回此 list。","position":{"start":{"line":166,"column":1,"offset":3048},"end":{"line":166,"column":78,"offset":3125}}}],"position":{"start":{"line":166,"column":1,"offset":3048},"end":{"line":166,"column":78,"offset":3125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"举例：","position":{"start":{"line":168,"column":1,"offset":3129},"end":{"line":168,"column":4,"offset":3132}}}],"position":{"start":{"line":168,"column":1,"offset":3129},"end":{"line":168,"column":4,"offset":3132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"要过滤出所有奇数，代码如下：","position":{"start":{"line":170,"column":1,"offset":3136},"end":{"line":170,"column":15,"offset":3150}}}],"position":{"start":{"line":170,"column":1,"offset":3136},"end":{"line":170,"column":15,"offset":3150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" odd"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(n) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" (n"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":") "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"=="}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 1"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"filter"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(odd, ["}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"])  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 返回[1, 3]"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"此处可以用上 lambda，把代码简化为一行：","position":{"start":{"line":181,"column":1,"offset":3251},"end":{"line":181,"column":24,"offset":3274}}}],"position":{"start":{"line":181,"column":1,"offset":3251},"end":{"line":181,"column":24,"offset":3274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"filter"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" n: (n"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"=="}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", lst)"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"消除控制流"},"children":[{"type":"element","tagName":"a","properties":{"href":"#消除控制流"},"children":[{"type":"text","value":"消除控制流","position":{"start":{"line":187,"column":3,"offset":3331},"end":{"line":187,"column":8,"offset":3336}}}]}],"position":{"start":{"line":187,"column":1,"offset":3329},"end":{"line":187,"column":8,"offset":3336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为了让大伙儿更深刻体会 FP 风格同传统风格的差别，俺把刚才两个例子组合一下——要求返回整数list 中所有奇数的平方。","position":{"start":{"line":189,"column":1,"offset":3340},"end":{"line":189,"column":61,"offset":3400}}}],"position":{"start":{"line":189,"column":1,"offset":3340},"end":{"line":189,"column":61,"offset":3400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"传统的写法（有控制流）：","position":{"start":{"line":191,"column":1,"offset":3404},"end":{"line":191,"column":13,"offset":3416}}}],"position":{"start":{"line":191,"column":1,"offset":3404},"end":{"line":191,"column":13,"offset":3416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" func1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(old_lst) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"    new_lst "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" []"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" n "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" old_lst :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"        if"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" odd(n) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"            new_lst.append(square(n))"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" new_lst"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"FP 的写法（无控制流）：","position":{"start":{"line":204,"column":1,"offset":3586},"end":{"line":204,"column":14,"offset":3599}}}],"position":{"start":{"line":204,"column":1,"offset":3586},"end":{"line":204,"column":14,"offset":3599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" func2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(lst) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" map"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(square, "}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"filter"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(odd, lst))"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"怎么样？是不是更简洁？连 for / if 这两个关键字都不需要了。","position":{"start":{"line":213,"column":1,"offset":3685},"end":{"line":213,"column":35,"offset":3719}}}],"position":{"start":{"line":213,"column":1,"offset":3685},"end":{"line":213,"column":35,"offset":3719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"list-comprehension"},"children":[{"type":"element","tagName":"a","properties":{"href":"#list-comprehension"},"children":[{"type":"text","value":"List Comprehension","position":{"start":{"line":215,"column":3,"offset":3725},"end":{"line":215,"column":21,"offset":3743}}}]}],"position":{"start":{"line":215,"column":1,"offset":3723},"end":{"line":215,"column":21,"offset":3743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个洋文比较难翻译。有人叫做“列表推导”，也有人称为“列表展开”或“列表解析”。（俺比较喜欢头一个翻译——不禁让人联想到“推倒”:）","position":{"start":{"line":217,"column":1,"offset":3747},"end":{"line":217,"column":67,"offset":3813}}}],"position":{"start":{"line":217,"column":1,"offset":3747},"end":{"line":217,"column":67,"offset":3813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 Python 中，这是一个很好吃的语法糖——可以让你写出很简洁、很优雅的代码。","position":{"start":{"line":219,"column":1,"offset":3817},"end":{"line":219,"column":42,"offset":3858}}}],"position":{"start":{"line":219,"column":1,"offset":3817},"end":{"line":219,"column":42,"offset":3858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"举例1：","position":{"start":{"line":221,"column":1,"offset":3862},"end":{"line":221,"column":5,"offset":3866}}}],"position":{"start":{"line":221,"column":1,"offset":3862},"end":{"line":221,"column":5,"offset":3866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"还拿刚才过滤奇数的例子。","position":{"start":{"line":223,"column":1,"offset":3870},"end":{"line":223,"column":13,"offset":3882}}}],"position":{"start":{"line":223,"column":1,"offset":3870},"end":{"line":223,"column":13,"offset":3882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"filter"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"lambda"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" n: (n"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"=="}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":", lst)"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上述写法可以等价替换为列表推导：","position":{"start":{"line":231,"column":1,"offset":3941},"end":{"line":231,"column":17,"offset":3957}}}],"position":{"start":{"line":231,"column":1,"offset":3941},"end":{"line":231,"column":17,"offset":3957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"[n "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" n "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" lst "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"if"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" (n"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"=="}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"]"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"举例2：\r\n　　\r\n再来一个稍微复杂的例子。假设有两个整数 list，分别存储矩形的宽度和高度。现在想把所有的宽度和高度进行两两组合，把大于 10 的面积打印出来。\r\n　　\r\n传统的写法（2层循环，4行代码）","position":{"start":{"line":239,"column":1,"offset":4013},"end":{"line":243,"column":17,"offset":4117}}}],"position":{"start":{"line":239,"column":1,"offset":4013},"end":{"line":243,"column":17,"offset":4117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" w "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" width :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" h "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" height :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"        if"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" w"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"*"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"h "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 10"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"            print"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(w"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"*"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"h)"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"FP 的写法（无循环，1行代码，多精致啊）","position":{"start":{"line":254,"column":1,"offset":4231},"end":{"line":254,"column":22,"offset":4252}}}],"position":{"start":{"line":254,"column":1,"offset":4231},"end":{"line":254,"column":22,"offset":4252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"( [w"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"*"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"h "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" w "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" width "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"for"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" h "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"in"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" height "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"if"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" w"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"*"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"h "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 10"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"] )"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"除了列表推导，Python 中还有字典推导、集合推导等等。为了省点口水，暂且打住。","position":{"start":{"line":262,"column":1,"offset":4337},"end":{"line":262,"column":42,"offset":4378}}}],"position":{"start":{"line":262,"column":1,"offset":4337},"end":{"line":262,"column":42,"offset":4378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"闭包"},"children":[{"type":"element","tagName":"a","properties":{"href":"#闭包"},"children":[{"type":"text","value":"闭包","position":{"start":{"line":264,"column":3,"offset":4384},"end":{"line":264,"column":5,"offset":4386}}}]}],"position":{"start":{"line":264,"column":1,"offset":4382},"end":{"line":264,"column":5,"offset":4386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"闭包，洋文叫“closure”，解释在“这里”。它是 FP 的常见手法。那闭包到底有啥用捏？俺举一个微积分中，函数求导的例子。（不懂微积分或者对高数有心理阴影的同学，别担心，请把注意力集中在代码上）","position":{"start":{"line":266,"column":1,"offset":4390},"end":{"line":266,"column":100,"offset":4489}}}],"position":{"start":{"line":266,"column":1,"offset":4390},"end":{"line":266,"column":100,"offset":4489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" d"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(f) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    def"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":" calc"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"(x) :"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"        dx "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 0.000001"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"  # 表示无穷小的Δx"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"        return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" (f(x"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"+"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"dx) "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"-"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" f(x)) "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"/"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" dx  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 计算斜率。注意，此处引用了外层作用域的变量 f"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"    return"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" calc  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 此处用函数作为返回值（也就是函数 f 的导数）"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在，假设要计算二次函数 f(x) = x2 + x + 1 的导数，只需如下代码：","position":{"start":{"line":278,"column":1,"offset":4690},"end":{"line":278,"column":43,"offset":4732}}}],"position":{"start":{"line":278,"column":1,"offset":4690},"end":{"line":278,"column":43,"offset":4732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":" lambda"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" x : x"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"**"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":" +"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" x "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"+"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" 1"}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"  # 先把二次函数用代码表达出来"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f1 "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" d(f)  "}]},{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# 这个f1 就是 f 的一阶导数啦。注意，导数依然是个函数"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"有了一阶导数，就可以很容易地计算该函数在某点的斜率","position":{"start":{"line":287,"column":1,"offset":4847},"end":{"line":287,"column":26,"offset":4872}}}],"position":{"start":{"line":287,"column":1,"offset":4847},"end":{"line":287,"column":26,"offset":4872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"比如要计算 x=3 的斜率，只需：","position":{"start":{"line":289,"column":1,"offset":4876},"end":{"line":289,"column":18,"offset":4893}}}],"position":{"start":{"line":289,"column":1,"offset":4876},"end":{"line":289,"column":18,"offset":4893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f1("}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":")"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果要想得到二阶导数（导数的导数），只需依样画葫芦（瞧这代码写得多优雅）","position":{"start":{"line":297,"column":1,"offset":4926},"end":{"line":297,"column":37,"offset":4962}}}],"position":{"start":{"line":297,"column":1,"offset":4926},"end":{"line":297,"column":37,"offset":4962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"f2 "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" d(f1)"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"看到这里，大伙儿不妨设想一下：如果不用 FP，改用 OOP，上述需求该如何实现？俺觉得吧，用 OOP 来求导，这代码写起来多半是又丑又臭。","position":{"start":{"line":305,"column":1,"offset":5000},"end":{"line":305,"column":70,"offset":5069}}}],"position":{"start":{"line":305,"column":1,"offset":5000},"end":{"line":305,"column":70,"offset":5069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"结尾"},"children":[{"type":"element","tagName":"a","properties":{"href":"#结尾"},"children":[{"type":"text","value":"结尾","position":{"start":{"line":307,"column":3,"offset":5075},"end":{"line":307,"column":5,"offset":5077}}}]}],"position":{"start":{"line":307,"column":1,"offset":5073},"end":{"line":307,"column":5,"offset":5077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"今天聊了不少 FP 的语法特性，可惜还是没聊完。由于俺比较懒，而且怕写得太长没人看，所以一些高级话题（比如：迭代器、生成器、等），今天就不介绍了。假如列位看官对那些玩意儿感兴趣，再抽空单独写一帖。","position":{"start":{"line":309,"column":1,"offset":5081},"end":{"line":309,"column":99,"offset":5179}}}],"position":{"start":{"line":309,"column":1,"offset":5081},"end":{"line":309,"column":99,"offset":5179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"RP-why-choose-python-0-overview"},"children":[{"type":"text","value":"回到本系列的目录","position":{"start":{"line":311,"column":2,"offset":5184},"end":{"line":311,"column":10,"offset":5192}}}],"position":{"start":{"line":311,"column":1,"offset":5183},"end":{"line":311,"column":44,"offset":5226}}}],"position":{"start":{"line":311,"column":1,"offset":5183},"end":{"line":311,"column":44,"offset":5226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"版权声明","position":{"start":{"line":313,"column":5,"offset":5234},"end":{"line":313,"column":9,"offset":5238}}}],"position":{"start":{"line":313,"column":3,"offset":5232},"end":{"line":313,"column":11,"offset":5240}}},{"type":"text","value":"\r\n本博客（编程随想的博客）所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者编程随想和本文原始地址：","position":{"start":{"line":313,"column":15,"offset":5244},"end":{"line":314,"column":71,"offset":5316}}},{"type":"text","value":"\r\n","position":{"start":{"line":314,"column":75,"offset":5320},"end":{"line":315,"column":1,"offset":5322}}},{"type":"element","tagName":"a","properties":{"href":"https://program-think.blogspot.com/2012/02/why-choose-python-4-fp.html"},"children":[{"type":"text","value":"https://program-think.blogspot.com/2012/02/why-choose-python-4-fp.html","position":{"start":{"line":315,"column":84,"offset":5405},"end":{"line":315,"column":154,"offset":5475}}}],"position":{"start":{"line":315,"column":84,"offset":5405},"end":{"line":315,"column":154,"offset":5475}}}],"position":{"start":{"line":313,"column":3,"offset":5232},"end":{"line":315,"column":158,"offset":5479}}},{"type":"text","value":"\n"}],"position":{"start":{"line":313,"column":1,"offset":5230},"end":{"line":315,"column":158,"offset":5479}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":316,"column":1,"offset":5481}}}},"__N_SSG":true}