{"pageProps":{"metadata":{"slug":"python-import-script-module-package","date":"2021-12-11","title":".py | import 引用现成的代码","filename":"2021-12-11-python-import-script-module-package.md","url":"python-import-script-module-package","layout":"post","keywords":["md","py"],"excerpt":"正常的编程语言教程，教人配置完开发环境之后就应该进入正题，开始讲语法了。但是咱不正常，所以先来谈谈怎么用别人已经写好的代码。","content":"\r\n以官网给出的文件结构为例来说明：\r\n\r\n```\r\n\r\nsound/                          Top-level package\r\n      __init__.py               Initialize the sound package\r\n      formats/                  Subpackage for file format conversions\r\n              __init__.py\r\n              wavread.py\r\n              wavwrite.py\r\n              aiffread.py\r\n              aiffwrite.py\r\n              auread.py\r\n              auwrite.py\r\n              ...\r\n      effects/                  Subpackage for sound effects\r\n              __init__.py\r\n              echo.py\r\n              surround.py\r\n              reverse.py\r\n              ...\r\n      filters/                  Subpackage for filters\r\n              __init__.py\r\n              equalizer.py\r\n              vocoder.py\r\n              karaoke.py\r\n              ...\r\n```\r\n\r\n## 使用现成的 python 代码\r\n\r\n正常的编程语言教程，教人配置完开发环境之后就应该进入正题，开始讲语法了。但是咱不正常，所以先来谈谈怎么用别人已经写好的代码。其中最简单的，就是可以直接通过包管理程序安装的：\r\n\r\n```bash\r\n\r\npip install sound\r\n```\r\n\r\n然后想要使用某个文件中的函数，比如假装 `wavwrite.py` 中有个函数叫 `write()`，以下写法都是可以的，注意不同 import 方法对应不同的函数调用写法：\r\n\r\n```python\r\n\r\nimport sound\r\nsound.formats.wavwrite.write()\r\n\r\nfrom sound import formats\r\nformats.wavwrite.write() \r\n\r\nfrom sound.formats import wavwrite\r\nwavwrite.write()\r\n\r\nfrom sound.formats.wavwrite import write\r\nwrite()\r\n```\r\n\r\n但是，不是所有的 python 代码都可以直接安装，比如一篇论文的研究成果发表之后，处理数据的代码也往往开源，但是这些作者基本上就只是把自己写代码的文件夹公开出来而已，我们把文件夹下载下来，然后直接 `import sound`, 会报错，提示找不到名为 sound 的库。\r\n\r\n## python 如何读取代码文件\r\n\r\n仔细想想，找不到才是正常的，之前轻轻松松的一句 `import sound`就解决问题，这才不简单——不同的库往往位于文件系统的不同位置，但我们只要写出他们的名字就行了，不需要指定文件路径。电脑硬盘那么大，找到库却几乎是瞬间完成的。\r\n\r\n这是因为 python 并没有搜索整个硬盘。有一个变量，一般名为 `PYTHONPATH`，其变量值是一个列表，表中成员是含有 python 库文件夹的路径。当我们在命令行输入命令的时候，电脑会：\r\n\r\n- 搜索当前所在的文件夹，也就是在命令行输入 `python` 时终端所在的文件夹。\r\n- 遍历 `PYTHONPATH` 中的文件夹。\r\n- python 包管理程序默认的位置，一般是 `<path to python>/site-package`。\r\n\r\n看看有没有我们要引用的库，找到了就引入，找不到就报错。\r\n\r\n上一节的错误中，如果我们恰好位于 sound 所在的文件夹，然后运行 python，此时第一条生效， `import sound` 不会报错，但在其他位置就不行了。\r\n\r\n## 名词解释：interactive, script, module, package\r\n\r\n可执行的 python 命令可以出现在以下四个地方，第一种是接受键盘输入的程序，后三种都是文件：\r\n\r\n1. interactive: python **交互式界面**，也叫做 calculator mode，也就是在命令行输入 `python`之后出现的界面。每次输入一句，结果在命令行上显示出来。当 python 退出之后，输入过的命令就消失了。\r\n2. script: python **脚本**文件，也就是在命令行输入 `python somefile.py`里面的那个`somefile.py`。\r\n    1. 毕竟 python 是一种很轻量化的语言，在一定程度上可以起到 shell 的作用，有些命令我们并不想要用完就扔，而是保存起来以便以后重复执行，另外很多命令的组合组合成函数也可以极大地简化工作。在这种语境之下, interactive 和 script 的关系，就好像 Linux 命令行和 bash script 的关系一样。\r\n    2. 但同时 python 又是一种功能很全面的语言，完全可以胜任复杂的面向对象编程。在这种语境之下，script 也可以用来指代 main module，也就是程序执行的主文件和入口，和下面的一般的 module 相区分。\r\n3. module: python **模块**文件，也就是在命令行输入 `python -m another` 里面的那个 `another`（注意这里不写拓展名 `.py`）。按照官方文档的说法，所有 `.py` 文件都是 module。但是实际上这句话很有误导性，上一节的 main module 和一般的 module 非常不同，下一节会详细展开讲。一般提到 module，都是在强调这个文件定义的变量和函数可以被其他的 python 文件引用。\r\n4. package: python **包**，互相关联的 modules 构成的更高一级的可供引用的结构，简单理解就是含有 `__init__.py` 的文件夹，但是 python 并不是根据文件夹和文件之间的从属关系来确定 package 和 module 之间的关系的，下一节会详细展开讲。\r\n\r\n## script vs. module\r\n\r\npython 同时兼具脚本语言的灵活性，和各种重型语言的功能全面性。因为前者，所以它并不要求程序作者一定要在一个叫做 `main.py` 的文件里写一个名叫 `Main` 的类, 然后在里面实现一个 `main()` 方法。但是因为后者，没写不代表 python 不需要知道一个复杂程序执行的起点。\r\n\r\n这个起点就是不带有 `-m` 参数的 `python` 命令后面跟着的 `.py` 文件，这就使得这个文件变得比其他 `.py` 文件特殊。底层表现就是 python 会不管这个文件的名字叫什么，都将它的 `__name__` 属性赋值为 `\"__main__\"`。这样，即便这个文件可能是一个大型库中间的一个模块，运行的时候 python 连它的真名都不知道，就更找不到它同级和上下级的其他模块了。\r\n\r\n各种普通模块被 python 用到的方法就是通过在主模块 main module（或者说 script）中 import。经过“python 如何读取代码文件”一节中的搜索过程之后找到了所需模块或包，模块的名字、模块之间的关系、模块里定义了哪些属性和函数，就被 python 了解了，从而当主模块召唤他们的时候就知道去哪里找相应的代码。除了在被 import 的时候，`python -m` 命令的宾语也可以告诉 python 被运行的模块和包的相对关系：`python -m sound.formats.wavwrite` ，此时 python 执行了 `wavwrite.py` 中的所有可执行的命令，同时知道从 `sound/` 到 `wavwrite.py` 的各个包之间的关系。\r\n\r\n## absolute import vs. relative import\r\n\r\n开头使用已经安装过的包使用的语法全都是绝对引用 (absolute import)，表现就是 import 语句里面没有以 `.` 作为开头的。\r\n\r\n另外一种 import 方法叫相对引用 (relative import)，`.` 表示模块所在的文件夹，`..` 表示模块的上一级文件夹。主要用在各种明确知道自己是工具代码，而且是一个更高层次结构的组成部分，几乎永远不需要被作为主模块运行的代码。\r\n\r\n回到开头例子里的文件结构，假如 sound/effects/surround.py 中想要使用 sound/formats/wavwrite.py 和 sound/effects/echo.py 中的函数，可以写成：\r\n\r\n```python\r\n\r\n# in sound/effects/surround.py\r\nfrom ..formats import wavwrite\r\nfrom . import echo\r\n```\r\n\r\n## 如何组织代码，以便自己重用\r\n\r\n研究终于推进到了准备写论文的阶段了（学渣本质暴露了），写草稿之余，之前几年时间里做过的处理和分析，接下来的一两个月里需要把工作流程规范化之后迅速重做一遍确认。\r\n\r\n随手写散落各处的分析代码需要整理到一起，之前试图统一到一个项目之下，结果总是在某个模块引用其他模块的时候遇到报错。于是才有了这篇文章。\r\n\r\n以下是 [这篇文章](https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510) 给出的一个推荐的项目文件结构：\r\n\r\n```\r\n\r\n|- notebooks/\r\n   |- 01-first-logical-notebook.ipynb\r\n   |- 02-second-logical-notebook.ipynb\r\n   |- prototype-notebook.ipynb\r\n   |- archive/\r\n\t  |- no-longer-useful.ipynb\r\n|- projectname/\r\n   |- projectname/\r\n\t  |- __init__.py\r\n\t  |- config.py\r\n\t  |- data.py\r\n\t  |- utils.py\r\n   |- setup.py\r\n|- README.md\r\n|- data/\r\n   |- raw/\r\n   |- processed/\r\n   |- cleaned/\r\n|- scripts/\r\n   |- script1.py\r\n   |- script2.py\r\n   |- archive/\r\n      |- no-longer-useful.py\r\n|- environment.yml\r\n```\r\n\r\n学过这篇笔记包含的内容，我才理解作者这样的安排。既然主文件 ~~很难~~ 没办法通过相对引用来找到工具代码，索性就把工具代码写成一个完整可安装的库，然后就像 `numpy`, `pandas` 一样在独立的 notebook 和 scripts 中引用。\r\n\r\n实际使用的时候，需要安装 `projectname` 下的代码：\r\n\r\n```bash\r\ncd projectname\r\npip install -e .\r\n```\r\n\r\n要知道为什么这样做，需要理解 `setup.py` 这个文件。这篇文章已经够长了，所以这个话题还是下次再说吧。\r\n\r\n## 参考链接\r\n\r\n- [What's the difference between a Python module and a Python package?](https://stackoverflow.com/questions/7948494/whats-the-difference-between-a-python-module-and-a-python-package). all python files re modules, while package is a specific kind of modules. It is a subsection of module in the python documentation.\r\n- Official explanation of python module: [https://docs.python.org/3/tutorial/modules.html](https://docs.python.org/3/tutorial/modules.html)\r\n- [This stackoverflow  answer: \"run as module\" is different from \"run as script\".](https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time) run as module sets the \"name\" to the module's name, while running as script sets it to `__main__` . Here we use \"name\" instead of `__name__` because it also contains `__path__` in newer versions.\r\n- A tutorial for project organization: [https://realpython.com/python-application-layouts/](https://realpython.com/python-application-layouts/)\r\n- Official about packaging: [https://packaging.python.org/en/latest/tutorials/packaging-projects/](https://packaging.python.org/en/latest/tutorials/packaging-projects/)\r\n- Gist: How to organize data science project: [https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510](https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510)\r\n- From the gist there is a link: [http://drivendata.github.io/cookiecutter-data-science](http://drivendata.github.io/cookiecutter-data-science)"},"mdAst":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"以官网给出的文件结构为例来说明：","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":17,"offset":18}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":17,"offset":18}}},{"type":"code","lang":null,"meta":null,"value":"\r\nsound/                          Top-level package\r\n      __init__.py               Initialize the sound package\r\n      formats/                  Subpackage for file format conversions\r\n              __init__.py\r\n              wavread.py\r\n              wavwrite.py\r\n              aiffread.py\r\n              aiffwrite.py\r\n              auread.py\r\n              auwrite.py\r\n              ...\r\n      effects/                  Subpackage for sound effects\r\n              __init__.py\r\n              echo.py\r\n              surround.py\r\n              reverse.py\r\n              ...\r\n      filters/                  Subpackage for filters\r\n              __init__.py\r\n              equalizer.py\r\n              vocoder.py\r\n              karaoke.py\r\n              ...","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":29,"column":4,"offset":788}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"使用现成的 python 代码","position":{"start":{"line":31,"column":4,"offset":795},"end":{"line":31,"column":19,"offset":810}}}],"position":{"start":{"line":31,"column":1,"offset":792},"end":{"line":31,"column":19,"offset":810}}},{"type":"paragraph","children":[{"type":"text","value":"正常的编程语言教程，教人配置完开发环境之后就应该进入正题，开始讲语法了。但是咱不正常，所以先来谈谈怎么用别人已经写好的代码。其中最简单的，就是可以直接通过包管理程序安装的：","position":{"start":{"line":33,"column":1,"offset":814},"end":{"line":33,"column":87,"offset":900}}}],"position":{"start":{"line":33,"column":1,"offset":814},"end":{"line":33,"column":87,"offset":900}}},{"type":"code","lang":"bash","meta":null,"value":"\r\npip install sound","position":{"start":{"line":35,"column":1,"offset":904},"end":{"line":38,"column":4,"offset":937}}},{"type":"paragraph","children":[{"type":"text","value":"然后想要使用某个文件中的函数，比如假装 ","position":{"start":{"line":40,"column":1,"offset":941},"end":{"line":40,"column":21,"offset":961}}},{"type":"inlineCode","value":"wavwrite.py","position":{"start":{"line":40,"column":21,"offset":961},"end":{"line":40,"column":34,"offset":974}}},{"type":"text","value":" 中有个函数叫 ","position":{"start":{"line":40,"column":34,"offset":974},"end":{"line":40,"column":42,"offset":982}}},{"type":"inlineCode","value":"write()","position":{"start":{"line":40,"column":42,"offset":982},"end":{"line":40,"column":51,"offset":991}}},{"type":"text","value":"，以下写法都是可以的，注意不同 import 方法对应不同的函数调用写法：","position":{"start":{"line":40,"column":51,"offset":991},"end":{"line":40,"column":88,"offset":1028}}}],"position":{"start":{"line":40,"column":1,"offset":941},"end":{"line":40,"column":88,"offset":1028}}},{"type":"code","lang":"python","meta":null,"value":"\r\nimport sound\r\nsound.formats.wavwrite.write()\r\n\r\nfrom sound import formats\r\nformats.wavwrite.write() \r\n\r\nfrom sound.formats import wavwrite\r\nwavwrite.write()\r\n\r\nfrom sound.formats.wavwrite import write\r\nwrite()","position":{"start":{"line":42,"column":1,"offset":1032},"end":{"line":55,"column":4,"offset":1259}}},{"type":"paragraph","children":[{"type":"text","value":"但是，不是所有的 python 代码都可以直接安装，比如一篇论文的研究成果发表之后，处理数据的代码也往往开源，但是这些作者基本上就只是把自己写代码的文件夹公开出来而已，我们把文件夹下载下来，然后直接 ","position":{"start":{"line":57,"column":1,"offset":1263},"end":{"line":57,"column":101,"offset":1363}}},{"type":"inlineCode","value":"import sound","position":{"start":{"line":57,"column":101,"offset":1363},"end":{"line":57,"column":115,"offset":1377}}},{"type":"text","value":", 会报错，提示找不到名为 sound 的库。","position":{"start":{"line":57,"column":115,"offset":1377},"end":{"line":57,"column":138,"offset":1400}}}],"position":{"start":{"line":57,"column":1,"offset":1263},"end":{"line":57,"column":138,"offset":1400}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"python 如何读取代码文件","position":{"start":{"line":59,"column":4,"offset":1407},"end":{"line":59,"column":19,"offset":1422}}}],"position":{"start":{"line":59,"column":1,"offset":1404},"end":{"line":59,"column":19,"offset":1422}}},{"type":"paragraph","children":[{"type":"text","value":"仔细想想，找不到才是正常的，之前轻轻松松的一句 ","position":{"start":{"line":61,"column":1,"offset":1426},"end":{"line":61,"column":25,"offset":1450}}},{"type":"inlineCode","value":"import sound","position":{"start":{"line":61,"column":25,"offset":1450},"end":{"line":61,"column":39,"offset":1464}}},{"type":"text","value":"就解决问题，这才不简单——不同的库往往位于文件系统的不同位置，但我们只要写出他们的名字就行了，不需要指定文件路径。电脑硬盘那么大，找到库却几乎是瞬间完成的。","position":{"start":{"line":61,"column":39,"offset":1464},"end":{"line":61,"column":117,"offset":1542}}}],"position":{"start":{"line":61,"column":1,"offset":1426},"end":{"line":61,"column":117,"offset":1542}}},{"type":"paragraph","children":[{"type":"text","value":"这是因为 python 并没有搜索整个硬盘。有一个变量，一般名为 ","position":{"start":{"line":63,"column":1,"offset":1546},"end":{"line":63,"column":34,"offset":1579}}},{"type":"inlineCode","value":"PYTHONPATH","position":{"start":{"line":63,"column":34,"offset":1579},"end":{"line":63,"column":46,"offset":1591}}},{"type":"text","value":"，其变量值是一个列表，表中成员是含有 python 库文件夹的路径。当我们在命令行输入命令的时候，电脑会：","position":{"start":{"line":63,"column":46,"offset":1591},"end":{"line":63,"column":99,"offset":1644}}}],"position":{"start":{"line":63,"column":1,"offset":1546},"end":{"line":63,"column":99,"offset":1644}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"搜索当前所在的文件夹，也就是在命令行输入 ","position":{"start":{"line":65,"column":3,"offset":1650},"end":{"line":65,"column":24,"offset":1671}}},{"type":"inlineCode","value":"python","position":{"start":{"line":65,"column":24,"offset":1671},"end":{"line":65,"column":32,"offset":1679}}},{"type":"text","value":" 时终端所在的文件夹。","position":{"start":{"line":65,"column":32,"offset":1679},"end":{"line":65,"column":43,"offset":1690}}}],"position":{"start":{"line":65,"column":3,"offset":1650},"end":{"line":65,"column":43,"offset":1690}}}],"position":{"start":{"line":65,"column":1,"offset":1648},"end":{"line":65,"column":43,"offset":1690}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"遍历 ","position":{"start":{"line":66,"column":3,"offset":1694},"end":{"line":66,"column":6,"offset":1697}}},{"type":"inlineCode","value":"PYTHONPATH","position":{"start":{"line":66,"column":6,"offset":1697},"end":{"line":66,"column":18,"offset":1709}}},{"type":"text","value":" 中的文件夹。","position":{"start":{"line":66,"column":18,"offset":1709},"end":{"line":66,"column":25,"offset":1716}}}],"position":{"start":{"line":66,"column":3,"offset":1694},"end":{"line":66,"column":25,"offset":1716}}}],"position":{"start":{"line":66,"column":1,"offset":1692},"end":{"line":66,"column":25,"offset":1716}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"python 包管理程序默认的位置，一般是 ","position":{"start":{"line":67,"column":3,"offset":1720},"end":{"line":67,"column":25,"offset":1742}}},{"type":"inlineCode","value":"<path to python>/site-package","position":{"start":{"line":67,"column":25,"offset":1742},"end":{"line":67,"column":56,"offset":1773}}},{"type":"text","value":"。","position":{"start":{"line":67,"column":56,"offset":1773},"end":{"line":67,"column":57,"offset":1774}}}],"position":{"start":{"line":67,"column":3,"offset":1720},"end":{"line":67,"column":57,"offset":1774}}}],"position":{"start":{"line":67,"column":1,"offset":1718},"end":{"line":67,"column":57,"offset":1774}}}],"position":{"start":{"line":65,"column":1,"offset":1648},"end":{"line":67,"column":57,"offset":1774}}},{"type":"paragraph","children":[{"type":"text","value":"看看有没有我们要引用的库，找到了就引入，找不到就报错。","position":{"start":{"line":69,"column":1,"offset":1778},"end":{"line":69,"column":28,"offset":1805}}}],"position":{"start":{"line":69,"column":1,"offset":1778},"end":{"line":69,"column":28,"offset":1805}}},{"type":"paragraph","children":[{"type":"text","value":"上一节的错误中，如果我们恰好位于 sound 所在的文件夹，然后运行 python，此时第一条生效， ","position":{"start":{"line":71,"column":1,"offset":1809},"end":{"line":71,"column":52,"offset":1860}}},{"type":"inlineCode","value":"import sound","position":{"start":{"line":71,"column":52,"offset":1860},"end":{"line":71,"column":66,"offset":1874}}},{"type":"text","value":" 不会报错，但在其他位置就不行了。","position":{"start":{"line":71,"column":66,"offset":1874},"end":{"line":71,"column":83,"offset":1891}}}],"position":{"start":{"line":71,"column":1,"offset":1809},"end":{"line":71,"column":83,"offset":1891}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"名词解释：interactive, script, module, package","position":{"start":{"line":73,"column":4,"offset":1898},"end":{"line":73,"column":45,"offset":1939}}}],"position":{"start":{"line":73,"column":1,"offset":1895},"end":{"line":73,"column":45,"offset":1939}}},{"type":"paragraph","children":[{"type":"text","value":"可执行的 python 命令可以出现在以下四个地方，第一种是接受键盘输入的程序，后三种都是文件：","position":{"start":{"line":75,"column":1,"offset":1943},"end":{"line":75,"column":49,"offset":1991}}}],"position":{"start":{"line":75,"column":1,"offset":1943},"end":{"line":75,"column":49,"offset":1991}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"interactive: python ","position":{"start":{"line":77,"column":4,"offset":1998},"end":{"line":77,"column":24,"offset":2018}}},{"type":"strong","children":[{"type":"text","value":"交互式界面","position":{"start":{"line":77,"column":26,"offset":2020},"end":{"line":77,"column":31,"offset":2025}}}],"position":{"start":{"line":77,"column":24,"offset":2018},"end":{"line":77,"column":33,"offset":2027}}},{"type":"text","value":"，也叫做 calculator mode，也就是在命令行输入 ","position":{"start":{"line":77,"column":33,"offset":2027},"end":{"line":77,"column":64,"offset":2058}}},{"type":"inlineCode","value":"python","position":{"start":{"line":77,"column":64,"offset":2058},"end":{"line":77,"column":72,"offset":2066}}},{"type":"text","value":"之后出现的界面。每次输入一句，结果在命令行上显示出来。当 python 退出之后，输入过的命令就消失了。","position":{"start":{"line":77,"column":72,"offset":2066},"end":{"line":77,"column":124,"offset":2118}}}],"position":{"start":{"line":77,"column":4,"offset":1998},"end":{"line":77,"column":124,"offset":2118}}}],"position":{"start":{"line":77,"column":1,"offset":1995},"end":{"line":77,"column":124,"offset":2118}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"script: python ","position":{"start":{"line":78,"column":4,"offset":2123},"end":{"line":78,"column":19,"offset":2138}}},{"type":"strong","children":[{"type":"text","value":"脚本","position":{"start":{"line":78,"column":21,"offset":2140},"end":{"line":78,"column":23,"offset":2142}}}],"position":{"start":{"line":78,"column":19,"offset":2138},"end":{"line":78,"column":25,"offset":2144}}},{"type":"text","value":"文件，也就是在命令行输入 ","position":{"start":{"line":78,"column":25,"offset":2144},"end":{"line":78,"column":38,"offset":2157}}},{"type":"inlineCode","value":"python somefile.py","position":{"start":{"line":78,"column":38,"offset":2157},"end":{"line":78,"column":58,"offset":2177}}},{"type":"text","value":"里面的那个","position":{"start":{"line":78,"column":58,"offset":2177},"end":{"line":78,"column":63,"offset":2182}}},{"type":"inlineCode","value":"somefile.py","position":{"start":{"line":78,"column":63,"offset":2182},"end":{"line":78,"column":76,"offset":2195}}},{"type":"text","value":"。","position":{"start":{"line":78,"column":76,"offset":2195},"end":{"line":78,"column":77,"offset":2196}}}],"position":{"start":{"line":78,"column":4,"offset":2123},"end":{"line":78,"column":77,"offset":2196}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"毕竟 python 是一种很轻量化的语言，在一定程度上可以起到 shell 的作用，有些命令我们并不想要用完就扔，而是保存起来以便以后重复执行，另外很多命令的组合组合成函数也可以极大地简化工作。在这种语境之下, interactive 和 script 的关系，就好像 Linux 命令行和 bash script 的关系一样。","position":{"start":{"line":79,"column":8,"offset":2205},"end":{"line":79,"column":172,"offset":2369}}}],"position":{"start":{"line":79,"column":8,"offset":2205},"end":{"line":79,"column":172,"offset":2369}}}],"position":{"start":{"line":79,"column":5,"offset":2202},"end":{"line":79,"column":172,"offset":2369}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"但同时 python 又是一种功能很全面的语言，完全可以胜任复杂的面向对象编程。在这种语境之下，script 也可以用来指代 main module，也就是程序执行的主文件和入口，和下面的一般的 module 相区分。","position":{"start":{"line":80,"column":8,"offset":2378},"end":{"line":80,"column":117,"offset":2487}}}],"position":{"start":{"line":80,"column":8,"offset":2378},"end":{"line":80,"column":117,"offset":2487}}}],"position":{"start":{"line":80,"column":5,"offset":2375},"end":{"line":80,"column":117,"offset":2487}}}],"position":{"start":{"line":79,"column":5,"offset":2202},"end":{"line":80,"column":117,"offset":2487}}}],"position":{"start":{"line":78,"column":1,"offset":2120},"end":{"line":80,"column":117,"offset":2487}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"module: python ","position":{"start":{"line":81,"column":4,"offset":2492},"end":{"line":81,"column":19,"offset":2507}}},{"type":"strong","children":[{"type":"text","value":"模块","position":{"start":{"line":81,"column":21,"offset":2509},"end":{"line":81,"column":23,"offset":2511}}}],"position":{"start":{"line":81,"column":19,"offset":2507},"end":{"line":81,"column":25,"offset":2513}}},{"type":"text","value":"文件，也就是在命令行输入 ","position":{"start":{"line":81,"column":25,"offset":2513},"end":{"line":81,"column":38,"offset":2526}}},{"type":"inlineCode","value":"python -m another","position":{"start":{"line":81,"column":38,"offset":2526},"end":{"line":81,"column":57,"offset":2545}}},{"type":"text","value":" 里面的那个 ","position":{"start":{"line":81,"column":57,"offset":2545},"end":{"line":81,"column":64,"offset":2552}}},{"type":"inlineCode","value":"another","position":{"start":{"line":81,"column":64,"offset":2552},"end":{"line":81,"column":73,"offset":2561}}},{"type":"text","value":"（注意这里不写拓展名 ","position":{"start":{"line":81,"column":73,"offset":2561},"end":{"line":81,"column":84,"offset":2572}}},{"type":"inlineCode","value":".py","position":{"start":{"line":81,"column":84,"offset":2572},"end":{"line":81,"column":89,"offset":2577}}},{"type":"text","value":"）。按照官方文档的说法，所有 ","position":{"start":{"line":81,"column":89,"offset":2577},"end":{"line":81,"column":104,"offset":2592}}},{"type":"inlineCode","value":".py","position":{"start":{"line":81,"column":104,"offset":2592},"end":{"line":81,"column":109,"offset":2597}}},{"type":"text","value":" 文件都是 module。但是实际上这句话很有误导性，上一节的 main module 和一般的 module 非常不同，下一节会详细展开讲。一般提到 module，都是在强调这个文件定义的变量和函数可以被其他的 python 文件引用。","position":{"start":{"line":81,"column":109,"offset":2597},"end":{"line":81,"column":228,"offset":2716}}}],"position":{"start":{"line":81,"column":4,"offset":2492},"end":{"line":81,"column":228,"offset":2716}}}],"position":{"start":{"line":81,"column":1,"offset":2489},"end":{"line":81,"column":228,"offset":2716}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"package: python ","position":{"start":{"line":82,"column":4,"offset":2721},"end":{"line":82,"column":20,"offset":2737}}},{"type":"strong","children":[{"type":"text","value":"包","position":{"start":{"line":82,"column":22,"offset":2739},"end":{"line":82,"column":23,"offset":2740}}}],"position":{"start":{"line":82,"column":20,"offset":2737},"end":{"line":82,"column":25,"offset":2742}}},{"type":"text","value":"，互相关联的 modules 构成的更高一级的可供引用的结构，简单理解就是含有 ","position":{"start":{"line":82,"column":25,"offset":2742},"end":{"line":82,"column":65,"offset":2782}}},{"type":"inlineCode","value":"__init__.py","position":{"start":{"line":82,"column":65,"offset":2782},"end":{"line":82,"column":78,"offset":2795}}},{"type":"text","value":" 的文件夹，但是 python 并不是根据文件夹和文件之间的从属关系来确定 package 和 module 之间的关系的，下一节会详细展开讲。","position":{"start":{"line":82,"column":78,"offset":2795},"end":{"line":82,"column":150,"offset":2867}}}],"position":{"start":{"line":82,"column":4,"offset":2721},"end":{"line":82,"column":150,"offset":2867}}}],"position":{"start":{"line":82,"column":1,"offset":2718},"end":{"line":82,"column":150,"offset":2867}}}],"position":{"start":{"line":77,"column":1,"offset":1995},"end":{"line":82,"column":150,"offset":2867}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"script vs. module","position":{"start":{"line":84,"column":4,"offset":2874},"end":{"line":84,"column":21,"offset":2891}}}],"position":{"start":{"line":84,"column":1,"offset":2871},"end":{"line":84,"column":21,"offset":2891}}},{"type":"paragraph","children":[{"type":"text","value":"python 同时兼具脚本语言的灵活性，和各种重型语言的功能全面性。因为前者，所以它并不要求程序作者一定要在一个叫做 ","position":{"start":{"line":86,"column":1,"offset":2895},"end":{"line":86,"column":60,"offset":2954}}},{"type":"inlineCode","value":"main.py","position":{"start":{"line":86,"column":60,"offset":2954},"end":{"line":86,"column":69,"offset":2963}}},{"type":"text","value":" 的文件里写一个名叫 ","position":{"start":{"line":86,"column":69,"offset":2963},"end":{"line":86,"column":80,"offset":2974}}},{"type":"inlineCode","value":"Main","position":{"start":{"line":86,"column":80,"offset":2974},"end":{"line":86,"column":86,"offset":2980}}},{"type":"text","value":" 的类, 然后在里面实现一个 ","position":{"start":{"line":86,"column":86,"offset":2980},"end":{"line":86,"column":101,"offset":2995}}},{"type":"inlineCode","value":"main()","position":{"start":{"line":86,"column":101,"offset":2995},"end":{"line":86,"column":109,"offset":3003}}},{"type":"text","value":" 方法。但是因为后者，没写不代表 python 不需要知道一个复杂程序执行的起点。","position":{"start":{"line":86,"column":109,"offset":3003},"end":{"line":86,"column":150,"offset":3044}}}],"position":{"start":{"line":86,"column":1,"offset":2895},"end":{"line":86,"column":150,"offset":3044}}},{"type":"paragraph","children":[{"type":"text","value":"这个起点就是不带有 ","position":{"start":{"line":88,"column":1,"offset":3048},"end":{"line":88,"column":11,"offset":3058}}},{"type":"inlineCode","value":"-m","position":{"start":{"line":88,"column":11,"offset":3058},"end":{"line":88,"column":15,"offset":3062}}},{"type":"text","value":" 参数的 ","position":{"start":{"line":88,"column":15,"offset":3062},"end":{"line":88,"column":20,"offset":3067}}},{"type":"inlineCode","value":"python","position":{"start":{"line":88,"column":20,"offset":3067},"end":{"line":88,"column":28,"offset":3075}}},{"type":"text","value":" 命令后面跟着的 ","position":{"start":{"line":88,"column":28,"offset":3075},"end":{"line":88,"column":37,"offset":3084}}},{"type":"inlineCode","value":".py","position":{"start":{"line":88,"column":37,"offset":3084},"end":{"line":88,"column":42,"offset":3089}}},{"type":"text","value":" 文件，这就使得这个文件变得比其他 ","position":{"start":{"line":88,"column":42,"offset":3089},"end":{"line":88,"column":60,"offset":3107}}},{"type":"inlineCode","value":".py","position":{"start":{"line":88,"column":60,"offset":3107},"end":{"line":88,"column":65,"offset":3112}}},{"type":"text","value":" 文件特殊。底层表现就是 python 会不管这个文件的名字叫什么，都将它的 ","position":{"start":{"line":88,"column":65,"offset":3112},"end":{"line":88,"column":104,"offset":3151}}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":88,"column":104,"offset":3151},"end":{"line":88,"column":114,"offset":3161}}},{"type":"text","value":" 属性赋值为 ","position":{"start":{"line":88,"column":114,"offset":3161},"end":{"line":88,"column":121,"offset":3168}}},{"type":"inlineCode","value":"\"__main__\"","position":{"start":{"line":88,"column":121,"offset":3168},"end":{"line":88,"column":133,"offset":3180}}},{"type":"text","value":"。这样，即便这个文件可能是一个大型库中间的一个模块，运行的时候 python 连它的真名都不知道，就更找不到它同级和上下级的其他模块了。","position":{"start":{"line":88,"column":133,"offset":3180},"end":{"line":88,"column":201,"offset":3248}}}],"position":{"start":{"line":88,"column":1,"offset":3048},"end":{"line":88,"column":201,"offset":3248}}},{"type":"paragraph","children":[{"type":"text","value":"各种普通模块被 python 用到的方法就是通过在主模块 main module（或者说 script）中 import。经过“python 如何读取代码文件”一节中的搜索过程之后找到了所需模块或包，模块的名字、模块之间的关系、模块里定义了哪些属性和函数，就被 python 了解了，从而当主模块召唤他们的时候就知道去哪里找相应的代码。除了在被 import 的时候，","position":{"start":{"line":90,"column":1,"offset":3252},"end":{"line":90,"column":185,"offset":3436}}},{"type":"inlineCode","value":"python -m","position":{"start":{"line":90,"column":185,"offset":3436},"end":{"line":90,"column":196,"offset":3447}}},{"type":"text","value":" 命令的宾语也可以告诉 python 被运行的模块和包的相对关系：","position":{"start":{"line":90,"column":196,"offset":3447},"end":{"line":90,"column":229,"offset":3480}}},{"type":"inlineCode","value":"python -m sound.formats.wavwrite","position":{"start":{"line":90,"column":229,"offset":3480},"end":{"line":90,"column":263,"offset":3514}}},{"type":"text","value":" ，此时 python 执行了 ","position":{"start":{"line":90,"column":263,"offset":3514},"end":{"line":90,"column":279,"offset":3530}}},{"type":"inlineCode","value":"wavwrite.py","position":{"start":{"line":90,"column":279,"offset":3530},"end":{"line":90,"column":292,"offset":3543}}},{"type":"text","value":" 中的所有可执行的命令，同时知道从 ","position":{"start":{"line":90,"column":292,"offset":3543},"end":{"line":90,"column":310,"offset":3561}}},{"type":"inlineCode","value":"sound/","position":{"start":{"line":90,"column":310,"offset":3561},"end":{"line":90,"column":318,"offset":3569}}},{"type":"text","value":" 到 ","position":{"start":{"line":90,"column":318,"offset":3569},"end":{"line":90,"column":321,"offset":3572}}},{"type":"inlineCode","value":"wavwrite.py","position":{"start":{"line":90,"column":321,"offset":3572},"end":{"line":90,"column":334,"offset":3585}}},{"type":"text","value":" 的各个包之间的关系。","position":{"start":{"line":90,"column":334,"offset":3585},"end":{"line":90,"column":345,"offset":3596}}}],"position":{"start":{"line":90,"column":1,"offset":3252},"end":{"line":90,"column":345,"offset":3596}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"absolute import vs. relative import","position":{"start":{"line":92,"column":4,"offset":3603},"end":{"line":92,"column":39,"offset":3638}}}],"position":{"start":{"line":92,"column":1,"offset":3600},"end":{"line":92,"column":39,"offset":3638}}},{"type":"paragraph","children":[{"type":"text","value":"开头使用已经安装过的包使用的语法全都是绝对引用 (absolute import)，表现就是 import 语句里面没有以 ","position":{"start":{"line":94,"column":1,"offset":3642},"end":{"line":94,"column":63,"offset":3704}}},{"type":"inlineCode","value":".","position":{"start":{"line":94,"column":63,"offset":3704},"end":{"line":94,"column":66,"offset":3707}}},{"type":"text","value":" 作为开头的。","position":{"start":{"line":94,"column":66,"offset":3707},"end":{"line":94,"column":73,"offset":3714}}}],"position":{"start":{"line":94,"column":1,"offset":3642},"end":{"line":94,"column":73,"offset":3714}}},{"type":"paragraph","children":[{"type":"text","value":"另外一种 import 方法叫相对引用 (relative import)，","position":{"start":{"line":96,"column":1,"offset":3718},"end":{"line":96,"column":39,"offset":3756}}},{"type":"inlineCode","value":".","position":{"start":{"line":96,"column":39,"offset":3756},"end":{"line":96,"column":42,"offset":3759}}},{"type":"text","value":" 表示模块所在的文件夹，","position":{"start":{"line":96,"column":42,"offset":3759},"end":{"line":96,"column":54,"offset":3771}}},{"type":"inlineCode","value":"..","position":{"start":{"line":96,"column":54,"offset":3771},"end":{"line":96,"column":58,"offset":3775}}},{"type":"text","value":" 表示模块的上一级文件夹。主要用在各种明确知道自己是工具代码，而且是一个更高层次结构的组成部分，几乎永远不需要被作为主模块运行的代码。","position":{"start":{"line":96,"column":58,"offset":3775},"end":{"line":96,"column":125,"offset":3842}}}],"position":{"start":{"line":96,"column":1,"offset":3718},"end":{"line":96,"column":125,"offset":3842}}},{"type":"paragraph","children":[{"type":"text","value":"回到开头例子里的文件结构，假如 sound/effects/surround.py 中想要使用 sound/formats/wavwrite.py 和 sound/effects/echo.py 中的函数，可以写成：","position":{"start":{"line":98,"column":1,"offset":3846},"end":{"line":98,"column":109,"offset":3954}}}],"position":{"start":{"line":98,"column":1,"offset":3846},"end":{"line":98,"column":109,"offset":3954}}},{"type":"code","lang":"python","meta":null,"value":"\r\n# in sound/effects/surround.py\r\nfrom ..formats import wavwrite\r\nfrom . import echo","position":{"start":{"line":100,"column":1,"offset":3958},"end":{"line":105,"column":4,"offset":4058}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"如何组织代码，以便自己重用","position":{"start":{"line":107,"column":4,"offset":4065},"end":{"line":107,"column":17,"offset":4078}}}],"position":{"start":{"line":107,"column":1,"offset":4062},"end":{"line":107,"column":17,"offset":4078}}},{"type":"paragraph","children":[{"type":"text","value":"研究终于推进到了准备写论文的阶段了（学渣本质暴露了），写草稿之余，之前几年时间里做过的处理和分析，接下来的一两个月里需要把工作流程规范化之后迅速重做一遍确认。","position":{"start":{"line":109,"column":1,"offset":4082},"end":{"line":109,"column":80,"offset":4161}}}],"position":{"start":{"line":109,"column":1,"offset":4082},"end":{"line":109,"column":80,"offset":4161}}},{"type":"paragraph","children":[{"type":"text","value":"随手写散落各处的分析代码需要整理到一起，之前试图统一到一个项目之下，结果总是在某个模块引用其他模块的时候遇到报错。于是才有了这篇文章。","position":{"start":{"line":111,"column":1,"offset":4165},"end":{"line":111,"column":68,"offset":4232}}}],"position":{"start":{"line":111,"column":1,"offset":4165},"end":{"line":111,"column":68,"offset":4232}}},{"type":"paragraph","children":[{"type":"text","value":"以下是 ","position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":5,"offset":4240}}},{"type":"link","title":null,"url":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510","children":[{"type":"text","value":"这篇文章","position":{"start":{"line":113,"column":6,"offset":4241},"end":{"line":113,"column":10,"offset":4245}}}],"position":{"start":{"line":113,"column":5,"offset":4240},"end":{"line":113,"column":77,"offset":4312}}},{"type":"text","value":" 给出的一个推荐的项目文件结构：","position":{"start":{"line":113,"column":77,"offset":4312},"end":{"line":113,"column":93,"offset":4328}}}],"position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":93,"offset":4328}}},{"type":"code","lang":null,"meta":null,"value":"\r\n|- notebooks/\r\n   |- 01-first-logical-notebook.ipynb\r\n   |- 02-second-logical-notebook.ipynb\r\n   |- prototype-notebook.ipynb\r\n   |- archive/\r\n\t  |- no-longer-useful.ipynb\r\n|- projectname/\r\n   |- projectname/\r\n\t  |- __init__.py\r\n\t  |- config.py\r\n\t  |- data.py\r\n\t  |- utils.py\r\n   |- setup.py\r\n|- README.md\r\n|- data/\r\n   |- raw/\r\n   |- processed/\r\n   |- cleaned/\r\n|- scripts/\r\n   |- script1.py\r\n   |- script2.py\r\n   |- archive/\r\n      |- no-longer-useful.py\r\n|- environment.yml","position":{"start":{"line":115,"column":1,"offset":4332},"end":{"line":141,"column":4,"offset":4819}}},{"type":"paragraph","children":[{"type":"text","value":"学过这篇笔记包含的内容，我才理解作者这样的安排。既然主文件 ","position":{"start":{"line":143,"column":1,"offset":4823},"end":{"line":143,"column":31,"offset":4853}}},{"type":"delete","children":[{"type":"text","value":"很难","position":{"start":{"line":143,"column":33,"offset":4855},"end":{"line":143,"column":35,"offset":4857}}}],"position":{"start":{"line":143,"column":31,"offset":4853},"end":{"line":143,"column":37,"offset":4859}}},{"type":"text","value":" 没办法通过相对引用来找到工具代码，索性就把工具代码写成一个完整可安装的库，然后就像 ","position":{"start":{"line":143,"column":37,"offset":4859},"end":{"line":143,"column":80,"offset":4902}}},{"type":"inlineCode","value":"numpy","position":{"start":{"line":143,"column":80,"offset":4902},"end":{"line":143,"column":87,"offset":4909}}},{"type":"text","value":", ","position":{"start":{"line":143,"column":87,"offset":4909},"end":{"line":143,"column":89,"offset":4911}}},{"type":"inlineCode","value":"pandas","position":{"start":{"line":143,"column":89,"offset":4911},"end":{"line":143,"column":97,"offset":4919}}},{"type":"text","value":" 一样在独立的 notebook 和 scripts 中引用。","position":{"start":{"line":143,"column":97,"offset":4919},"end":{"line":143,"column":128,"offset":4950}}}],"position":{"start":{"line":143,"column":1,"offset":4823},"end":{"line":143,"column":128,"offset":4950}}},{"type":"paragraph","children":[{"type":"text","value":"实际使用的时候，需要安装 ","position":{"start":{"line":145,"column":1,"offset":4954},"end":{"line":145,"column":14,"offset":4967}}},{"type":"inlineCode","value":"projectname","position":{"start":{"line":145,"column":14,"offset":4967},"end":{"line":145,"column":27,"offset":4980}}},{"type":"text","value":" 下的代码：","position":{"start":{"line":145,"column":27,"offset":4980},"end":{"line":145,"column":33,"offset":4986}}}],"position":{"start":{"line":145,"column":1,"offset":4954},"end":{"line":145,"column":33,"offset":4986}}},{"type":"code","lang":"bash","meta":null,"value":"cd projectname\r\npip install -e .","position":{"start":{"line":147,"column":1,"offset":4990},"end":{"line":150,"column":4,"offset":5036}}},{"type":"paragraph","children":[{"type":"text","value":"要知道为什么这样做，需要理解 ","position":{"start":{"line":152,"column":1,"offset":5040},"end":{"line":152,"column":16,"offset":5055}}},{"type":"inlineCode","value":"setup.py","position":{"start":{"line":152,"column":16,"offset":5055},"end":{"line":152,"column":26,"offset":5065}}},{"type":"text","value":" 这个文件。这篇文章已经够长了，所以这个话题还是下次再说吧。","position":{"start":{"line":152,"column":26,"offset":5065},"end":{"line":152,"column":56,"offset":5095}}}],"position":{"start":{"line":152,"column":1,"offset":5040},"end":{"line":152,"column":56,"offset":5095}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"参考链接","position":{"start":{"line":154,"column":4,"offset":5102},"end":{"line":154,"column":8,"offset":5106}}}],"position":{"start":{"line":154,"column":1,"offset":5099},"end":{"line":154,"column":8,"offset":5106}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackoverflow.com/questions/7948494/whats-the-difference-between-a-python-module-and-a-python-package","children":[{"type":"text","value":"What's the difference between a Python module and a Python package?","position":{"start":{"line":156,"column":4,"offset":5113},"end":{"line":156,"column":71,"offset":5180}}}],"position":{"start":{"line":156,"column":3,"offset":5112},"end":{"line":156,"column":183,"offset":5292}}},{"type":"text","value":". all python files re modules, while package is a specific kind of modules. It is a subsection of module in the python documentation.","position":{"start":{"line":156,"column":183,"offset":5292},"end":{"line":156,"column":316,"offset":5425}}}],"position":{"start":{"line":156,"column":3,"offset":5112},"end":{"line":156,"column":316,"offset":5425}}}],"position":{"start":{"line":156,"column":1,"offset":5110},"end":{"line":156,"column":316,"offset":5425}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Official explanation of python module: ","position":{"start":{"line":157,"column":3,"offset":5429},"end":{"line":157,"column":42,"offset":5468}}},{"type":"link","title":null,"url":"https://docs.python.org/3/tutorial/modules.html","children":[{"type":"text","value":"https://docs.python.org/3/tutorial/modules.html","position":{"start":{"line":157,"column":43,"offset":5469},"end":{"line":157,"column":90,"offset":5516}}}],"position":{"start":{"line":157,"column":42,"offset":5468},"end":{"line":157,"column":140,"offset":5566}}}],"position":{"start":{"line":157,"column":3,"offset":5429},"end":{"line":157,"column":140,"offset":5566}}}],"position":{"start":{"line":157,"column":1,"offset":5427},"end":{"line":157,"column":140,"offset":5566}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time","children":[{"type":"text","value":"This stackoverflow  answer: \"run as module\" is different from \"run as script\".","position":{"start":{"line":158,"column":4,"offset":5571},"end":{"line":158,"column":82,"offset":5649}}}],"position":{"start":{"line":158,"column":3,"offset":5570},"end":{"line":158,"column":169,"offset":5736}}},{"type":"text","value":" run as module sets the \"name\" to the module's name, while running as script sets it to ","position":{"start":{"line":158,"column":169,"offset":5736},"end":{"line":158,"column":257,"offset":5824}}},{"type":"inlineCode","value":"__main__","position":{"start":{"line":158,"column":257,"offset":5824},"end":{"line":158,"column":267,"offset":5834}}},{"type":"text","value":" . Here we use \"name\" instead of ","position":{"start":{"line":158,"column":267,"offset":5834},"end":{"line":158,"column":300,"offset":5867}}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":158,"column":300,"offset":5867},"end":{"line":158,"column":310,"offset":5877}}},{"type":"text","value":" because it also contains ","position":{"start":{"line":158,"column":310,"offset":5877},"end":{"line":158,"column":336,"offset":5903}}},{"type":"inlineCode","value":"__path__","position":{"start":{"line":158,"column":336,"offset":5903},"end":{"line":158,"column":346,"offset":5913}}},{"type":"text","value":" in newer versions.","position":{"start":{"line":158,"column":346,"offset":5913},"end":{"line":158,"column":365,"offset":5932}}}],"position":{"start":{"line":158,"column":3,"offset":5570},"end":{"line":158,"column":365,"offset":5932}}}],"position":{"start":{"line":158,"column":1,"offset":5568},"end":{"line":158,"column":365,"offset":5932}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A tutorial for project organization: ","position":{"start":{"line":159,"column":3,"offset":5936},"end":{"line":159,"column":40,"offset":5973}}},{"type":"link","title":null,"url":"https://realpython.com/python-application-layouts/","children":[{"type":"text","value":"https://realpython.com/python-application-layouts/","position":{"start":{"line":159,"column":41,"offset":5974},"end":{"line":159,"column":91,"offset":6024}}}],"position":{"start":{"line":159,"column":40,"offset":5973},"end":{"line":159,"column":144,"offset":6077}}}],"position":{"start":{"line":159,"column":3,"offset":5936},"end":{"line":159,"column":144,"offset":6077}}}],"position":{"start":{"line":159,"column":1,"offset":5934},"end":{"line":159,"column":144,"offset":6077}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Official about packaging: ","position":{"start":{"line":160,"column":3,"offset":6081},"end":{"line":160,"column":29,"offset":6107}}},{"type":"link","title":null,"url":"https://packaging.python.org/en/latest/tutorials/packaging-projects/","children":[{"type":"text","value":"https://packaging.python.org/en/latest/tutorials/packaging-projects/","position":{"start":{"line":160,"column":30,"offset":6108},"end":{"line":160,"column":98,"offset":6176}}}],"position":{"start":{"line":160,"column":29,"offset":6107},"end":{"line":160,"column":169,"offset":6247}}}],"position":{"start":{"line":160,"column":3,"offset":6081},"end":{"line":160,"column":169,"offset":6247}}}],"position":{"start":{"line":160,"column":1,"offset":6079},"end":{"line":160,"column":169,"offset":6247}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Gist: How to organize data science project: ","position":{"start":{"line":161,"column":3,"offset":6251},"end":{"line":161,"column":47,"offset":6295}}},{"type":"link","title":null,"url":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510","children":[{"type":"text","value":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510","position":{"start":{"line":161,"column":48,"offset":6296},"end":{"line":161,"column":112,"offset":6360}}}],"position":{"start":{"line":161,"column":47,"offset":6295},"end":{"line":161,"column":179,"offset":6427}}}],"position":{"start":{"line":161,"column":3,"offset":6251},"end":{"line":161,"column":179,"offset":6427}}}],"position":{"start":{"line":161,"column":1,"offset":6249},"end":{"line":161,"column":179,"offset":6427}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"From the gist there is a link: ","position":{"start":{"line":162,"column":3,"offset":6431},"end":{"line":162,"column":34,"offset":6462}}},{"type":"link","title":null,"url":"http://drivendata.github.io/cookiecutter-data-science","children":[{"type":"text","value":"http://drivendata.github.io/cookiecutter-data-science","position":{"start":{"line":162,"column":35,"offset":6463},"end":{"line":162,"column":88,"offset":6516}}}],"position":{"start":{"line":162,"column":34,"offset":6462},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":162,"column":3,"offset":6431},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":162,"column":1,"offset":6429},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":156,"column":1,"offset":5110},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":162,"column":144,"offset":6572}}},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以官网给出的文件结构为例来说明：","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":17,"offset":18}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":17,"offset":18}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\r\nsound/                          Top-level package\r\n      __init__.py               Initialize the sound package\r\n      formats/                  Subpackage for file format conversions\r\n              __init__.py\r\n              wavread.py\r\n              wavwrite.py\r\n              aiffread.py\r\n              aiffwrite.py\r\n              auread.py\r\n              auwrite.py\r\n              ...\r\n      effects/                  Subpackage for sound effects\r\n              __init__.py\r\n              echo.py\r\n              surround.py\r\n              reverse.py\r\n              ...\r\n      filters/                  Subpackage for filters\r\n              __init__.py\r\n              equalizer.py\r\n              vocoder.py\r\n              karaoke.py\r\n              ...\n"}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":29,"column":4,"offset":788}}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":29,"column":4,"offset":788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"使用现成的-python-代码"},"children":[{"type":"element","tagName":"a","properties":{"href":"#使用现成的-python-代码"},"children":[{"type":"text","value":"使用现成的 python 代码","position":{"start":{"line":31,"column":4,"offset":795},"end":{"line":31,"column":19,"offset":810}}}]}],"position":{"start":{"line":31,"column":1,"offset":792},"end":{"line":31,"column":19,"offset":810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"正常的编程语言教程，教人配置完开发环境之后就应该进入正题，开始讲语法了。但是咱不正常，所以先来谈谈怎么用别人已经写好的代码。其中最简单的，就是可以直接通过包管理程序安装的：","position":{"start":{"line":33,"column":1,"offset":814},"end":{"line":33,"column":87,"offset":900}}}],"position":{"start":{"line":33,"column":1,"offset":814},"end":{"line":33,"column":87,"offset":900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"pip"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" install"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" sound"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然后想要使用某个文件中的函数，比如假装 ","position":{"start":{"line":40,"column":1,"offset":941},"end":{"line":40,"column":21,"offset":961}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wavwrite.py","position":{"start":{"line":40,"column":21,"offset":961},"end":{"line":40,"column":34,"offset":974}}}],"position":{"start":{"line":40,"column":21,"offset":961},"end":{"line":40,"column":34,"offset":974}}},{"type":"text","value":" 中有个函数叫 ","position":{"start":{"line":40,"column":34,"offset":974},"end":{"line":40,"column":42,"offset":982}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"write()","position":{"start":{"line":40,"column":42,"offset":982},"end":{"line":40,"column":51,"offset":991}}}],"position":{"start":{"line":40,"column":42,"offset":982},"end":{"line":40,"column":51,"offset":991}}},{"type":"text","value":"，以下写法都是可以的，注意不同 import 方法对应不同的函数调用写法：","position":{"start":{"line":40,"column":51,"offset":991},"end":{"line":40,"column":88,"offset":1028}}}],"position":{"start":{"line":40,"column":1,"offset":941},"end":{"line":40,"column":88,"offset":1028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" sound"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"sound.formats.wavwrite.write()"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"from"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" sound "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" formats"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"formats.wavwrite.write() "}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"from"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" sound.formats "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" wavwrite"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"wavwrite.write()"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"from"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" sound.formats.wavwrite "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" write"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":"write()"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是，不是所有的 python 代码都可以直接安装，比如一篇论文的研究成果发表之后，处理数据的代码也往往开源，但是这些作者基本上就只是把自己写代码的文件夹公开出来而已，我们把文件夹下载下来，然后直接 ","position":{"start":{"line":57,"column":1,"offset":1263},"end":{"line":57,"column":101,"offset":1363}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import sound","position":{"start":{"line":57,"column":101,"offset":1363},"end":{"line":57,"column":115,"offset":1377}}}],"position":{"start":{"line":57,"column":101,"offset":1363},"end":{"line":57,"column":115,"offset":1377}}},{"type":"text","value":", 会报错，提示找不到名为 sound 的库。","position":{"start":{"line":57,"column":115,"offset":1377},"end":{"line":57,"column":138,"offset":1400}}}],"position":{"start":{"line":57,"column":1,"offset":1263},"end":{"line":57,"column":138,"offset":1400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"python-如何读取代码文件"},"children":[{"type":"element","tagName":"a","properties":{"href":"#python-如何读取代码文件"},"children":[{"type":"text","value":"python 如何读取代码文件","position":{"start":{"line":59,"column":4,"offset":1407},"end":{"line":59,"column":19,"offset":1422}}}]}],"position":{"start":{"line":59,"column":1,"offset":1404},"end":{"line":59,"column":19,"offset":1422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仔细想想，找不到才是正常的，之前轻轻松松的一句 ","position":{"start":{"line":61,"column":1,"offset":1426},"end":{"line":61,"column":25,"offset":1450}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import sound","position":{"start":{"line":61,"column":25,"offset":1450},"end":{"line":61,"column":39,"offset":1464}}}],"position":{"start":{"line":61,"column":25,"offset":1450},"end":{"line":61,"column":39,"offset":1464}}},{"type":"text","value":"就解决问题，这才不简单——不同的库往往位于文件系统的不同位置，但我们只要写出他们的名字就行了，不需要指定文件路径。电脑硬盘那么大，找到库却几乎是瞬间完成的。","position":{"start":{"line":61,"column":39,"offset":1464},"end":{"line":61,"column":117,"offset":1542}}}],"position":{"start":{"line":61,"column":1,"offset":1426},"end":{"line":61,"column":117,"offset":1542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这是因为 python 并没有搜索整个硬盘。有一个变量，一般名为 ","position":{"start":{"line":63,"column":1,"offset":1546},"end":{"line":63,"column":34,"offset":1579}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PYTHONPATH","position":{"start":{"line":63,"column":34,"offset":1579},"end":{"line":63,"column":46,"offset":1591}}}],"position":{"start":{"line":63,"column":34,"offset":1579},"end":{"line":63,"column":46,"offset":1591}}},{"type":"text","value":"，其变量值是一个列表，表中成员是含有 python 库文件夹的路径。当我们在命令行输入命令的时候，电脑会：","position":{"start":{"line":63,"column":46,"offset":1591},"end":{"line":63,"column":99,"offset":1644}}}],"position":{"start":{"line":63,"column":1,"offset":1546},"end":{"line":63,"column":99,"offset":1644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"搜索当前所在的文件夹，也就是在命令行输入 ","position":{"start":{"line":65,"column":3,"offset":1650},"end":{"line":65,"column":24,"offset":1671}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python","position":{"start":{"line":65,"column":24,"offset":1671},"end":{"line":65,"column":32,"offset":1679}}}],"position":{"start":{"line":65,"column":24,"offset":1671},"end":{"line":65,"column":32,"offset":1679}}},{"type":"text","value":" 时终端所在的文件夹。","position":{"start":{"line":65,"column":32,"offset":1679},"end":{"line":65,"column":43,"offset":1690}}}],"position":{"start":{"line":65,"column":1,"offset":1648},"end":{"line":65,"column":43,"offset":1690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"遍历 ","position":{"start":{"line":66,"column":3,"offset":1694},"end":{"line":66,"column":6,"offset":1697}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PYTHONPATH","position":{"start":{"line":66,"column":6,"offset":1697},"end":{"line":66,"column":18,"offset":1709}}}],"position":{"start":{"line":66,"column":6,"offset":1697},"end":{"line":66,"column":18,"offset":1709}}},{"type":"text","value":" 中的文件夹。","position":{"start":{"line":66,"column":18,"offset":1709},"end":{"line":66,"column":25,"offset":1716}}}],"position":{"start":{"line":66,"column":1,"offset":1692},"end":{"line":66,"column":25,"offset":1716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"python 包管理程序默认的位置，一般是 ","position":{"start":{"line":67,"column":3,"offset":1720},"end":{"line":67,"column":25,"offset":1742}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<path to python>/site-package","position":{"start":{"line":67,"column":25,"offset":1742},"end":{"line":67,"column":56,"offset":1773}}}],"position":{"start":{"line":67,"column":25,"offset":1742},"end":{"line":67,"column":56,"offset":1773}}},{"type":"text","value":"。","position":{"start":{"line":67,"column":56,"offset":1773},"end":{"line":67,"column":57,"offset":1774}}}],"position":{"start":{"line":67,"column":1,"offset":1718},"end":{"line":67,"column":57,"offset":1774}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":1,"offset":1648},"end":{"line":67,"column":57,"offset":1774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"看看有没有我们要引用的库，找到了就引入，找不到就报错。","position":{"start":{"line":69,"column":1,"offset":1778},"end":{"line":69,"column":28,"offset":1805}}}],"position":{"start":{"line":69,"column":1,"offset":1778},"end":{"line":69,"column":28,"offset":1805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上一节的错误中，如果我们恰好位于 sound 所在的文件夹，然后运行 python，此时第一条生效， ","position":{"start":{"line":71,"column":1,"offset":1809},"end":{"line":71,"column":52,"offset":1860}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import sound","position":{"start":{"line":71,"column":52,"offset":1860},"end":{"line":71,"column":66,"offset":1874}}}],"position":{"start":{"line":71,"column":52,"offset":1860},"end":{"line":71,"column":66,"offset":1874}}},{"type":"text","value":" 不会报错，但在其他位置就不行了。","position":{"start":{"line":71,"column":66,"offset":1874},"end":{"line":71,"column":83,"offset":1891}}}],"position":{"start":{"line":71,"column":1,"offset":1809},"end":{"line":71,"column":83,"offset":1891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"名词解释interactive-script-module-package"},"children":[{"type":"element","tagName":"a","properties":{"href":"#名词解释interactive-script-module-package"},"children":[{"type":"text","value":"名词解释：interactive, script, module, package","position":{"start":{"line":73,"column":4,"offset":1898},"end":{"line":73,"column":45,"offset":1939}}}]}],"position":{"start":{"line":73,"column":1,"offset":1895},"end":{"line":73,"column":45,"offset":1939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可执行的 python 命令可以出现在以下四个地方，第一种是接受键盘输入的程序，后三种都是文件：","position":{"start":{"line":75,"column":1,"offset":1943},"end":{"line":75,"column":49,"offset":1991}}}],"position":{"start":{"line":75,"column":1,"offset":1943},"end":{"line":75,"column":49,"offset":1991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"interactive: python ","position":{"start":{"line":77,"column":4,"offset":1998},"end":{"line":77,"column":24,"offset":2018}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"交互式界面","position":{"start":{"line":77,"column":26,"offset":2020},"end":{"line":77,"column":31,"offset":2025}}}],"position":{"start":{"line":77,"column":24,"offset":2018},"end":{"line":77,"column":33,"offset":2027}}},{"type":"text","value":"，也叫做 calculator mode，也就是在命令行输入 ","position":{"start":{"line":77,"column":33,"offset":2027},"end":{"line":77,"column":64,"offset":2058}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python","position":{"start":{"line":77,"column":64,"offset":2058},"end":{"line":77,"column":72,"offset":2066}}}],"position":{"start":{"line":77,"column":64,"offset":2058},"end":{"line":77,"column":72,"offset":2066}}},{"type":"text","value":"之后出现的界面。每次输入一句，结果在命令行上显示出来。当 python 退出之后，输入过的命令就消失了。","position":{"start":{"line":77,"column":72,"offset":2066},"end":{"line":77,"column":124,"offset":2118}}}],"position":{"start":{"line":77,"column":1,"offset":1995},"end":{"line":77,"column":124,"offset":2118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"script: python ","position":{"start":{"line":78,"column":4,"offset":2123},"end":{"line":78,"column":19,"offset":2138}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"脚本","position":{"start":{"line":78,"column":21,"offset":2140},"end":{"line":78,"column":23,"offset":2142}}}],"position":{"start":{"line":78,"column":19,"offset":2138},"end":{"line":78,"column":25,"offset":2144}}},{"type":"text","value":"文件，也就是在命令行输入 ","position":{"start":{"line":78,"column":25,"offset":2144},"end":{"line":78,"column":38,"offset":2157}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python somefile.py","position":{"start":{"line":78,"column":38,"offset":2157},"end":{"line":78,"column":58,"offset":2177}}}],"position":{"start":{"line":78,"column":38,"offset":2157},"end":{"line":78,"column":58,"offset":2177}}},{"type":"text","value":"里面的那个","position":{"start":{"line":78,"column":58,"offset":2177},"end":{"line":78,"column":63,"offset":2182}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"somefile.py","position":{"start":{"line":78,"column":63,"offset":2182},"end":{"line":78,"column":76,"offset":2195}}}],"position":{"start":{"line":78,"column":63,"offset":2182},"end":{"line":78,"column":76,"offset":2195}}},{"type":"text","value":"。","position":{"start":{"line":78,"column":76,"offset":2195},"end":{"line":78,"column":77,"offset":2196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"毕竟 python 是一种很轻量化的语言，在一定程度上可以起到 shell 的作用，有些命令我们并不想要用完就扔，而是保存起来以便以后重复执行，另外很多命令的组合组合成函数也可以极大地简化工作。在这种语境之下, interactive 和 script 的关系，就好像 Linux 命令行和 bash script 的关系一样。","position":{"start":{"line":79,"column":8,"offset":2205},"end":{"line":79,"column":172,"offset":2369}}}],"position":{"start":{"line":79,"column":5,"offset":2202},"end":{"line":79,"column":172,"offset":2369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"但同时 python 又是一种功能很全面的语言，完全可以胜任复杂的面向对象编程。在这种语境之下，script 也可以用来指代 main module，也就是程序执行的主文件和入口，和下面的一般的 module 相区分。","position":{"start":{"line":80,"column":8,"offset":2378},"end":{"line":80,"column":117,"offset":2487}}}],"position":{"start":{"line":80,"column":5,"offset":2375},"end":{"line":80,"column":117,"offset":2487}}},{"type":"text","value":"\n"}],"position":{"start":{"line":79,"column":5,"offset":2202},"end":{"line":80,"column":117,"offset":2487}}},{"type":"text","value":"\n"}],"position":{"start":{"line":78,"column":1,"offset":2120},"end":{"line":80,"column":117,"offset":2487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"module: python ","position":{"start":{"line":81,"column":4,"offset":2492},"end":{"line":81,"column":19,"offset":2507}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"模块","position":{"start":{"line":81,"column":21,"offset":2509},"end":{"line":81,"column":23,"offset":2511}}}],"position":{"start":{"line":81,"column":19,"offset":2507},"end":{"line":81,"column":25,"offset":2513}}},{"type":"text","value":"文件，也就是在命令行输入 ","position":{"start":{"line":81,"column":25,"offset":2513},"end":{"line":81,"column":38,"offset":2526}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python -m another","position":{"start":{"line":81,"column":38,"offset":2526},"end":{"line":81,"column":57,"offset":2545}}}],"position":{"start":{"line":81,"column":38,"offset":2526},"end":{"line":81,"column":57,"offset":2545}}},{"type":"text","value":" 里面的那个 ","position":{"start":{"line":81,"column":57,"offset":2545},"end":{"line":81,"column":64,"offset":2552}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"another","position":{"start":{"line":81,"column":64,"offset":2552},"end":{"line":81,"column":73,"offset":2561}}}],"position":{"start":{"line":81,"column":64,"offset":2552},"end":{"line":81,"column":73,"offset":2561}}},{"type":"text","value":"（注意这里不写拓展名 ","position":{"start":{"line":81,"column":73,"offset":2561},"end":{"line":81,"column":84,"offset":2572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".py","position":{"start":{"line":81,"column":84,"offset":2572},"end":{"line":81,"column":89,"offset":2577}}}],"position":{"start":{"line":81,"column":84,"offset":2572},"end":{"line":81,"column":89,"offset":2577}}},{"type":"text","value":"）。按照官方文档的说法，所有 ","position":{"start":{"line":81,"column":89,"offset":2577},"end":{"line":81,"column":104,"offset":2592}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".py","position":{"start":{"line":81,"column":104,"offset":2592},"end":{"line":81,"column":109,"offset":2597}}}],"position":{"start":{"line":81,"column":104,"offset":2592},"end":{"line":81,"column":109,"offset":2597}}},{"type":"text","value":" 文件都是 module。但是实际上这句话很有误导性，上一节的 main module 和一般的 module 非常不同，下一节会详细展开讲。一般提到 module，都是在强调这个文件定义的变量和函数可以被其他的 python 文件引用。","position":{"start":{"line":81,"column":109,"offset":2597},"end":{"line":81,"column":228,"offset":2716}}}],"position":{"start":{"line":81,"column":1,"offset":2489},"end":{"line":81,"column":228,"offset":2716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"package: python ","position":{"start":{"line":82,"column":4,"offset":2721},"end":{"line":82,"column":20,"offset":2737}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"包","position":{"start":{"line":82,"column":22,"offset":2739},"end":{"line":82,"column":23,"offset":2740}}}],"position":{"start":{"line":82,"column":20,"offset":2737},"end":{"line":82,"column":25,"offset":2742}}},{"type":"text","value":"，互相关联的 modules 构成的更高一级的可供引用的结构，简单理解就是含有 ","position":{"start":{"line":82,"column":25,"offset":2742},"end":{"line":82,"column":65,"offset":2782}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__init__.py","position":{"start":{"line":82,"column":65,"offset":2782},"end":{"line":82,"column":78,"offset":2795}}}],"position":{"start":{"line":82,"column":65,"offset":2782},"end":{"line":82,"column":78,"offset":2795}}},{"type":"text","value":" 的文件夹，但是 python 并不是根据文件夹和文件之间的从属关系来确定 package 和 module 之间的关系的，下一节会详细展开讲。","position":{"start":{"line":82,"column":78,"offset":2795},"end":{"line":82,"column":150,"offset":2867}}}],"position":{"start":{"line":82,"column":1,"offset":2718},"end":{"line":82,"column":150,"offset":2867}}},{"type":"text","value":"\n"}],"position":{"start":{"line":77,"column":1,"offset":1995},"end":{"line":82,"column":150,"offset":2867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"script-vs-module"},"children":[{"type":"element","tagName":"a","properties":{"href":"#script-vs-module"},"children":[{"type":"text","value":"script vs. module","position":{"start":{"line":84,"column":4,"offset":2874},"end":{"line":84,"column":21,"offset":2891}}}]}],"position":{"start":{"line":84,"column":1,"offset":2871},"end":{"line":84,"column":21,"offset":2891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"python 同时兼具脚本语言的灵活性，和各种重型语言的功能全面性。因为前者，所以它并不要求程序作者一定要在一个叫做 ","position":{"start":{"line":86,"column":1,"offset":2895},"end":{"line":86,"column":60,"offset":2954}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main.py","position":{"start":{"line":86,"column":60,"offset":2954},"end":{"line":86,"column":69,"offset":2963}}}],"position":{"start":{"line":86,"column":60,"offset":2954},"end":{"line":86,"column":69,"offset":2963}}},{"type":"text","value":" 的文件里写一个名叫 ","position":{"start":{"line":86,"column":69,"offset":2963},"end":{"line":86,"column":80,"offset":2974}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Main","position":{"start":{"line":86,"column":80,"offset":2974},"end":{"line":86,"column":86,"offset":2980}}}],"position":{"start":{"line":86,"column":80,"offset":2974},"end":{"line":86,"column":86,"offset":2980}}},{"type":"text","value":" 的类, 然后在里面实现一个 ","position":{"start":{"line":86,"column":86,"offset":2980},"end":{"line":86,"column":101,"offset":2995}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main()","position":{"start":{"line":86,"column":101,"offset":2995},"end":{"line":86,"column":109,"offset":3003}}}],"position":{"start":{"line":86,"column":101,"offset":2995},"end":{"line":86,"column":109,"offset":3003}}},{"type":"text","value":" 方法。但是因为后者，没写不代表 python 不需要知道一个复杂程序执行的起点。","position":{"start":{"line":86,"column":109,"offset":3003},"end":{"line":86,"column":150,"offset":3044}}}],"position":{"start":{"line":86,"column":1,"offset":2895},"end":{"line":86,"column":150,"offset":3044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个起点就是不带有 ","position":{"start":{"line":88,"column":1,"offset":3048},"end":{"line":88,"column":11,"offset":3058}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-m","position":{"start":{"line":88,"column":11,"offset":3058},"end":{"line":88,"column":15,"offset":3062}}}],"position":{"start":{"line":88,"column":11,"offset":3058},"end":{"line":88,"column":15,"offset":3062}}},{"type":"text","value":" 参数的 ","position":{"start":{"line":88,"column":15,"offset":3062},"end":{"line":88,"column":20,"offset":3067}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python","position":{"start":{"line":88,"column":20,"offset":3067},"end":{"line":88,"column":28,"offset":3075}}}],"position":{"start":{"line":88,"column":20,"offset":3067},"end":{"line":88,"column":28,"offset":3075}}},{"type":"text","value":" 命令后面跟着的 ","position":{"start":{"line":88,"column":28,"offset":3075},"end":{"line":88,"column":37,"offset":3084}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".py","position":{"start":{"line":88,"column":37,"offset":3084},"end":{"line":88,"column":42,"offset":3089}}}],"position":{"start":{"line":88,"column":37,"offset":3084},"end":{"line":88,"column":42,"offset":3089}}},{"type":"text","value":" 文件，这就使得这个文件变得比其他 ","position":{"start":{"line":88,"column":42,"offset":3089},"end":{"line":88,"column":60,"offset":3107}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".py","position":{"start":{"line":88,"column":60,"offset":3107},"end":{"line":88,"column":65,"offset":3112}}}],"position":{"start":{"line":88,"column":60,"offset":3107},"end":{"line":88,"column":65,"offset":3112}}},{"type":"text","value":" 文件特殊。底层表现就是 python 会不管这个文件的名字叫什么，都将它的 ","position":{"start":{"line":88,"column":65,"offset":3112},"end":{"line":88,"column":104,"offset":3151}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__name__","position":{"start":{"line":88,"column":104,"offset":3151},"end":{"line":88,"column":114,"offset":3161}}}],"position":{"start":{"line":88,"column":104,"offset":3151},"end":{"line":88,"column":114,"offset":3161}}},{"type":"text","value":" 属性赋值为 ","position":{"start":{"line":88,"column":114,"offset":3161},"end":{"line":88,"column":121,"offset":3168}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"__main__\"","position":{"start":{"line":88,"column":121,"offset":3168},"end":{"line":88,"column":133,"offset":3180}}}],"position":{"start":{"line":88,"column":121,"offset":3168},"end":{"line":88,"column":133,"offset":3180}}},{"type":"text","value":"。这样，即便这个文件可能是一个大型库中间的一个模块，运行的时候 python 连它的真名都不知道，就更找不到它同级和上下级的其他模块了。","position":{"start":{"line":88,"column":133,"offset":3180},"end":{"line":88,"column":201,"offset":3248}}}],"position":{"start":{"line":88,"column":1,"offset":3048},"end":{"line":88,"column":201,"offset":3248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各种普通模块被 python 用到的方法就是通过在主模块 main module（或者说 script）中 import。经过“python 如何读取代码文件”一节中的搜索过程之后找到了所需模块或包，模块的名字、模块之间的关系、模块里定义了哪些属性和函数，就被 python 了解了，从而当主模块召唤他们的时候就知道去哪里找相应的代码。除了在被 import 的时候，","position":{"start":{"line":90,"column":1,"offset":3252},"end":{"line":90,"column":185,"offset":3436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python -m","position":{"start":{"line":90,"column":185,"offset":3436},"end":{"line":90,"column":196,"offset":3447}}}],"position":{"start":{"line":90,"column":185,"offset":3436},"end":{"line":90,"column":196,"offset":3447}}},{"type":"text","value":" 命令的宾语也可以告诉 python 被运行的模块和包的相对关系：","position":{"start":{"line":90,"column":196,"offset":3447},"end":{"line":90,"column":229,"offset":3480}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"python -m sound.formats.wavwrite","position":{"start":{"line":90,"column":229,"offset":3480},"end":{"line":90,"column":263,"offset":3514}}}],"position":{"start":{"line":90,"column":229,"offset":3480},"end":{"line":90,"column":263,"offset":3514}}},{"type":"text","value":" ，此时 python 执行了 ","position":{"start":{"line":90,"column":263,"offset":3514},"end":{"line":90,"column":279,"offset":3530}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wavwrite.py","position":{"start":{"line":90,"column":279,"offset":3530},"end":{"line":90,"column":292,"offset":3543}}}],"position":{"start":{"line":90,"column":279,"offset":3530},"end":{"line":90,"column":292,"offset":3543}}},{"type":"text","value":" 中的所有可执行的命令，同时知道从 ","position":{"start":{"line":90,"column":292,"offset":3543},"end":{"line":90,"column":310,"offset":3561}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sound/","position":{"start":{"line":90,"column":310,"offset":3561},"end":{"line":90,"column":318,"offset":3569}}}],"position":{"start":{"line":90,"column":310,"offset":3561},"end":{"line":90,"column":318,"offset":3569}}},{"type":"text","value":" 到 ","position":{"start":{"line":90,"column":318,"offset":3569},"end":{"line":90,"column":321,"offset":3572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wavwrite.py","position":{"start":{"line":90,"column":321,"offset":3572},"end":{"line":90,"column":334,"offset":3585}}}],"position":{"start":{"line":90,"column":321,"offset":3572},"end":{"line":90,"column":334,"offset":3585}}},{"type":"text","value":" 的各个包之间的关系。","position":{"start":{"line":90,"column":334,"offset":3585},"end":{"line":90,"column":345,"offset":3596}}}],"position":{"start":{"line":90,"column":1,"offset":3252},"end":{"line":90,"column":345,"offset":3596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"absolute-import-vs-relative-import"},"children":[{"type":"element","tagName":"a","properties":{"href":"#absolute-import-vs-relative-import"},"children":[{"type":"text","value":"absolute import vs. relative import","position":{"start":{"line":92,"column":4,"offset":3603},"end":{"line":92,"column":39,"offset":3638}}}]}],"position":{"start":{"line":92,"column":1,"offset":3600},"end":{"line":92,"column":39,"offset":3638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"开头使用已经安装过的包使用的语法全都是绝对引用 (absolute import)，表现就是 import 语句里面没有以 ","position":{"start":{"line":94,"column":1,"offset":3642},"end":{"line":94,"column":63,"offset":3704}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".","position":{"start":{"line":94,"column":63,"offset":3704},"end":{"line":94,"column":66,"offset":3707}}}],"position":{"start":{"line":94,"column":63,"offset":3704},"end":{"line":94,"column":66,"offset":3707}}},{"type":"text","value":" 作为开头的。","position":{"start":{"line":94,"column":66,"offset":3707},"end":{"line":94,"column":73,"offset":3714}}}],"position":{"start":{"line":94,"column":1,"offset":3642},"end":{"line":94,"column":73,"offset":3714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外一种 import 方法叫相对引用 (relative import)，","position":{"start":{"line":96,"column":1,"offset":3718},"end":{"line":96,"column":39,"offset":3756}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".","position":{"start":{"line":96,"column":39,"offset":3756},"end":{"line":96,"column":42,"offset":3759}}}],"position":{"start":{"line":96,"column":39,"offset":3756},"end":{"line":96,"column":42,"offset":3759}}},{"type":"text","value":" 表示模块所在的文件夹，","position":{"start":{"line":96,"column":42,"offset":3759},"end":{"line":96,"column":54,"offset":3771}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"..","position":{"start":{"line":96,"column":54,"offset":3771},"end":{"line":96,"column":58,"offset":3775}}}],"position":{"start":{"line":96,"column":54,"offset":3771},"end":{"line":96,"column":58,"offset":3775}}},{"type":"text","value":" 表示模块的上一级文件夹。主要用在各种明确知道自己是工具代码，而且是一个更高层次结构的组成部分，几乎永远不需要被作为主模块运行的代码。","position":{"start":{"line":96,"column":58,"offset":3775},"end":{"line":96,"column":125,"offset":3842}}}],"position":{"start":{"line":96,"column":1,"offset":3718},"end":{"line":96,"column":125,"offset":3842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"回到开头例子里的文件结构，假如 sound/effects/surround.py 中想要使用 sound/formats/wavwrite.py 和 sound/effects/echo.py 中的函数，可以写成：","position":{"start":{"line":98,"column":1,"offset":3846},"end":{"line":98,"column":109,"offset":3954}}}],"position":{"start":{"line":98,"column":1,"offset":3846},"end":{"line":98,"column":109,"offset":3954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# in sound/effects/surround.py"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"from"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" ..formats "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" wavwrite"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"from"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" . "}]},{"type":"element","tagName":"span","properties":{"style":"color:#D73A49;--shiki-dark:#F97583"},"children":[{"type":"text","value":"import"}]},{"type":"element","tagName":"span","properties":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" echo"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"如何组织代码以便自己重用"},"children":[{"type":"element","tagName":"a","properties":{"href":"#如何组织代码以便自己重用"},"children":[{"type":"text","value":"如何组织代码，以便自己重用","position":{"start":{"line":107,"column":4,"offset":4065},"end":{"line":107,"column":17,"offset":4078}}}]}],"position":{"start":{"line":107,"column":1,"offset":4062},"end":{"line":107,"column":17,"offset":4078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"研究终于推进到了准备写论文的阶段了（学渣本质暴露了），写草稿之余，之前几年时间里做过的处理和分析，接下来的一两个月里需要把工作流程规范化之后迅速重做一遍确认。","position":{"start":{"line":109,"column":1,"offset":4082},"end":{"line":109,"column":80,"offset":4161}}}],"position":{"start":{"line":109,"column":1,"offset":4082},"end":{"line":109,"column":80,"offset":4161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"随手写散落各处的分析代码需要整理到一起，之前试图统一到一个项目之下，结果总是在某个模块引用其他模块的时候遇到报错。于是才有了这篇文章。","position":{"start":{"line":111,"column":1,"offset":4165},"end":{"line":111,"column":68,"offset":4232}}}],"position":{"start":{"line":111,"column":1,"offset":4165},"end":{"line":111,"column":68,"offset":4232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以下是 ","position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":5,"offset":4240}}},{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510"},"children":[{"type":"text","value":"这篇文章","position":{"start":{"line":113,"column":6,"offset":4241},"end":{"line":113,"column":10,"offset":4245}}}],"position":{"start":{"line":113,"column":5,"offset":4240},"end":{"line":113,"column":77,"offset":4312}}},{"type":"text","value":" 给出的一个推荐的项目文件结构：","position":{"start":{"line":113,"column":77,"offset":4312},"end":{"line":113,"column":93,"offset":4328}}}],"position":{"start":{"line":113,"column":1,"offset":4236},"end":{"line":113,"column":93,"offset":4328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\r\n|- notebooks/\r\n   |- 01-first-logical-notebook.ipynb\r\n   |- 02-second-logical-notebook.ipynb\r\n   |- prototype-notebook.ipynb\r\n   |- archive/\r\n\t  |- no-longer-useful.ipynb\r\n|- projectname/\r\n   |- projectname/\r\n\t  |- __init__.py\r\n\t  |- config.py\r\n\t  |- data.py\r\n\t  |- utils.py\r\n   |- setup.py\r\n|- README.md\r\n|- data/\r\n   |- raw/\r\n   |- processed/\r\n   |- cleaned/\r\n|- scripts/\r\n   |- script1.py\r\n   |- script2.py\r\n   |- archive/\r\n      |- no-longer-useful.py\r\n|- environment.yml\n"}],"position":{"start":{"line":115,"column":1,"offset":4332},"end":{"line":141,"column":4,"offset":4819}}}],"position":{"start":{"line":115,"column":1,"offset":4332},"end":{"line":141,"column":4,"offset":4819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"学过这篇笔记包含的内容，我才理解作者这样的安排。既然主文件 ","position":{"start":{"line":143,"column":1,"offset":4823},"end":{"line":143,"column":31,"offset":4853}}},{"type":"element","tagName":"del","properties":{},"children":[{"type":"text","value":"很难","position":{"start":{"line":143,"column":33,"offset":4855},"end":{"line":143,"column":35,"offset":4857}}}],"position":{"start":{"line":143,"column":31,"offset":4853},"end":{"line":143,"column":37,"offset":4859}}},{"type":"text","value":" 没办法通过相对引用来找到工具代码，索性就把工具代码写成一个完整可安装的库，然后就像 ","position":{"start":{"line":143,"column":37,"offset":4859},"end":{"line":143,"column":80,"offset":4902}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"numpy","position":{"start":{"line":143,"column":80,"offset":4902},"end":{"line":143,"column":87,"offset":4909}}}],"position":{"start":{"line":143,"column":80,"offset":4902},"end":{"line":143,"column":87,"offset":4909}}},{"type":"text","value":", ","position":{"start":{"line":143,"column":87,"offset":4909},"end":{"line":143,"column":89,"offset":4911}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pandas","position":{"start":{"line":143,"column":89,"offset":4911},"end":{"line":143,"column":97,"offset":4919}}}],"position":{"start":{"line":143,"column":89,"offset":4911},"end":{"line":143,"column":97,"offset":4919}}},{"type":"text","value":" 一样在独立的 notebook 和 scripts 中引用。","position":{"start":{"line":143,"column":97,"offset":4919},"end":{"line":143,"column":128,"offset":4950}}}],"position":{"start":{"line":143,"column":1,"offset":4823},"end":{"line":143,"column":128,"offset":4950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"实际使用的时候，需要安装 ","position":{"start":{"line":145,"column":1,"offset":4954},"end":{"line":145,"column":14,"offset":4967}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"projectname","position":{"start":{"line":145,"column":14,"offset":4967},"end":{"line":145,"column":27,"offset":4980}}}],"position":{"start":{"line":145,"column":14,"offset":4967},"end":{"line":145,"column":27,"offset":4980}}},{"type":"text","value":" 下的代码：","position":{"start":{"line":145,"column":27,"offset":4980},"end":{"line":145,"column":33,"offset":4986}}}],"position":{"start":{"line":145,"column":1,"offset":4954},"end":{"line":145,"column":33,"offset":4986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"class":"shiki shiki-themes github-light github-dark","style":"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8","tabindex":"0"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" projectname"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"class":"line"},"children":[{"type":"element","tagName":"span","properties":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"pip"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" install"}]},{"type":"element","tagName":"span","properties":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" -e"}]},{"type":"element","tagName":"span","properties":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" ."}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"要知道为什么这样做，需要理解 ","position":{"start":{"line":152,"column":1,"offset":5040},"end":{"line":152,"column":16,"offset":5055}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setup.py","position":{"start":{"line":152,"column":16,"offset":5055},"end":{"line":152,"column":26,"offset":5065}}}],"position":{"start":{"line":152,"column":16,"offset":5055},"end":{"line":152,"column":26,"offset":5065}}},{"type":"text","value":" 这个文件。这篇文章已经够长了，所以这个话题还是下次再说吧。","position":{"start":{"line":152,"column":26,"offset":5065},"end":{"line":152,"column":56,"offset":5095}}}],"position":{"start":{"line":152,"column":1,"offset":5040},"end":{"line":152,"column":56,"offset":5095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"参考链接"},"children":[{"type":"element","tagName":"a","properties":{"href":"#参考链接"},"children":[{"type":"text","value":"参考链接","position":{"start":{"line":154,"column":4,"offset":5102},"end":{"line":154,"column":8,"offset":5106}}}]}],"position":{"start":{"line":154,"column":1,"offset":5099},"end":{"line":154,"column":8,"offset":5106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/7948494/whats-the-difference-between-a-python-module-and-a-python-package"},"children":[{"type":"text","value":"What's the difference between a Python module and a Python package?","position":{"start":{"line":156,"column":4,"offset":5113},"end":{"line":156,"column":71,"offset":5180}}}],"position":{"start":{"line":156,"column":3,"offset":5112},"end":{"line":156,"column":183,"offset":5292}}},{"type":"text","value":". all python files re modules, while package is a specific kind of modules. It is a subsection of module in the python documentation.","position":{"start":{"line":156,"column":183,"offset":5292},"end":{"line":156,"column":316,"offset":5425}}}],"position":{"start":{"line":156,"column":1,"offset":5110},"end":{"line":156,"column":316,"offset":5425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Official explanation of python module: ","position":{"start":{"line":157,"column":3,"offset":5429},"end":{"line":157,"column":42,"offset":5468}}},{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/tutorial/modules.html"},"children":[{"type":"text","value":"https://docs.python.org/3/tutorial/modules.html","position":{"start":{"line":157,"column":43,"offset":5469},"end":{"line":157,"column":90,"offset":5516}}}],"position":{"start":{"line":157,"column":42,"offset":5468},"end":{"line":157,"column":140,"offset":5566}}}],"position":{"start":{"line":157,"column":1,"offset":5427},"end":{"line":157,"column":140,"offset":5566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time"},"children":[{"type":"text","value":"This stackoverflow  answer: \"run as module\" is different from \"run as script\".","position":{"start":{"line":158,"column":4,"offset":5571},"end":{"line":158,"column":82,"offset":5649}}}],"position":{"start":{"line":158,"column":3,"offset":5570},"end":{"line":158,"column":169,"offset":5736}}},{"type":"text","value":" run as module sets the \"name\" to the module's name, while running as script sets it to ","position":{"start":{"line":158,"column":169,"offset":5736},"end":{"line":158,"column":257,"offset":5824}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__main__","position":{"start":{"line":158,"column":257,"offset":5824},"end":{"line":158,"column":267,"offset":5834}}}],"position":{"start":{"line":158,"column":257,"offset":5824},"end":{"line":158,"column":267,"offset":5834}}},{"type":"text","value":" . Here we use \"name\" instead of ","position":{"start":{"line":158,"column":267,"offset":5834},"end":{"line":158,"column":300,"offset":5867}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__name__","position":{"start":{"line":158,"column":300,"offset":5867},"end":{"line":158,"column":310,"offset":5877}}}],"position":{"start":{"line":158,"column":300,"offset":5867},"end":{"line":158,"column":310,"offset":5877}}},{"type":"text","value":" because it also contains ","position":{"start":{"line":158,"column":310,"offset":5877},"end":{"line":158,"column":336,"offset":5903}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__path__","position":{"start":{"line":158,"column":336,"offset":5903},"end":{"line":158,"column":346,"offset":5913}}}],"position":{"start":{"line":158,"column":336,"offset":5903},"end":{"line":158,"column":346,"offset":5913}}},{"type":"text","value":" in newer versions.","position":{"start":{"line":158,"column":346,"offset":5913},"end":{"line":158,"column":365,"offset":5932}}}],"position":{"start":{"line":158,"column":1,"offset":5568},"end":{"line":158,"column":365,"offset":5932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A tutorial for project organization: ","position":{"start":{"line":159,"column":3,"offset":5936},"end":{"line":159,"column":40,"offset":5973}}},{"type":"element","tagName":"a","properties":{"href":"https://realpython.com/python-application-layouts/"},"children":[{"type":"text","value":"https://realpython.com/python-application-layouts/","position":{"start":{"line":159,"column":41,"offset":5974},"end":{"line":159,"column":91,"offset":6024}}}],"position":{"start":{"line":159,"column":40,"offset":5973},"end":{"line":159,"column":144,"offset":6077}}}],"position":{"start":{"line":159,"column":1,"offset":5934},"end":{"line":159,"column":144,"offset":6077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Official about packaging: ","position":{"start":{"line":160,"column":3,"offset":6081},"end":{"line":160,"column":29,"offset":6107}}},{"type":"element","tagName":"a","properties":{"href":"https://packaging.python.org/en/latest/tutorials/packaging-projects/"},"children":[{"type":"text","value":"https://packaging.python.org/en/latest/tutorials/packaging-projects/","position":{"start":{"line":160,"column":30,"offset":6108},"end":{"line":160,"column":98,"offset":6176}}}],"position":{"start":{"line":160,"column":29,"offset":6107},"end":{"line":160,"column":169,"offset":6247}}}],"position":{"start":{"line":160,"column":1,"offset":6079},"end":{"line":160,"column":169,"offset":6247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Gist: How to organize data science project: ","position":{"start":{"line":161,"column":3,"offset":6251},"end":{"line":161,"column":47,"offset":6295}}},{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510"},"children":[{"type":"text","value":"https://gist.github.com/ericmjl/27e50331f24db3e8f957d1fe7bbbe510","position":{"start":{"line":161,"column":48,"offset":6296},"end":{"line":161,"column":112,"offset":6360}}}],"position":{"start":{"line":161,"column":47,"offset":6295},"end":{"line":161,"column":179,"offset":6427}}}],"position":{"start":{"line":161,"column":1,"offset":6249},"end":{"line":161,"column":179,"offset":6427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"From the gist there is a link: ","position":{"start":{"line":162,"column":3,"offset":6431},"end":{"line":162,"column":34,"offset":6462}}},{"type":"element","tagName":"a","properties":{"href":"http://drivendata.github.io/cookiecutter-data-science"},"children":[{"type":"text","value":"http://drivendata.github.io/cookiecutter-data-science","position":{"start":{"line":162,"column":35,"offset":6463},"end":{"line":162,"column":88,"offset":6516}}}],"position":{"start":{"line":162,"column":34,"offset":6462},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":162,"column":1,"offset":6429},"end":{"line":162,"column":144,"offset":6572}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5110},"end":{"line":162,"column":144,"offset":6572}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":162,"column":144,"offset":6572}}}},"__N_SSG":true}