{"pageProps":{"metadata":{"slug":"qc-hackathon-write-up","date":"2021-04-22","title":".qs | QC Hack 量子编程马拉松","filename":"2021-04-22-qc-hackathon-write-up.md","url":"qc-hackathon-write-up","layout":"post","keywords":["md"],"hasMath":true,"excerpt":"4月初的时候，系秘书转发了一封邮件，耶鲁和斯坦福有两个关于量子计算的学生社团，打算举办为期一周的线上训练营,然后在周末举办一个24小时的编程马拉松","content":"\n\n## 一\n\n4月初的时候，系秘书转发了一封邮件，耶鲁和斯坦福有两个关于量子计算的学生社团，打算举办为期一周的[线上训练营](https://www.quantumcoalition.io/)，然后在周末举办一个24小时的编程马拉松 ([hackathon](https://en.wikipedia.org/wiki/Hackathon)) 的活动。只要年满18岁就可以参加，并不限定本科生。\n\n整个活动由几家从事量子计算的科技公司赞助，前面的线上训练营基本就是各家轮流上来介绍一下自己家的量子计算平台的使用方法，最后的编程马拉松也由他们每家出一套题，所以这个活动也有在学生和公司之间搭桥，给参与者争取实习机会的目的在里面。参与者可以自由组队，但是在项目提交的的时候每个人只能属于一支队伍。虽然参与者可以参加任意数量的题目，但是每一名参与者最终只能成为一家公司的优胜者。如果预感到自己在某一个项目的赢面比较大，可以在提交之前通知自己参加的其他队伍把自己除名。24小时的时间限制还是比较紧迫的，所以基本上认准一家答题就可以了。\n\n女朋友也收到了一样的邮件，所以理所当然地一起组队。我之前在本科阶段上过一门一学期的量子信息和量子通信课程，内容约等于在量子力学之后再上一个学期的习题课，以及在不讲群论的情况下应用 SU(2) 群，并没有接触过这个活动中会用到的编程语言。女朋友没有上过这门课，基本就是物理专业普通研究生的量子力学水平。周中的线上训练营，我只参加了第一天的，是 Microsoft 的 Quantum Development Kit (QDK) 和 Q# 编程语言相关的，顺便介绍了一下量子计算中很有名的 Deutsch 算法。剩下的讲座我基本上都没有参加，一方面是知道前面的规则之后就懒下来了，另一方面是实验室的工作仍然需要继续，再有就是线上活动实在是太容易摸鱼了没有效率。周五的晚上，女朋友看了一晚上我的量子信息笔记，我看了看 Q# 的语法规则，在台式机上安装了开发环境。以上就是我们参加编程马拉松之前的基础和准备。\n\n\n## 二\n\nHackathon 美东时间周六上午10点开始，周日上午10点结束。因为我们只看了 Microsoft 相关的内容，所以直奔[相关题目](https://github.com/quantumcoalition/qchack-microsoft-challenge)。\n\n题目一共分为两部分。\n\n第一部分一共四道题，就像是一般的计算机课程的作业一样，参赛者只需要在举办方写好的主程序文件里的指定区域填入代码，然后运行主办方写好的测试文件检查结果，测试通过即可得分。四道题目要求如下：\n\n1. 判断一个3-5位的2进制数能否被4整除。\n2. 判断一个3比特位当中是否至少有两位不同。\n3. 同第2题，但是要求量子比特门最多只能使用 3-比特，而且 3-比特门最多使用一次。\n4. 给定一个有两种颜色的无向图，判断图当中不含有任何单一颜色的三角形。\n\n第二部分内容比较自由，要求用 Grover's 算法解决一个自己感兴趣的问题，打哪指哪，然后写一篇文章介绍自己的这个项目，并提交相关的代码。根据问题深度(6分)、工具使用(5分)、创新性(4分)、教育价值(5分) 四方面进行评分。\n\n\n## 三\n\n### I.1.\n\n第一道题最简单，但是我们当时约等于0基础，所以做起来也颇费了一些时间。不过由于我听过第一天的课，知道 `oracle` 在 Q# 编程语言中是一个很重要的概念，所以在题目给出的参考教程 [Quantum Kantas](https://github.com/Microsoft/QuantumKatas/) 里找到了[oracle 相关的教程](https://github.com/microsoft/QuantumKatas/tree/main/tutorials/Oracles)。里面有个名为 `ControlledOnBitString` 的 function，可以根据一串量子比特的取值是否等于一个特定的二值串而对另外一个比特做一个特定的操作。前一天晚上又知道了 `Microsoft.Quantum.Convert` 的 namespace 里有各种数据类型转换的函数，搭配 `IntAsBoolArray`，就做出了第一题的初版。后来看到了更简单的 `ControlledOnInt` 函数，就直接用上了。\n\n### I.2.\n\n第二题的初版是女朋友做的。题目要求是找出是否至少两位不同，这一判断的否定就是三位比特全部相同，所以同样用 `ControlledOnBitString` 函数，然后判断一次全 `true` 一次全 `false`，再把最终结果取反就可以了。但是在做第三题的时候，因为两个题目长得太像了，中间不小心把一个能通过第二题测试但是通不过第三题测试的答案直接覆盖在了第二题上面，懒的改回去了，于是就成了最后提交的版本。\n\n### I.3.\n\n第三题和第二题非常不同。第二题的解决思路中，判断全 `true` 和全 `false`有3个控制位1个输出位，这里用了两次 4-量子比特门，所以第三问需要全新的思路。另外我曾经试过在一个 `operation` 里申请一个新的 `Qubit()` 结果测试报错，因为误解了报错信息，所以误认为除了程序的主 operation 之外不能创建新的 qubit，于是被卡住了。这时候已经来到了下午，实在想不出来又很困，于是去床上躺了一会。半睡半醒之间想到，题目虽然要求输入的量子比特不变，但是我们仍然可以直接改动输入，只要在函数结束之前把对输入的改动全部复原就可以了。于是用 CNOT 门分别作用在 1-2, 1-3 对输入的量子比特上，两个门分别以第2、3号比特为输出。然后用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上。为了复原第2、3号比特，只需要把 CNOT 在两对比特上分别再用一次就行了。\n\n但是这个结果还是无法通过测试（后来成为了第二题的提交版本），报错的提示信息是使用了超过一次 3-量子比特门——这不是开玩笑吗？于是打开了官方提供的测试文件，发现测试代码计算 3-量子比特门的使用次数的时候，会把用户定义的 3-量子比特门的数量，和 `CCNOT` 门的数量做加法，于是看文档，我们定义的那个 “用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上” 的操作和 `CCNOT` 门是等价的，于是直接换用 `CCNOT` 门，问题解决。\n\n### I.4.\n\n第四题看起来复杂，但是可以分成三个部分：\n\n1. 找出图中所有的三角形，确定每个三角形的三条边，这一步完全可以用经典算法完成；\n2. 创建一个和三角形相同数量的量子比特数列，对每个三角形，把三条边直接带入第二/三题的操作里，结果输入创建的量子比特列中；\n3. 判断量子比特列是否全为 `true`，结果输出到整个程序的结果位上。\n\n第一步由女朋友来想我来写（毕竟只有一台电脑有开发环境），难点在于：\n\n1. Q# 语法改变数列值的语法十分难受\n    <br>`mutable points = [-1,-1,-1,-1,-1,-1];`\n    <br>`set points w/=0..1 <- [0,1];`；\n2. 作为一种强类型语言对元组和数列的区分让我这个 python 选手十分蛋疼\n    <br>`(Int,Int)`/`Int[]`；\n3. 求数列中不重复的值居然不排序不能给出正确结果。\n    <br>`let uniquePoints = Arrays.Unique(EqualI,Arrays.Sorted(LessThanI,points));`\n\n这也是唯一一段用上了 `Message()` 函数来 debug 的部分。\n\n第三步就重新回到了第三题暂时敷衍掉的问题：对于在操作中创建的 `Qubit()`/`Qubit[]`，`Reset()`/`ResetAll()` 函数相当于测量，会破坏操作的 adjoint 性质，不测量则（当时的我）没有办法将这个量子比特列复原。\n\n此时已经午夜，我来解决这个问题，女朋友去看第二部分，后来她看完 Grover‘s 算法的教程去睡了，我还在想这个问题。直接把报错信息复制到 Google，找到了一个[论坛里的问答]()，好像是去年微软在其他地方举办的类似活动的。里面只是提到要“uncompute the qubits”，给出的例子用的是旧版本 Q# 的语法，~~没法直接抄~~ 。最终不抱希望地把之前对那个 `Qubit[]` 做过的循环顺序倒过来重做了一遍，诶，您猜怎么着，还是没通过！绝望了！正序重做一边，诶，通过了！为什么为什么为什么？到现在也没弄清楚。\n\n### II.\n\n然后把女朋友叫醒，让她来讲一讲 Grover's 算法。听完之后我的理解是，对于一个 $$f:(0,1)^N \\rarr (0,1)$$ 的函数，这个算法可以大概率地找到一个解 $$S\\in(0,1)^N$$ 满足 $$f(S)=1$$. \n\n至于这个函数 $$f$$，之前每一道题都是这样一个函数，当时已经夜里两三点了，实在是没时间再想一个新函数了，于是我们直接就拿复杂度最高的第4题来换个皮。换个什么皮呢？为了这个活动翘掉了这周的[《文明6》联机游戏](barrier-forward-keyboard-mouse-to-another-computer)，然后之前看 YouTuber [\"PotatoMcWhiskey\"](https://www.youtube.com/user/PotatoMcWhiskey)介绍过[一个 Mod](https://steamcommunity.com/sharedfiles/filedetails/?id=1753346735&searchtext=diplomacy)，里面可以将文明之间的外交关系可视化为无向图，所以，诶嘿嘿嘿……\n\n女朋友写完文稿就睡了，我把文稿改了改，然后和官方对 Grover's 算法的实现缝合了一下。提交的时候，距离截止时间大约还有一个小时。\n\n\n## 四\n\n之后的周五的时候收到了消息，我们得奖了。优胜者一共6支队伍。从活动结束之后公布的结果看，要想成为优胜，第一部分的4道题必须全部正确，然后第二部分得分在 8-20 分之间。\n\n这个成绩是个什么水平？截止到写这篇文章的此刻，官方题目的 Github 仓库有 80 份 fork，有少数几份 fork 是针对已有的 fork，有可能来自同一队伍，再考虑到可能有些队伍的不同成员分别 fork 了主项目，所以估测 60 支队伍应该是有的，官方给出 6 组优胜者这么一个不零不整的数字，个人猜测是取了前 10%？据主办方在 discord 提供的消息，有一支队伍的第二题成绩高于8分，但是前面没有全对，所以没有得奖；其余队伍的第二题都不超过6分；并不清楚有多少队伍第一题全对，主办方也不打算公布各队的详细成绩。\n\n这大约说明活动的参与者，其成绩基本上符合二八原理——少数人得到的分数，占据了所有参赛者全部得分的大多数。\n\n参加过这个活动之后，我们一下子就从量子计算小白摇身一变，成了优秀人才了？实际上，直到现在，我还是搞不太清楚 oracle 到底是个什么东西，女朋友对量子计算的理解估计比我还差（逃）。美国哲学教授约翰·希尔勒提出过一个叫做[“中文房间”](https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%88%BF%E9%97%B4)的思想实验，说一个只会说英语的人被关在一间满是汉字字块的房间里，不断从房间外收到写着中文问题的纸条。房间里有一本英文写成的手册，指示如何对输入的汉字进行回复。凭借这个手册，房中人可以在完全不会中文的情况下，与外界进行交流。希尔勒类比外人、房中人、手册，与程序员、计算机、计算机程序，认为房中人不会中文，进而论证计算机不可能通过程序来获得理解力。\n\n希尔勒教授想论证啥是他的事，我倒是对这个类比的本体很感兴趣——如果一个人已经能够熟练运用那个英文写成的汉字使用手册了，我们还能不能，能在多大程度上说他不懂中文呢？就说一般的程序员，工作时间能保证不看 stack overflow 的有几个，所以他们都不会编程？反对中文房间思想实验结论的人，很多都支持用图灵测试超过某一阈值来作为有智能的标志，但是我觉得，智能本身就不是一个非有即无的性质，而是一个连续分布，没有上限的谱。\n\n另一方面，得分名列前茅，和能力名列前茅，又是两回事。本科的时候做建模美赛，我们学校数理金融的一个学神前一年成绩“略有不佳”，没拿到 M 奖，于是我们那年找到了我和风神俩学物理的，准备再次冲击荣誉。巧了这一年的题目正好有一道浴缸放热水的问题，这不就是物理中的扩散方程嘛，那得奖还不是手拿把掐的？结果呢，H 奖，丢人丢到姥姥家去了。合着我们两个成绩还都不错的物理专业学生，在自己的专业里，打不过那么多同龄的非物理专业本科生？\n\n两相对照之下，我想起了很久之前看过的一篇博客文章，文章以一个问题开头——“熟练”的反义词是什么？当然说“生疏”这文章就写不下去了，作者给出的答案是——“应变”。熟练意味着，你对于问题、选项、最优解已经有了充分且完备的了解，只需要重复自己的经验就可以了，但是在自己不了解的战场上，经验至少不能直接派上用场，这时候，脱离具体环境的应变能力就成了生存和取胜的关键，我们当时的专业水平高不成低不就，反而成了掣肘我们的桎梏。\n\n读到这篇文章的时候，我被这种剑走偏锋的观点击中了，从那以后，一直都在注意培养自己的应变能力——如果明天我所研究的这个领域消失了，我还有没有谋生的能力？如果自己正在解决的问题被上帝或者 Matrix 作弊修改成一个新问题，我能不能看到连作弊都改动不了的题眼，然后一击命中？在凌晨两三点的时候，我也没有放弃解决第一题第 4 问的 Qubit 复位问题，虽然当时我并不知道评分标准，但是内心非常确定，这个问题必须解决。\n\n以上两次活动的成绩差别，也可以从得奖难度来看。建模美赛的 M 奖，得奖率应该远小于 10%，即便考虑到二八原理中绝大多数参赛者都只是凑数，而且样本越大凑数者越多，这个差距也还是无法忽略。我们能够得奖，和量子计算领域才刚刚萌芽，连“方兴未艾”都算不上，因此竞争并不激烈也有很大关系，应变能力是切入这些蓝海领域的必要条件，是躲避内卷的利器。我们现在对“内卷”人人喊打，但是培养应变能力是需要牺牲相当多本可以精进专业的时间和精力的。当社会中的大多数人向往着逃离内卷的时候，真的不需要有人咬定一个领域不断深耕？我现在的选择真的正确吗？我不知道。我是打算留在当前的领域继续熟练，还是换个领域应变，抑或是虚掷 PhD 光阴换一张工作签证？我也不知道。\n\n## 五\n\n哦对了，我有女朋友了，而且在 hackathon 的过程中把女朋友惹哭了……问题是我现在已经不记得具体是怎么把人家惹哭的了，连道歉都显得很不诚恳……我确实是一个不擅长合作的人，或者说跟别人说话的我，和想问题的我并不是同一个人，之前本科 CUPT 和建模的时候也一样，需要和人打交道的时候就几乎干不了活儿，严重的时候自己就退化成了鼓励师……总之一切错误在我，希望她不要记仇…… <br>（。・＿・。）ﾉ\n"},"mdAst":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"一","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":5,"offset":6}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":5,"offset":6}}},{"type":"paragraph","children":[{"type":"text","value":"4月初的时候，系秘书转发了一封邮件，耶鲁和斯坦福有两个关于量子计算的学生社团，打算举办为期一周的","position":{"start":{"line":5,"column":1,"offset":8},"end":{"line":5,"column":49,"offset":56}}},{"type":"link","title":null,"url":"https://www.quantumcoalition.io/","children":[{"type":"text","value":"线上训练营","position":{"start":{"line":5,"column":50,"offset":57},"end":{"line":5,"column":55,"offset":62}}}],"position":{"start":{"line":5,"column":49,"offset":56},"end":{"line":5,"column":90,"offset":97}}},{"type":"text","value":"，然后在周末举办一个24小时的编程马拉松 (","position":{"start":{"line":5,"column":90,"offset":97},"end":{"line":5,"column":112,"offset":119}}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Hackathon","children":[{"type":"text","value":"hackathon","position":{"start":{"line":5,"column":113,"offset":120},"end":{"line":5,"column":122,"offset":129}}}],"position":{"start":{"line":5,"column":112,"offset":119},"end":{"line":5,"column":164,"offset":171}}},{"type":"text","value":") 的活动。只要年满18岁就可以参加，并不限定本科生。","position":{"start":{"line":5,"column":164,"offset":171},"end":{"line":5,"column":191,"offset":198}}}],"position":{"start":{"line":5,"column":1,"offset":8},"end":{"line":5,"column":191,"offset":198}}},{"type":"paragraph","children":[{"type":"text","value":"整个活动由几家从事量子计算的科技公司赞助，前面的线上训练营基本就是各家轮流上来介绍一下自己家的量子计算平台的使用方法，最后的编程马拉松也由他们每家出一套题，所以这个活动也有在学生和公司之间搭桥，给参与者争取实习机会的目的在里面。参与者可以自由组队，但是在项目提交的的时候每个人只能属于一支队伍。虽然参与者可以参加任意数量的题目，但是每一名参与者最终只能成为一家公司的优胜者。如果预感到自己在某一个项目的赢面比较大，可以在提交之前通知自己参加的其他队伍把自己除名。24小时的时间限制还是比较紧迫的，所以基本上认准一家答题就可以了。","position":{"start":{"line":7,"column":1,"offset":200},"end":{"line":7,"column":265,"offset":464}}}],"position":{"start":{"line":7,"column":1,"offset":200},"end":{"line":7,"column":265,"offset":464}}},{"type":"paragraph","children":[{"type":"text","value":"女朋友也收到了一样的邮件，所以理所当然地一起组队。我之前在本科阶段上过一门一学期的量子信息和量子通信课程，内容约等于在量子力学之后再上一个学期的习题课，以及在不讲群论的情况下应用 SU(2) 群，并没有接触过这个活动中会用到的编程语言。女朋友没有上过这门课，基本就是物理专业普通研究生的量子力学水平。周中的线上训练营，我只参加了第一天的，是 Microsoft 的 Quantum Development Kit (QDK) 和 Q# 编程语言相关的，顺便介绍了一下量子计算中很有名的 Deutsch 算法。剩下的讲座我基本上都没有参加，一方面是知道前面的规则之后就懒下来了，另一方面是实验室的工作仍然需要继续，再有就是线上活动实在是太容易摸鱼了没有效率。周五的晚上，女朋友看了一晚上我的量子信息笔记，我看了看 Q# 的语法规则，在台式机上安装了开发环境。以上就是我们参加编程马拉松之前的基础和准备。","position":{"start":{"line":9,"column":1,"offset":466},"end":{"line":9,"column":401,"offset":866}}}],"position":{"start":{"line":9,"column":1,"offset":466},"end":{"line":9,"column":401,"offset":866}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"二","position":{"start":{"line":12,"column":4,"offset":872},"end":{"line":12,"column":5,"offset":873}}}],"position":{"start":{"line":12,"column":1,"offset":869},"end":{"line":12,"column":5,"offset":873}}},{"type":"paragraph","children":[{"type":"text","value":"Hackathon 美东时间周六上午10点开始，周日上午10点结束。因为我们只看了 Microsoft 相关的内容，所以直奔","position":{"start":{"line":14,"column":1,"offset":875},"end":{"line":14,"column":63,"offset":937}}},{"type":"link","title":null,"url":"https://github.com/quantumcoalition/qchack-microsoft-challenge","children":[{"type":"text","value":"相关题目","position":{"start":{"line":14,"column":64,"offset":938},"end":{"line":14,"column":68,"offset":942}}}],"position":{"start":{"line":14,"column":63,"offset":937},"end":{"line":14,"column":133,"offset":1007}}},{"type":"text","value":"。","position":{"start":{"line":14,"column":133,"offset":1007},"end":{"line":14,"column":134,"offset":1008}}}],"position":{"start":{"line":14,"column":1,"offset":875},"end":{"line":14,"column":134,"offset":1008}}},{"type":"paragraph","children":[{"type":"text","value":"题目一共分为两部分。","position":{"start":{"line":16,"column":1,"offset":1010},"end":{"line":16,"column":11,"offset":1020}}}],"position":{"start":{"line":16,"column":1,"offset":1010},"end":{"line":16,"column":11,"offset":1020}}},{"type":"paragraph","children":[{"type":"text","value":"第一部分一共四道题，就像是一般的计算机课程的作业一样，参赛者只需要在举办方写好的主程序文件里的指定区域填入代码，然后运行主办方写好的测试文件检查结果，测试通过即可得分。四道题目要求如下：","position":{"start":{"line":18,"column":1,"offset":1022},"end":{"line":18,"column":94,"offset":1115}}}],"position":{"start":{"line":18,"column":1,"offset":1022},"end":{"line":18,"column":94,"offset":1115}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"判断一个3-5位的2进制数能否被4整除。","position":{"start":{"line":20,"column":4,"offset":1120},"end":{"line":20,"column":24,"offset":1140}}}],"position":{"start":{"line":20,"column":4,"offset":1120},"end":{"line":20,"column":24,"offset":1140}}}],"position":{"start":{"line":20,"column":1,"offset":1117},"end":{"line":20,"column":24,"offset":1140}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"判断一个3比特位当中是否至少有两位不同。","position":{"start":{"line":21,"column":4,"offset":1144},"end":{"line":21,"column":24,"offset":1164}}}],"position":{"start":{"line":21,"column":4,"offset":1144},"end":{"line":21,"column":24,"offset":1164}}}],"position":{"start":{"line":21,"column":1,"offset":1141},"end":{"line":21,"column":24,"offset":1164}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"同第2题，但是要求量子比特门最多只能使用 3-比特，而且 3-比特门最多使用一次。","position":{"start":{"line":22,"column":4,"offset":1168},"end":{"line":22,"column":45,"offset":1209}}}],"position":{"start":{"line":22,"column":4,"offset":1168},"end":{"line":22,"column":45,"offset":1209}}}],"position":{"start":{"line":22,"column":1,"offset":1165},"end":{"line":22,"column":45,"offset":1209}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"给定一个有两种颜色的无向图，判断图当中不含有任何单一颜色的三角形。","position":{"start":{"line":23,"column":4,"offset":1213},"end":{"line":23,"column":37,"offset":1246}}}],"position":{"start":{"line":23,"column":4,"offset":1213},"end":{"line":23,"column":37,"offset":1246}}}],"position":{"start":{"line":23,"column":1,"offset":1210},"end":{"line":23,"column":37,"offset":1246}}}],"position":{"start":{"line":20,"column":1,"offset":1117},"end":{"line":23,"column":37,"offset":1246}}},{"type":"paragraph","children":[{"type":"text","value":"第二部分内容比较自由，要求用 Grover's 算法解决一个自己感兴趣的问题，打哪指哪，然后写一篇文章介绍自己的这个项目，并提交相关的代码。根据问题深度(6分)、工具使用(5分)、创新性(4分)、教育价值(5分) 四方面进行评分。","position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":116,"offset":1363}}}],"position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":116,"offset":1363}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"三","position":{"start":{"line":28,"column":4,"offset":1369},"end":{"line":28,"column":5,"offset":1370}}}],"position":{"start":{"line":28,"column":1,"offset":1366},"end":{"line":28,"column":5,"offset":1370}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"I.1.","position":{"start":{"line":30,"column":5,"offset":1376},"end":{"line":30,"column":9,"offset":1380}}}],"position":{"start":{"line":30,"column":1,"offset":1372},"end":{"line":30,"column":9,"offset":1380}}},{"type":"paragraph","children":[{"type":"text","value":"第一道题最简单，但是我们当时约等于0基础，所以做起来也颇费了一些时间。不过由于我听过第一天的课，知道 ","position":{"start":{"line":32,"column":1,"offset":1382},"end":{"line":32,"column":52,"offset":1433}}},{"type":"inlineCode","value":"oracle","position":{"start":{"line":32,"column":52,"offset":1433},"end":{"line":32,"column":60,"offset":1441}}},{"type":"text","value":" 在 Q# 编程语言中是一个很重要的概念，所以在题目给出的参考教程 ","position":{"start":{"line":32,"column":60,"offset":1441},"end":{"line":32,"column":94,"offset":1475}}},{"type":"link","title":null,"url":"https://github.com/Microsoft/QuantumKatas/","children":[{"type":"text","value":"Quantum Kantas","position":{"start":{"line":32,"column":95,"offset":1476},"end":{"line":32,"column":109,"offset":1490}}}],"position":{"start":{"line":32,"column":94,"offset":1475},"end":{"line":32,"column":154,"offset":1535}}},{"type":"text","value":" 里找到了","position":{"start":{"line":32,"column":154,"offset":1535},"end":{"line":32,"column":159,"offset":1540}}},{"type":"link","title":null,"url":"https://github.com/microsoft/QuantumKatas/tree/main/tutorials/Oracles","children":[{"type":"text","value":"oracle 相关的教程","position":{"start":{"line":32,"column":160,"offset":1541},"end":{"line":32,"column":172,"offset":1553}}}],"position":{"start":{"line":32,"column":159,"offset":1540},"end":{"line":32,"column":244,"offset":1625}}},{"type":"text","value":"。里面有个名为 ","position":{"start":{"line":32,"column":244,"offset":1625},"end":{"line":32,"column":252,"offset":1633}}},{"type":"inlineCode","value":"ControlledOnBitString","position":{"start":{"line":32,"column":252,"offset":1633},"end":{"line":32,"column":275,"offset":1656}}},{"type":"text","value":" 的 function，可以根据一串量子比特的取值是否等于一个特定的二值串而对另外一个比特做一个特定的操作。前一天晚上又知道了 ","position":{"start":{"line":32,"column":275,"offset":1656},"end":{"line":32,"column":339,"offset":1720}}},{"type":"inlineCode","value":"Microsoft.Quantum.Convert","position":{"start":{"line":32,"column":339,"offset":1720},"end":{"line":32,"column":366,"offset":1747}}},{"type":"text","value":" 的 namespace 里有各种数据类型转换的函数，搭配 ","position":{"start":{"line":32,"column":366,"offset":1747},"end":{"line":32,"column":396,"offset":1777}}},{"type":"inlineCode","value":"IntAsBoolArray","position":{"start":{"line":32,"column":396,"offset":1777},"end":{"line":32,"column":412,"offset":1793}}},{"type":"text","value":"，就做出了第一题的初版。后来看到了更简单的 ","position":{"start":{"line":32,"column":412,"offset":1793},"end":{"line":32,"column":434,"offset":1815}}},{"type":"inlineCode","value":"ControlledOnInt","position":{"start":{"line":32,"column":434,"offset":1815},"end":{"line":32,"column":451,"offset":1832}}},{"type":"text","value":" 函数，就直接用上了。","position":{"start":{"line":32,"column":451,"offset":1832},"end":{"line":32,"column":462,"offset":1843}}}],"position":{"start":{"line":32,"column":1,"offset":1382},"end":{"line":32,"column":462,"offset":1843}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"I.2.","position":{"start":{"line":34,"column":5,"offset":1849},"end":{"line":34,"column":9,"offset":1853}}}],"position":{"start":{"line":34,"column":1,"offset":1845},"end":{"line":34,"column":9,"offset":1853}}},{"type":"paragraph","children":[{"type":"text","value":"第二题的初版是女朋友做的。题目要求是找出是否至少两位不同，这一判断的否定就是三位比特全部相同，所以同样用 ","position":{"start":{"line":36,"column":1,"offset":1855},"end":{"line":36,"column":54,"offset":1908}}},{"type":"inlineCode","value":"ControlledOnBitString","position":{"start":{"line":36,"column":54,"offset":1908},"end":{"line":36,"column":77,"offset":1931}}},{"type":"text","value":" 函数，然后判断一次全 ","position":{"start":{"line":36,"column":77,"offset":1931},"end":{"line":36,"column":89,"offset":1943}}},{"type":"inlineCode","value":"true","position":{"start":{"line":36,"column":89,"offset":1943},"end":{"line":36,"column":95,"offset":1949}}},{"type":"text","value":" 一次全 ","position":{"start":{"line":36,"column":95,"offset":1949},"end":{"line":36,"column":100,"offset":1954}}},{"type":"inlineCode","value":"false","position":{"start":{"line":36,"column":100,"offset":1954},"end":{"line":36,"column":107,"offset":1961}}},{"type":"text","value":"，再把最终结果取反就可以了。但是在做第三题的时候，因为两个题目长得太像了，中间不小心把一个能通过第二题测试但是通不过第三题测试的答案直接覆盖在了第二题上面，懒的改回去了，于是就成了最后提交的版本。","position":{"start":{"line":36,"column":107,"offset":1961},"end":{"line":36,"column":205,"offset":2059}}}],"position":{"start":{"line":36,"column":1,"offset":1855},"end":{"line":36,"column":205,"offset":2059}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"I.3.","position":{"start":{"line":38,"column":5,"offset":2065},"end":{"line":38,"column":9,"offset":2069}}}],"position":{"start":{"line":38,"column":1,"offset":2061},"end":{"line":38,"column":9,"offset":2069}}},{"type":"paragraph","children":[{"type":"text","value":"第三题和第二题非常不同。第二题的解决思路中，判断全 ","position":{"start":{"line":40,"column":1,"offset":2071},"end":{"line":40,"column":27,"offset":2097}}},{"type":"inlineCode","value":"true","position":{"start":{"line":40,"column":27,"offset":2097},"end":{"line":40,"column":33,"offset":2103}}},{"type":"text","value":" 和全 ","position":{"start":{"line":40,"column":33,"offset":2103},"end":{"line":40,"column":37,"offset":2107}}},{"type":"inlineCode","value":"false","position":{"start":{"line":40,"column":37,"offset":2107},"end":{"line":40,"column":44,"offset":2114}}},{"type":"text","value":"有3个控制位1个输出位，这里用了两次 4-量子比特门，所以第三问需要全新的思路。另外我曾经试过在一个 ","position":{"start":{"line":40,"column":44,"offset":2114},"end":{"line":40,"column":95,"offset":2165}}},{"type":"inlineCode","value":"operation","position":{"start":{"line":40,"column":95,"offset":2165},"end":{"line":40,"column":106,"offset":2176}}},{"type":"text","value":" 里申请一个新的 ","position":{"start":{"line":40,"column":106,"offset":2176},"end":{"line":40,"column":115,"offset":2185}}},{"type":"inlineCode","value":"Qubit()","position":{"start":{"line":40,"column":115,"offset":2185},"end":{"line":40,"column":124,"offset":2194}}},{"type":"text","value":" 结果测试报错，因为误解了报错信息，所以误认为除了程序的主 operation 之外不能创建新的 qubit，于是被卡住了。这时候已经来到了下午，实在想不出来又很困，于是去床上躺了一会。半睡半醒之间想到，题目虽然要求输入的量子比特不变，但是我们仍然可以直接改动输入，只要在函数结束之前把对输入的改动全部复原就可以了。于是用 CNOT 门分别作用在 1-2, 1-3 对输入的量子比特上，两个门分别以第2、3号比特为输出。然后用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上。为了复原第2、3号比特，只需要把 CNOT 在两对比特上分别再用一次就行了。","position":{"start":{"line":40,"column":124,"offset":2194},"end":{"line":40,"column":407,"offset":2477}}}],"position":{"start":{"line":40,"column":1,"offset":2071},"end":{"line":40,"column":407,"offset":2477}}},{"type":"paragraph","children":[{"type":"text","value":"但是这个结果还是无法通过测试（后来成为了第二题的提交版本），报错的提示信息是使用了超过一次 3-量子比特门——这不是开玩笑吗？于是打开了官方提供的测试文件，发现测试代码计算 3-量子比特门的使用次数的时候，会把用户定义的 3-量子比特门的数量，和 ","position":{"start":{"line":42,"column":1,"offset":2479},"end":{"line":42,"column":125,"offset":2603}}},{"type":"inlineCode","value":"CCNOT","position":{"start":{"line":42,"column":125,"offset":2603},"end":{"line":42,"column":132,"offset":2610}}},{"type":"text","value":" 门的数量做加法，于是看文档，我们定义的那个 “用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上” 的操作和 ","position":{"start":{"line":42,"column":132,"offset":2610},"end":{"line":42,"column":195,"offset":2673}}},{"type":"inlineCode","value":"CCNOT","position":{"start":{"line":42,"column":195,"offset":2673},"end":{"line":42,"column":202,"offset":2680}}},{"type":"text","value":" 门是等价的，于是直接换用 ","position":{"start":{"line":42,"column":202,"offset":2680},"end":{"line":42,"column":216,"offset":2694}}},{"type":"inlineCode","value":"CCNOT","position":{"start":{"line":42,"column":216,"offset":2694},"end":{"line":42,"column":223,"offset":2701}}},{"type":"text","value":" 门，问题解决。","position":{"start":{"line":42,"column":223,"offset":2701},"end":{"line":42,"column":231,"offset":2709}}}],"position":{"start":{"line":42,"column":1,"offset":2479},"end":{"line":42,"column":231,"offset":2709}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"I.4.","position":{"start":{"line":44,"column":5,"offset":2715},"end":{"line":44,"column":9,"offset":2719}}}],"position":{"start":{"line":44,"column":1,"offset":2711},"end":{"line":44,"column":9,"offset":2719}}},{"type":"paragraph","children":[{"type":"text","value":"第四题看起来复杂，但是可以分成三个部分：","position":{"start":{"line":46,"column":1,"offset":2721},"end":{"line":46,"column":21,"offset":2741}}}],"position":{"start":{"line":46,"column":1,"offset":2721},"end":{"line":46,"column":21,"offset":2741}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"找出图中所有的三角形，确定每个三角形的三条边，这一步完全可以用经典算法完成；","position":{"start":{"line":48,"column":4,"offset":2746},"end":{"line":48,"column":42,"offset":2784}}}],"position":{"start":{"line":48,"column":4,"offset":2746},"end":{"line":48,"column":42,"offset":2784}}}],"position":{"start":{"line":48,"column":1,"offset":2743},"end":{"line":48,"column":42,"offset":2784}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"创建一个和三角形相同数量的量子比特数列，对每个三角形，把三条边直接带入第二/三题的操作里，结果输入创建的量子比特列中；","position":{"start":{"line":49,"column":4,"offset":2788},"end":{"line":49,"column":63,"offset":2847}}}],"position":{"start":{"line":49,"column":4,"offset":2788},"end":{"line":49,"column":63,"offset":2847}}}],"position":{"start":{"line":49,"column":1,"offset":2785},"end":{"line":49,"column":63,"offset":2847}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"判断量子比特列是否全为 ","position":{"start":{"line":50,"column":4,"offset":2851},"end":{"line":50,"column":16,"offset":2863}}},{"type":"inlineCode","value":"true","position":{"start":{"line":50,"column":16,"offset":2863},"end":{"line":50,"column":22,"offset":2869}}},{"type":"text","value":"，结果输出到整个程序的结果位上。","position":{"start":{"line":50,"column":22,"offset":2869},"end":{"line":50,"column":38,"offset":2885}}}],"position":{"start":{"line":50,"column":4,"offset":2851},"end":{"line":50,"column":38,"offset":2885}}}],"position":{"start":{"line":50,"column":1,"offset":2848},"end":{"line":50,"column":38,"offset":2885}}}],"position":{"start":{"line":48,"column":1,"offset":2743},"end":{"line":50,"column":38,"offset":2885}}},{"type":"paragraph","children":[{"type":"text","value":"第一步由女朋友来想我来写（毕竟只有一台电脑有开发环境），难点在于：","position":{"start":{"line":52,"column":1,"offset":2887},"end":{"line":52,"column":34,"offset":2920}}}],"position":{"start":{"line":52,"column":1,"offset":2887},"end":{"line":52,"column":34,"offset":2920}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Q# 语法改变数列值的语法十分难受\n","position":{"start":{"line":54,"column":4,"offset":2925},"end":{"line":55,"column":1,"offset":2943}}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":5,"offset":2947},"end":{"line":55,"column":9,"offset":2951}}},{"type":"inlineCode","value":"mutable points = [-1,-1,-1,-1,-1,-1];","position":{"start":{"line":55,"column":9,"offset":2951},"end":{"line":55,"column":48,"offset":2990}}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":48,"offset":2990},"end":{"line":56,"column":1,"offset":2991}}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":5,"offset":2995},"end":{"line":56,"column":9,"offset":2999}}},{"type":"inlineCode","value":"set points w/=0..1 <- [0,1];","position":{"start":{"line":56,"column":9,"offset":2999},"end":{"line":56,"column":39,"offset":3029}}},{"type":"text","value":"；","position":{"start":{"line":56,"column":39,"offset":3029},"end":{"line":56,"column":40,"offset":3030}}}],"position":{"start":{"line":54,"column":4,"offset":2925},"end":{"line":56,"column":40,"offset":3030}}}],"position":{"start":{"line":54,"column":1,"offset":2922},"end":{"line":56,"column":40,"offset":3030}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"作为一种强类型语言对元组和数列的区分让我这个 python 选手十分蛋疼\n","position":{"start":{"line":57,"column":4,"offset":3034},"end":{"line":58,"column":1,"offset":3071}}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":5,"offset":3075},"end":{"line":58,"column":9,"offset":3079}}},{"type":"inlineCode","value":"(Int,Int)","position":{"start":{"line":58,"column":9,"offset":3079},"end":{"line":58,"column":20,"offset":3090}}},{"type":"text","value":"/","position":{"start":{"line":58,"column":20,"offset":3090},"end":{"line":58,"column":21,"offset":3091}}},{"type":"inlineCode","value":"Int[]","position":{"start":{"line":58,"column":21,"offset":3091},"end":{"line":58,"column":28,"offset":3098}}},{"type":"text","value":"；","position":{"start":{"line":58,"column":28,"offset":3098},"end":{"line":58,"column":29,"offset":3099}}}],"position":{"start":{"line":57,"column":4,"offset":3034},"end":{"line":58,"column":29,"offset":3099}}}],"position":{"start":{"line":57,"column":1,"offset":3031},"end":{"line":58,"column":29,"offset":3099}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"求数列中不重复的值居然不排序不能给出正确结果。\n","position":{"start":{"line":59,"column":4,"offset":3103},"end":{"line":60,"column":1,"offset":3127}}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":5,"offset":3131},"end":{"line":60,"column":9,"offset":3135}}},{"type":"inlineCode","value":"let uniquePoints = Arrays.Unique(EqualI,Arrays.Sorted(LessThanI,points));","position":{"start":{"line":60,"column":9,"offset":3135},"end":{"line":60,"column":84,"offset":3210}}}],"position":{"start":{"line":59,"column":4,"offset":3103},"end":{"line":60,"column":84,"offset":3210}}}],"position":{"start":{"line":59,"column":1,"offset":3100},"end":{"line":60,"column":84,"offset":3210}}}],"position":{"start":{"line":54,"column":1,"offset":2922},"end":{"line":60,"column":84,"offset":3210}}},{"type":"paragraph","children":[{"type":"text","value":"这也是唯一一段用上了 ","position":{"start":{"line":62,"column":1,"offset":3212},"end":{"line":62,"column":12,"offset":3223}}},{"type":"inlineCode","value":"Message()","position":{"start":{"line":62,"column":12,"offset":3223},"end":{"line":62,"column":23,"offset":3234}}},{"type":"text","value":" 函数来 debug 的部分。","position":{"start":{"line":62,"column":23,"offset":3234},"end":{"line":62,"column":38,"offset":3249}}}],"position":{"start":{"line":62,"column":1,"offset":3212},"end":{"line":62,"column":38,"offset":3249}}},{"type":"paragraph","children":[{"type":"text","value":"第三步就重新回到了第三题暂时敷衍掉的问题：对于在操作中创建的 ","position":{"start":{"line":64,"column":1,"offset":3251},"end":{"line":64,"column":32,"offset":3282}}},{"type":"inlineCode","value":"Qubit()","position":{"start":{"line":64,"column":32,"offset":3282},"end":{"line":64,"column":41,"offset":3291}}},{"type":"text","value":"/","position":{"start":{"line":64,"column":41,"offset":3291},"end":{"line":64,"column":42,"offset":3292}}},{"type":"inlineCode","value":"Qubit[]","position":{"start":{"line":64,"column":42,"offset":3292},"end":{"line":64,"column":51,"offset":3301}}},{"type":"text","value":"，","position":{"start":{"line":64,"column":51,"offset":3301},"end":{"line":64,"column":52,"offset":3302}}},{"type":"inlineCode","value":"Reset()","position":{"start":{"line":64,"column":52,"offset":3302},"end":{"line":64,"column":61,"offset":3311}}},{"type":"text","value":"/","position":{"start":{"line":64,"column":61,"offset":3311},"end":{"line":64,"column":62,"offset":3312}}},{"type":"inlineCode","value":"ResetAll()","position":{"start":{"line":64,"column":62,"offset":3312},"end":{"line":64,"column":74,"offset":3324}}},{"type":"text","value":" 函数相当于测量，会破坏操作的 adjoint 性质，不测量则（当时的我）没有办法将这个量子比特列复原。","position":{"start":{"line":64,"column":74,"offset":3324},"end":{"line":64,"column":126,"offset":3376}}}],"position":{"start":{"line":64,"column":1,"offset":3251},"end":{"line":64,"column":126,"offset":3376}}},{"type":"paragraph","children":[{"type":"text","value":"此时已经午夜，我来解决这个问题，女朋友去看第二部分，后来她看完 Grover‘s 算法的教程去睡了，我还在想这个问题。直接把报错信息复制到 Google，找到了一个","position":{"start":{"line":66,"column":1,"offset":3378},"end":{"line":66,"column":83,"offset":3460}}},{"type":"link","title":null,"url":"","children":[{"type":"text","value":"论坛里的问答","position":{"start":{"line":66,"column":84,"offset":3461},"end":{"line":66,"column":90,"offset":3467}}}],"position":{"start":{"line":66,"column":83,"offset":3460},"end":{"line":66,"column":93,"offset":3470}}},{"type":"text","value":"，好像是去年微软在其他地方举办的类似活动的。里面只是提到要“uncompute the qubits”，给出的例子用的是旧版本 Q# 的语法，","position":{"start":{"line":66,"column":93,"offset":3470},"end":{"line":66,"column":164,"offset":3541}}},{"type":"delete","children":[{"type":"text","value":"没法直接抄","position":{"start":{"line":66,"column":166,"offset":3543},"end":{"line":66,"column":171,"offset":3548}}}],"position":{"start":{"line":66,"column":164,"offset":3541},"end":{"line":66,"column":173,"offset":3550}}},{"type":"text","value":" 。最终不抱希望地把之前对那个 ","position":{"start":{"line":66,"column":173,"offset":3550},"end":{"line":66,"column":189,"offset":3566}}},{"type":"inlineCode","value":"Qubit[]","position":{"start":{"line":66,"column":189,"offset":3566},"end":{"line":66,"column":198,"offset":3575}}},{"type":"text","value":" 做过的循环顺序倒过来重做了一遍，诶，您猜怎么着，还是没通过！绝望了！正序重做一边，诶，通过了！为什么为什么为什么？到现在也没弄清楚。","position":{"start":{"line":66,"column":198,"offset":3575},"end":{"line":66,"column":265,"offset":3642}}}],"position":{"start":{"line":66,"column":1,"offset":3378},"end":{"line":66,"column":265,"offset":3642}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"II.","position":{"start":{"line":68,"column":5,"offset":3648},"end":{"line":68,"column":8,"offset":3651}}}],"position":{"start":{"line":68,"column":1,"offset":3644},"end":{"line":68,"column":8,"offset":3651}}},{"type":"paragraph","children":[{"type":"text","value":"然后把女朋友叫醒，让她来讲一讲 Grover's 算法。听完之后我的理解是，对于一个 ","position":{"start":{"line":70,"column":1,"offset":3653},"end":{"line":70,"column":44,"offset":3696}}},{"type":"inlineMath","value":"f:(0,1)^N \\rarr (0,1)","data":{"hName":"code","hProperties":{"className":["language-math","math-inline"]},"hChildren":[{"type":"text","value":"f:(0,1)^N \\rarr (0,1)"}]},"position":{"start":{"line":70,"column":44,"offset":3696},"end":{"line":70,"column":69,"offset":3721}}},{"type":"text","value":" 的函数，这个算法可以大概率地找到一个解 ","position":{"start":{"line":70,"column":69,"offset":3721},"end":{"line":70,"column":90,"offset":3742}}},{"type":"inlineMath","value":"S\\in(0,1)^N","data":{"hName":"code","hProperties":{"className":["language-math","math-inline"]},"hChildren":[{"type":"text","value":"S\\in(0,1)^N"}]},"position":{"start":{"line":70,"column":90,"offset":3742},"end":{"line":70,"column":105,"offset":3757}}},{"type":"text","value":" 满足 ","position":{"start":{"line":70,"column":105,"offset":3757},"end":{"line":70,"column":109,"offset":3761}}},{"type":"inlineMath","value":"f(S)=1","data":{"hName":"code","hProperties":{"className":["language-math","math-inline"]},"hChildren":[{"type":"text","value":"f(S)=1"}]},"position":{"start":{"line":70,"column":109,"offset":3761},"end":{"line":70,"column":119,"offset":3771}}},{"type":"text","value":".","position":{"start":{"line":70,"column":119,"offset":3771},"end":{"line":70,"column":120,"offset":3772}}}],"position":{"start":{"line":70,"column":1,"offset":3653},"end":{"line":70,"column":121,"offset":3773}}},{"type":"paragraph","children":[{"type":"text","value":"至于这个函数 ","position":{"start":{"line":72,"column":1,"offset":3775},"end":{"line":72,"column":8,"offset":3782}}},{"type":"inlineMath","value":"f","data":{"hName":"code","hProperties":{"className":["language-math","math-inline"]},"hChildren":[{"type":"text","value":"f"}]},"position":{"start":{"line":72,"column":8,"offset":3782},"end":{"line":72,"column":13,"offset":3787}}},{"type":"text","value":"，之前每一道题都是这样一个函数，当时已经夜里两三点了，实在是没时间再想一个新函数了，于是我们直接就拿复杂度最高的第4题来换个皮。换个什么皮呢？为了这个活动翘掉了这周的","position":{"start":{"line":72,"column":13,"offset":3787},"end":{"line":72,"column":96,"offset":3870}}},{"type":"link","title":null,"url":"barrier-forward-keyboard-mouse-to-another-computer","children":[{"type":"text","value":"《文明6》联机游戏","position":{"start":{"line":72,"column":97,"offset":3871},"end":{"line":72,"column":106,"offset":3880}}}],"position":{"start":{"line":72,"column":96,"offset":3870},"end":{"line":72,"column":159,"offset":3933}}},{"type":"text","value":"，然后之前看 YouTuber ","position":{"start":{"line":72,"column":159,"offset":3933},"end":{"line":72,"column":175,"offset":3949}}},{"type":"link","title":null,"url":"https://www.youtube.com/user/PotatoMcWhiskey","children":[{"type":"text","value":"\"PotatoMcWhiskey\"","position":{"start":{"line":72,"column":176,"offset":3950},"end":{"line":72,"column":193,"offset":3967}}}],"position":{"start":{"line":72,"column":175,"offset":3949},"end":{"line":72,"column":240,"offset":4014}}},{"type":"text","value":"介绍过","position":{"start":{"line":72,"column":240,"offset":4014},"end":{"line":72,"column":243,"offset":4017}}},{"type":"link","title":null,"url":"https://steamcommunity.com/sharedfiles/filedetails/?id=1753346735&searchtext=diplomacy","children":[{"type":"text","value":"一个 Mod","position":{"start":{"line":72,"column":244,"offset":4018},"end":{"line":72,"column":250,"offset":4024}}}],"position":{"start":{"line":72,"column":243,"offset":4017},"end":{"line":72,"column":339,"offset":4113}}},{"type":"text","value":"，里面可以将文明之间的外交关系可视化为无向图，所以，诶嘿嘿嘿……","position":{"start":{"line":72,"column":339,"offset":4113},"end":{"line":72,"column":371,"offset":4145}}}],"position":{"start":{"line":72,"column":1,"offset":3775},"end":{"line":72,"column":371,"offset":4145}}},{"type":"paragraph","children":[{"type":"text","value":"女朋友写完文稿就睡了，我把文稿改了改，然后和官方对 Grover's 算法的实现缝合了一下。提交的时候，距离截止时间大约还有一个小时。","position":{"start":{"line":74,"column":1,"offset":4147},"end":{"line":74,"column":68,"offset":4214}}}],"position":{"start":{"line":74,"column":1,"offset":4147},"end":{"line":74,"column":68,"offset":4214}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"四","position":{"start":{"line":77,"column":4,"offset":4220},"end":{"line":77,"column":5,"offset":4221}}}],"position":{"start":{"line":77,"column":1,"offset":4217},"end":{"line":77,"column":5,"offset":4221}}},{"type":"paragraph","children":[{"type":"text","value":"之后的周五的时候收到了消息，我们得奖了。优胜者一共6支队伍。从活动结束之后公布的结果看，要想成为优胜，第一部分的4道题必须全部正确，然后第二部分得分在 8-20 分之间。","position":{"start":{"line":79,"column":1,"offset":4223},"end":{"line":79,"column":86,"offset":4308}}}],"position":{"start":{"line":79,"column":1,"offset":4223},"end":{"line":79,"column":86,"offset":4308}}},{"type":"paragraph","children":[{"type":"text","value":"这个成绩是个什么水平？截止到写这篇文章的此刻，官方题目的 Github 仓库有 80 份 fork，有少数几份 fork 是针对已有的 fork，有可能来自同一队伍，再考虑到可能有些队伍的不同成员分别 fork 了主项目，所以估测 60 支队伍应该是有的，官方给出 6 组优胜者这么一个不零不整的数字，个人猜测是取了前 10%？据主办方在 discord 提供的消息，有一支队伍的第二题成绩高于8分，但是前面没有全对，所以没有得奖；其余队伍的第二题都不超过6分；并不清楚有多少队伍第一题全对，主办方也不打算公布各队的详细成绩。","position":{"start":{"line":81,"column":1,"offset":4310},"end":{"line":81,"column":264,"offset":4573}}}],"position":{"start":{"line":81,"column":1,"offset":4310},"end":{"line":81,"column":264,"offset":4573}}},{"type":"paragraph","children":[{"type":"text","value":"这大约说明活动的参与者，其成绩基本上符合二八原理——少数人得到的分数，占据了所有参赛者全部得分的大多数。","position":{"start":{"line":83,"column":1,"offset":4575},"end":{"line":83,"column":53,"offset":4627}}}],"position":{"start":{"line":83,"column":1,"offset":4575},"end":{"line":83,"column":53,"offset":4627}}},{"type":"paragraph","children":[{"type":"text","value":"参加过这个活动之后，我们一下子就从量子计算小白摇身一变，成了优秀人才了？实际上，直到现在，我还是搞不太清楚 oracle 到底是个什么东西，女朋友对量子计算的理解估计比我还差（逃）。美国哲学教授约翰·希尔勒提出过一个叫做","position":{"start":{"line":85,"column":1,"offset":4629},"end":{"line":85,"column":111,"offset":4739}}},{"type":"link","title":null,"url":"https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%88%BF%E9%97%B4","children":[{"type":"text","value":"“中文房间”","position":{"start":{"line":85,"column":112,"offset":4740},"end":{"line":85,"column":118,"offset":4746}}}],"position":{"start":{"line":85,"column":111,"offset":4739},"end":{"line":85,"column":187,"offset":4815}}},{"type":"text","value":"的思想实验，说一个只会说英语的人被关在一间满是汉字字块的房间里，不断从房间外收到写着中文问题的纸条。房间里有一本英文写成的手册，指示如何对输入的汉字进行回复。凭借这个手册，房中人可以在完全不会中文的情况下，与外界进行交流。希尔勒类比外人、房中人、手册，与程序员、计算机、计算机程序，认为房中人不会中文，进而论证计算机不可能通过程序来获得理解力。","position":{"start":{"line":85,"column":187,"offset":4815},"end":{"line":85,"column":359,"offset":4987}}}],"position":{"start":{"line":85,"column":1,"offset":4629},"end":{"line":85,"column":359,"offset":4987}}},{"type":"paragraph","children":[{"type":"text","value":"希尔勒教授想论证啥是他的事，我倒是对这个类比的本体很感兴趣——如果一个人已经能够熟练运用那个英文写成的汉字使用手册了，我们还能不能，能在多大程度上说他不懂中文呢？就说一般的程序员，工作时间能保证不看 stack overflow 的有几个，所以他们都不会编程？反对中文房间思想实验结论的人，很多都支持用图灵测试超过某一阈值来作为有智能的标志，但是我觉得，智能本身就不是一个非有即无的性质，而是一个连续分布，没有上限的谱。","position":{"start":{"line":87,"column":1,"offset":4989},"end":{"line":87,"column":211,"offset":5199}}}],"position":{"start":{"line":87,"column":1,"offset":4989},"end":{"line":87,"column":211,"offset":5199}}},{"type":"paragraph","children":[{"type":"text","value":"另一方面，得分名列前茅，和能力名列前茅，又是两回事。本科的时候做建模美赛，我们学校数理金融的一个学神前一年成绩“略有不佳”，没拿到 M 奖，于是我们那年找到了我和风神俩学物理的，准备再次冲击荣誉。巧了这一年的题目正好有一道浴缸放热水的问题，这不就是物理中的扩散方程嘛，那得奖还不是手拿把掐的？结果呢，H 奖，丢人丢到姥姥家去了。合着我们两个成绩还都不错的物理专业学生，在自己的专业里，打不过那么多同龄的非物理专业本科生？","position":{"start":{"line":89,"column":1,"offset":5201},"end":{"line":89,"column":211,"offset":5411}}}],"position":{"start":{"line":89,"column":1,"offset":5201},"end":{"line":89,"column":211,"offset":5411}}},{"type":"paragraph","children":[{"type":"text","value":"两相对照之下，我想起了很久之前看过的一篇博客文章，文章以一个问题开头——“熟练”的反义词是什么？当然说“生疏”这文章就写不下去了，作者给出的答案是——“应变”。熟练意味着，你对于问题、选项、最优解已经有了充分且完备的了解，只需要重复自己的经验就可以了，但是在自己不了解的战场上，经验至少不能直接派上用场，这时候，脱离具体环境的应变能力就成了生存和取胜的关键，我们当时的专业水平高不成低不就，反而成了掣肘我们的桎梏。","position":{"start":{"line":91,"column":1,"offset":5413},"end":{"line":91,"column":208,"offset":5620}}}],"position":{"start":{"line":91,"column":1,"offset":5413},"end":{"line":91,"column":208,"offset":5620}}},{"type":"paragraph","children":[{"type":"text","value":"读到这篇文章的时候，我被这种剑走偏锋的观点击中了，从那以后，一直都在注意培养自己的应变能力——如果明天我所研究的这个领域消失了，我还有没有谋生的能力？如果自己正在解决的问题被上帝或者 Matrix 作弊修改成一个新问题，我能不能看到连作弊都改动不了的题眼，然后一击命中？在凌晨两三点的时候，我也没有放弃解决第一题第 4 问的 Qubit 复位问题，虽然当时我并不知道评分标准，但是内心非常确定，这个问题必须解决。","position":{"start":{"line":93,"column":1,"offset":5622},"end":{"line":93,"column":207,"offset":5828}}}],"position":{"start":{"line":93,"column":1,"offset":5622},"end":{"line":93,"column":207,"offset":5828}}},{"type":"paragraph","children":[{"type":"text","value":"以上两次活动的成绩差别，也可以从得奖难度来看。建模美赛的 M 奖，得奖率应该远小于 10%，即便考虑到二八原理中绝大多数参赛者都只是凑数，而且样本越大凑数者越多，这个差距也还是无法忽略。我们能够得奖，和量子计算领域才刚刚萌芽，连“方兴未艾”都算不上，因此竞争并不激烈也有很大关系，应变能力是切入这些蓝海领域的必要条件，是躲避内卷的利器。我们现在对“内卷”人人喊打，但是培养应变能力是需要牺牲相当多本可以精进专业的时间和精力的。当社会中的大多数人向往着逃离内卷的时候，真的不需要有人咬定一个领域不断深耕？我现在的选择真的正确吗？我不知道。我是打算留在当前的领域继续熟练，还是换个领域应变，抑或是虚掷 PhD 光阴换一张工作签证？我也不知道。","position":{"start":{"line":95,"column":1,"offset":5830},"end":{"line":95,"column":320,"offset":6149}}}],"position":{"start":{"line":95,"column":1,"offset":5830},"end":{"line":95,"column":320,"offset":6149}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"五","position":{"start":{"line":97,"column":4,"offset":6154},"end":{"line":97,"column":5,"offset":6155}}}],"position":{"start":{"line":97,"column":1,"offset":6151},"end":{"line":97,"column":5,"offset":6155}}},{"type":"paragraph","children":[{"type":"text","value":"哦对了，我有女朋友了，而且在 hackathon 的过程中把女朋友惹哭了……问题是我现在已经不记得具体是怎么把人家惹哭的了，连道歉都显得很不诚恳……我确实是一个不擅长合作的人，或者说跟别人说话的我，和想问题的我并不是同一个人，之前本科 CUPT 和建模的时候也一样，需要和人打交道的时候就几乎干不了活儿，严重的时候自己就退化成了鼓励师……总之一切错误在我，希望她不要记仇…… ","position":{"start":{"line":99,"column":1,"offset":6157},"end":{"line":99,"column":189,"offset":6345}}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":189,"offset":6345},"end":{"line":99,"column":193,"offset":6349}}},{"type":"text","value":"（。・＿・。）ﾉ","position":{"start":{"line":99,"column":193,"offset":6349},"end":{"line":99,"column":201,"offset":6357}}}],"position":{"start":{"line":99,"column":1,"offset":6157},"end":{"line":99,"column":201,"offset":6357}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":100,"column":1,"offset":6358}}},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"一"},"children":[{"type":"element","tagName":"a","properties":{"href":"#一"},"children":[{"type":"text","value":"一","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":5,"offset":6}}}]}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":5,"offset":6}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"4月初的时候，系秘书转发了一封邮件，耶鲁和斯坦福有两个关于量子计算的学生社团，打算举办为期一周的","position":{"start":{"line":5,"column":1,"offset":8},"end":{"line":5,"column":49,"offset":56}}},{"type":"element","tagName":"a","properties":{"href":"https://www.quantumcoalition.io/"},"children":[{"type":"text","value":"线上训练营","position":{"start":{"line":5,"column":50,"offset":57},"end":{"line":5,"column":55,"offset":62}}}],"position":{"start":{"line":5,"column":49,"offset":56},"end":{"line":5,"column":90,"offset":97}}},{"type":"text","value":"，然后在周末举办一个24小时的编程马拉松 (","position":{"start":{"line":5,"column":90,"offset":97},"end":{"line":5,"column":112,"offset":119}}},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Hackathon"},"children":[{"type":"text","value":"hackathon","position":{"start":{"line":5,"column":113,"offset":120},"end":{"line":5,"column":122,"offset":129}}}],"position":{"start":{"line":5,"column":112,"offset":119},"end":{"line":5,"column":164,"offset":171}}},{"type":"text","value":") 的活动。只要年满18岁就可以参加，并不限定本科生。","position":{"start":{"line":5,"column":164,"offset":171},"end":{"line":5,"column":191,"offset":198}}}],"position":{"start":{"line":5,"column":1,"offset":8},"end":{"line":5,"column":191,"offset":198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"整个活动由几家从事量子计算的科技公司赞助，前面的线上训练营基本就是各家轮流上来介绍一下自己家的量子计算平台的使用方法，最后的编程马拉松也由他们每家出一套题，所以这个活动也有在学生和公司之间搭桥，给参与者争取实习机会的目的在里面。参与者可以自由组队，但是在项目提交的的时候每个人只能属于一支队伍。虽然参与者可以参加任意数量的题目，但是每一名参与者最终只能成为一家公司的优胜者。如果预感到自己在某一个项目的赢面比较大，可以在提交之前通知自己参加的其他队伍把自己除名。24小时的时间限制还是比较紧迫的，所以基本上认准一家答题就可以了。","position":{"start":{"line":7,"column":1,"offset":200},"end":{"line":7,"column":265,"offset":464}}}],"position":{"start":{"line":7,"column":1,"offset":200},"end":{"line":7,"column":265,"offset":464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"女朋友也收到了一样的邮件，所以理所当然地一起组队。我之前在本科阶段上过一门一学期的量子信息和量子通信课程，内容约等于在量子力学之后再上一个学期的习题课，以及在不讲群论的情况下应用 SU(2) 群，并没有接触过这个活动中会用到的编程语言。女朋友没有上过这门课，基本就是物理专业普通研究生的量子力学水平。周中的线上训练营，我只参加了第一天的，是 Microsoft 的 Quantum Development Kit (QDK) 和 Q# 编程语言相关的，顺便介绍了一下量子计算中很有名的 Deutsch 算法。剩下的讲座我基本上都没有参加，一方面是知道前面的规则之后就懒下来了，另一方面是实验室的工作仍然需要继续，再有就是线上活动实在是太容易摸鱼了没有效率。周五的晚上，女朋友看了一晚上我的量子信息笔记，我看了看 Q# 的语法规则，在台式机上安装了开发环境。以上就是我们参加编程马拉松之前的基础和准备。","position":{"start":{"line":9,"column":1,"offset":466},"end":{"line":9,"column":401,"offset":866}}}],"position":{"start":{"line":9,"column":1,"offset":466},"end":{"line":9,"column":401,"offset":866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"二"},"children":[{"type":"element","tagName":"a","properties":{"href":"#二"},"children":[{"type":"text","value":"二","position":{"start":{"line":12,"column":4,"offset":872},"end":{"line":12,"column":5,"offset":873}}}]}],"position":{"start":{"line":12,"column":1,"offset":869},"end":{"line":12,"column":5,"offset":873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hackathon 美东时间周六上午10点开始，周日上午10点结束。因为我们只看了 Microsoft 相关的内容，所以直奔","position":{"start":{"line":14,"column":1,"offset":875},"end":{"line":14,"column":63,"offset":937}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/quantumcoalition/qchack-microsoft-challenge"},"children":[{"type":"text","value":"相关题目","position":{"start":{"line":14,"column":64,"offset":938},"end":{"line":14,"column":68,"offset":942}}}],"position":{"start":{"line":14,"column":63,"offset":937},"end":{"line":14,"column":133,"offset":1007}}},{"type":"text","value":"。","position":{"start":{"line":14,"column":133,"offset":1007},"end":{"line":14,"column":134,"offset":1008}}}],"position":{"start":{"line":14,"column":1,"offset":875},"end":{"line":14,"column":134,"offset":1008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"题目一共分为两部分。","position":{"start":{"line":16,"column":1,"offset":1010},"end":{"line":16,"column":11,"offset":1020}}}],"position":{"start":{"line":16,"column":1,"offset":1010},"end":{"line":16,"column":11,"offset":1020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一部分一共四道题，就像是一般的计算机课程的作业一样，参赛者只需要在举办方写好的主程序文件里的指定区域填入代码，然后运行主办方写好的测试文件检查结果，测试通过即可得分。四道题目要求如下：","position":{"start":{"line":18,"column":1,"offset":1022},"end":{"line":18,"column":94,"offset":1115}}}],"position":{"start":{"line":18,"column":1,"offset":1022},"end":{"line":18,"column":94,"offset":1115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"判断一个3-5位的2进制数能否被4整除。","position":{"start":{"line":20,"column":4,"offset":1120},"end":{"line":20,"column":24,"offset":1140}}}],"position":{"start":{"line":20,"column":1,"offset":1117},"end":{"line":20,"column":24,"offset":1140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"判断一个3比特位当中是否至少有两位不同。","position":{"start":{"line":21,"column":4,"offset":1144},"end":{"line":21,"column":24,"offset":1164}}}],"position":{"start":{"line":21,"column":1,"offset":1141},"end":{"line":21,"column":24,"offset":1164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"同第2题，但是要求量子比特门最多只能使用 3-比特，而且 3-比特门最多使用一次。","position":{"start":{"line":22,"column":4,"offset":1168},"end":{"line":22,"column":45,"offset":1209}}}],"position":{"start":{"line":22,"column":1,"offset":1165},"end":{"line":22,"column":45,"offset":1209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"给定一个有两种颜色的无向图，判断图当中不含有任何单一颜色的三角形。","position":{"start":{"line":23,"column":4,"offset":1213},"end":{"line":23,"column":37,"offset":1246}}}],"position":{"start":{"line":23,"column":1,"offset":1210},"end":{"line":23,"column":37,"offset":1246}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1117},"end":{"line":23,"column":37,"offset":1246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第二部分内容比较自由，要求用 Grover's 算法解决一个自己感兴趣的问题，打哪指哪，然后写一篇文章介绍自己的这个项目，并提交相关的代码。根据问题深度(6分)、工具使用(5分)、创新性(4分)、教育价值(5分) 四方面进行评分。","position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":116,"offset":1363}}}],"position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":116,"offset":1363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"三"},"children":[{"type":"element","tagName":"a","properties":{"href":"#三"},"children":[{"type":"text","value":"三","position":{"start":{"line":28,"column":4,"offset":1369},"end":{"line":28,"column":5,"offset":1370}}}]}],"position":{"start":{"line":28,"column":1,"offset":1366},"end":{"line":28,"column":5,"offset":1370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"i1"},"children":[{"type":"element","tagName":"a","properties":{"href":"#i1"},"children":[{"type":"text","value":"I.1.","position":{"start":{"line":30,"column":5,"offset":1376},"end":{"line":30,"column":9,"offset":1380}}}]}],"position":{"start":{"line":30,"column":1,"offset":1372},"end":{"line":30,"column":9,"offset":1380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一道题最简单，但是我们当时约等于0基础，所以做起来也颇费了一些时间。不过由于我听过第一天的课，知道 ","position":{"start":{"line":32,"column":1,"offset":1382},"end":{"line":32,"column":52,"offset":1433}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"oracle","position":{"start":{"line":32,"column":52,"offset":1433},"end":{"line":32,"column":60,"offset":1441}}}],"position":{"start":{"line":32,"column":52,"offset":1433},"end":{"line":32,"column":60,"offset":1441}}},{"type":"text","value":" 在 Q# 编程语言中是一个很重要的概念，所以在题目给出的参考教程 ","position":{"start":{"line":32,"column":60,"offset":1441},"end":{"line":32,"column":94,"offset":1475}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/Microsoft/QuantumKatas/"},"children":[{"type":"text","value":"Quantum Kantas","position":{"start":{"line":32,"column":95,"offset":1476},"end":{"line":32,"column":109,"offset":1490}}}],"position":{"start":{"line":32,"column":94,"offset":1475},"end":{"line":32,"column":154,"offset":1535}}},{"type":"text","value":" 里找到了","position":{"start":{"line":32,"column":154,"offset":1535},"end":{"line":32,"column":159,"offset":1540}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/microsoft/QuantumKatas/tree/main/tutorials/Oracles"},"children":[{"type":"text","value":"oracle 相关的教程","position":{"start":{"line":32,"column":160,"offset":1541},"end":{"line":32,"column":172,"offset":1553}}}],"position":{"start":{"line":32,"column":159,"offset":1540},"end":{"line":32,"column":244,"offset":1625}}},{"type":"text","value":"。里面有个名为 ","position":{"start":{"line":32,"column":244,"offset":1625},"end":{"line":32,"column":252,"offset":1633}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ControlledOnBitString","position":{"start":{"line":32,"column":252,"offset":1633},"end":{"line":32,"column":275,"offset":1656}}}],"position":{"start":{"line":32,"column":252,"offset":1633},"end":{"line":32,"column":275,"offset":1656}}},{"type":"text","value":" 的 function，可以根据一串量子比特的取值是否等于一个特定的二值串而对另外一个比特做一个特定的操作。前一天晚上又知道了 ","position":{"start":{"line":32,"column":275,"offset":1656},"end":{"line":32,"column":339,"offset":1720}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Microsoft.Quantum.Convert","position":{"start":{"line":32,"column":339,"offset":1720},"end":{"line":32,"column":366,"offset":1747}}}],"position":{"start":{"line":32,"column":339,"offset":1720},"end":{"line":32,"column":366,"offset":1747}}},{"type":"text","value":" 的 namespace 里有各种数据类型转换的函数，搭配 ","position":{"start":{"line":32,"column":366,"offset":1747},"end":{"line":32,"column":396,"offset":1777}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"IntAsBoolArray","position":{"start":{"line":32,"column":396,"offset":1777},"end":{"line":32,"column":412,"offset":1793}}}],"position":{"start":{"line":32,"column":396,"offset":1777},"end":{"line":32,"column":412,"offset":1793}}},{"type":"text","value":"，就做出了第一题的初版。后来看到了更简单的 ","position":{"start":{"line":32,"column":412,"offset":1793},"end":{"line":32,"column":434,"offset":1815}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ControlledOnInt","position":{"start":{"line":32,"column":434,"offset":1815},"end":{"line":32,"column":451,"offset":1832}}}],"position":{"start":{"line":32,"column":434,"offset":1815},"end":{"line":32,"column":451,"offset":1832}}},{"type":"text","value":" 函数，就直接用上了。","position":{"start":{"line":32,"column":451,"offset":1832},"end":{"line":32,"column":462,"offset":1843}}}],"position":{"start":{"line":32,"column":1,"offset":1382},"end":{"line":32,"column":462,"offset":1843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"i2"},"children":[{"type":"element","tagName":"a","properties":{"href":"#i2"},"children":[{"type":"text","value":"I.2.","position":{"start":{"line":34,"column":5,"offset":1849},"end":{"line":34,"column":9,"offset":1853}}}]}],"position":{"start":{"line":34,"column":1,"offset":1845},"end":{"line":34,"column":9,"offset":1853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第二题的初版是女朋友做的。题目要求是找出是否至少两位不同，这一判断的否定就是三位比特全部相同，所以同样用 ","position":{"start":{"line":36,"column":1,"offset":1855},"end":{"line":36,"column":54,"offset":1908}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ControlledOnBitString","position":{"start":{"line":36,"column":54,"offset":1908},"end":{"line":36,"column":77,"offset":1931}}}],"position":{"start":{"line":36,"column":54,"offset":1908},"end":{"line":36,"column":77,"offset":1931}}},{"type":"text","value":" 函数，然后判断一次全 ","position":{"start":{"line":36,"column":77,"offset":1931},"end":{"line":36,"column":89,"offset":1943}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":36,"column":89,"offset":1943},"end":{"line":36,"column":95,"offset":1949}}}],"position":{"start":{"line":36,"column":89,"offset":1943},"end":{"line":36,"column":95,"offset":1949}}},{"type":"text","value":" 一次全 ","position":{"start":{"line":36,"column":95,"offset":1949},"end":{"line":36,"column":100,"offset":1954}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":36,"column":100,"offset":1954},"end":{"line":36,"column":107,"offset":1961}}}],"position":{"start":{"line":36,"column":100,"offset":1954},"end":{"line":36,"column":107,"offset":1961}}},{"type":"text","value":"，再把最终结果取反就可以了。但是在做第三题的时候，因为两个题目长得太像了，中间不小心把一个能通过第二题测试但是通不过第三题测试的答案直接覆盖在了第二题上面，懒的改回去了，于是就成了最后提交的版本。","position":{"start":{"line":36,"column":107,"offset":1961},"end":{"line":36,"column":205,"offset":2059}}}],"position":{"start":{"line":36,"column":1,"offset":1855},"end":{"line":36,"column":205,"offset":2059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"i3"},"children":[{"type":"element","tagName":"a","properties":{"href":"#i3"},"children":[{"type":"text","value":"I.3.","position":{"start":{"line":38,"column":5,"offset":2065},"end":{"line":38,"column":9,"offset":2069}}}]}],"position":{"start":{"line":38,"column":1,"offset":2061},"end":{"line":38,"column":9,"offset":2069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第三题和第二题非常不同。第二题的解决思路中，判断全 ","position":{"start":{"line":40,"column":1,"offset":2071},"end":{"line":40,"column":27,"offset":2097}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":40,"column":27,"offset":2097},"end":{"line":40,"column":33,"offset":2103}}}],"position":{"start":{"line":40,"column":27,"offset":2097},"end":{"line":40,"column":33,"offset":2103}}},{"type":"text","value":" 和全 ","position":{"start":{"line":40,"column":33,"offset":2103},"end":{"line":40,"column":37,"offset":2107}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false","position":{"start":{"line":40,"column":37,"offset":2107},"end":{"line":40,"column":44,"offset":2114}}}],"position":{"start":{"line":40,"column":37,"offset":2107},"end":{"line":40,"column":44,"offset":2114}}},{"type":"text","value":"有3个控制位1个输出位，这里用了两次 4-量子比特门，所以第三问需要全新的思路。另外我曾经试过在一个 ","position":{"start":{"line":40,"column":44,"offset":2114},"end":{"line":40,"column":95,"offset":2165}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"operation","position":{"start":{"line":40,"column":95,"offset":2165},"end":{"line":40,"column":106,"offset":2176}}}],"position":{"start":{"line":40,"column":95,"offset":2165},"end":{"line":40,"column":106,"offset":2176}}},{"type":"text","value":" 里申请一个新的 ","position":{"start":{"line":40,"column":106,"offset":2176},"end":{"line":40,"column":115,"offset":2185}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Qubit()","position":{"start":{"line":40,"column":115,"offset":2185},"end":{"line":40,"column":124,"offset":2194}}}],"position":{"start":{"line":40,"column":115,"offset":2185},"end":{"line":40,"column":124,"offset":2194}}},{"type":"text","value":" 结果测试报错，因为误解了报错信息，所以误认为除了程序的主 operation 之外不能创建新的 qubit，于是被卡住了。这时候已经来到了下午，实在想不出来又很困，于是去床上躺了一会。半睡半醒之间想到，题目虽然要求输入的量子比特不变，但是我们仍然可以直接改动输入，只要在函数结束之前把对输入的改动全部复原就可以了。于是用 CNOT 门分别作用在 1-2, 1-3 对输入的量子比特上，两个门分别以第2、3号比特为输出。然后用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上。为了复原第2、3号比特，只需要把 CNOT 在两对比特上分别再用一次就行了。","position":{"start":{"line":40,"column":124,"offset":2194},"end":{"line":40,"column":407,"offset":2477}}}],"position":{"start":{"line":40,"column":1,"offset":2071},"end":{"line":40,"column":407,"offset":2477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是这个结果还是无法通过测试（后来成为了第二题的提交版本），报错的提示信息是使用了超过一次 3-量子比特门——这不是开玩笑吗？于是打开了官方提供的测试文件，发现测试代码计算 3-量子比特门的使用次数的时候，会把用户定义的 3-量子比特门的数量，和 ","position":{"start":{"line":42,"column":1,"offset":2479},"end":{"line":42,"column":125,"offset":2603}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CCNOT","position":{"start":{"line":42,"column":125,"offset":2603},"end":{"line":42,"column":132,"offset":2610}}}],"position":{"start":{"line":42,"column":125,"offset":2603},"end":{"line":42,"column":132,"offset":2610}}},{"type":"text","value":" 门的数量做加法，于是看文档，我们定义的那个 “用一个 3-bit 门判断2、3号比特是否相同，并输出到结果位上” 的操作和 ","position":{"start":{"line":42,"column":132,"offset":2610},"end":{"line":42,"column":195,"offset":2673}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CCNOT","position":{"start":{"line":42,"column":195,"offset":2673},"end":{"line":42,"column":202,"offset":2680}}}],"position":{"start":{"line":42,"column":195,"offset":2673},"end":{"line":42,"column":202,"offset":2680}}},{"type":"text","value":" 门是等价的，于是直接换用 ","position":{"start":{"line":42,"column":202,"offset":2680},"end":{"line":42,"column":216,"offset":2694}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CCNOT","position":{"start":{"line":42,"column":216,"offset":2694},"end":{"line":42,"column":223,"offset":2701}}}],"position":{"start":{"line":42,"column":216,"offset":2694},"end":{"line":42,"column":223,"offset":2701}}},{"type":"text","value":" 门，问题解决。","position":{"start":{"line":42,"column":223,"offset":2701},"end":{"line":42,"column":231,"offset":2709}}}],"position":{"start":{"line":42,"column":1,"offset":2479},"end":{"line":42,"column":231,"offset":2709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"i4"},"children":[{"type":"element","tagName":"a","properties":{"href":"#i4"},"children":[{"type":"text","value":"I.4.","position":{"start":{"line":44,"column":5,"offset":2715},"end":{"line":44,"column":9,"offset":2719}}}]}],"position":{"start":{"line":44,"column":1,"offset":2711},"end":{"line":44,"column":9,"offset":2719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第四题看起来复杂，但是可以分成三个部分：","position":{"start":{"line":46,"column":1,"offset":2721},"end":{"line":46,"column":21,"offset":2741}}}],"position":{"start":{"line":46,"column":1,"offset":2721},"end":{"line":46,"column":21,"offset":2741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"找出图中所有的三角形，确定每个三角形的三条边，这一步完全可以用经典算法完成；","position":{"start":{"line":48,"column":4,"offset":2746},"end":{"line":48,"column":42,"offset":2784}}}],"position":{"start":{"line":48,"column":1,"offset":2743},"end":{"line":48,"column":42,"offset":2784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"创建一个和三角形相同数量的量子比特数列，对每个三角形，把三条边直接带入第二/三题的操作里，结果输入创建的量子比特列中；","position":{"start":{"line":49,"column":4,"offset":2788},"end":{"line":49,"column":63,"offset":2847}}}],"position":{"start":{"line":49,"column":1,"offset":2785},"end":{"line":49,"column":63,"offset":2847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"判断量子比特列是否全为 ","position":{"start":{"line":50,"column":4,"offset":2851},"end":{"line":50,"column":16,"offset":2863}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true","position":{"start":{"line":50,"column":16,"offset":2863},"end":{"line":50,"column":22,"offset":2869}}}],"position":{"start":{"line":50,"column":16,"offset":2863},"end":{"line":50,"column":22,"offset":2869}}},{"type":"text","value":"，结果输出到整个程序的结果位上。","position":{"start":{"line":50,"column":22,"offset":2869},"end":{"line":50,"column":38,"offset":2885}}}],"position":{"start":{"line":50,"column":1,"offset":2848},"end":{"line":50,"column":38,"offset":2885}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":2743},"end":{"line":50,"column":38,"offset":2885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第一步由女朋友来想我来写（毕竟只有一台电脑有开发环境），难点在于：","position":{"start":{"line":52,"column":1,"offset":2887},"end":{"line":52,"column":34,"offset":2920}}}],"position":{"start":{"line":52,"column":1,"offset":2887},"end":{"line":52,"column":34,"offset":2920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Q# 语法改变数列值的语法十分难受\n","position":{"start":{"line":54,"column":4,"offset":2925},"end":{"line":55,"column":1,"offset":2943}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mutable points = [-1,-1,-1,-1,-1,-1];","position":{"start":{"line":55,"column":9,"offset":2951},"end":{"line":55,"column":48,"offset":2990}}}],"position":{"start":{"line":55,"column":9,"offset":2951},"end":{"line":55,"column":48,"offset":2990}}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":48,"offset":2990},"end":{"line":56,"column":1,"offset":2991}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"set points w/=0..1 <- [0,1];","position":{"start":{"line":56,"column":9,"offset":2999},"end":{"line":56,"column":39,"offset":3029}}}],"position":{"start":{"line":56,"column":9,"offset":2999},"end":{"line":56,"column":39,"offset":3029}}},{"type":"text","value":"；","position":{"start":{"line":56,"column":39,"offset":3029},"end":{"line":56,"column":40,"offset":3030}}}],"position":{"start":{"line":54,"column":1,"offset":2922},"end":{"line":56,"column":40,"offset":3030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"作为一种强类型语言对元组和数列的区分让我这个 python 选手十分蛋疼\n","position":{"start":{"line":57,"column":4,"offset":3034},"end":{"line":58,"column":1,"offset":3071}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(Int,Int)","position":{"start":{"line":58,"column":9,"offset":3079},"end":{"line":58,"column":20,"offset":3090}}}],"position":{"start":{"line":58,"column":9,"offset":3079},"end":{"line":58,"column":20,"offset":3090}}},{"type":"text","value":"/","position":{"start":{"line":58,"column":20,"offset":3090},"end":{"line":58,"column":21,"offset":3091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Int[]","position":{"start":{"line":58,"column":21,"offset":3091},"end":{"line":58,"column":28,"offset":3098}}}],"position":{"start":{"line":58,"column":21,"offset":3091},"end":{"line":58,"column":28,"offset":3098}}},{"type":"text","value":"；","position":{"start":{"line":58,"column":28,"offset":3098},"end":{"line":58,"column":29,"offset":3099}}}],"position":{"start":{"line":57,"column":1,"offset":3031},"end":{"line":58,"column":29,"offset":3099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"求数列中不重复的值居然不排序不能给出正确结果。\n","position":{"start":{"line":59,"column":4,"offset":3103},"end":{"line":60,"column":1,"offset":3127}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let uniquePoints = Arrays.Unique(EqualI,Arrays.Sorted(LessThanI,points));","position":{"start":{"line":60,"column":9,"offset":3135},"end":{"line":60,"column":84,"offset":3210}}}],"position":{"start":{"line":60,"column":9,"offset":3135},"end":{"line":60,"column":84,"offset":3210}}}],"position":{"start":{"line":59,"column":1,"offset":3100},"end":{"line":60,"column":84,"offset":3210}}},{"type":"text","value":"\n"}],"position":{"start":{"line":54,"column":1,"offset":2922},"end":{"line":60,"column":84,"offset":3210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这也是唯一一段用上了 ","position":{"start":{"line":62,"column":1,"offset":3212},"end":{"line":62,"column":12,"offset":3223}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Message()","position":{"start":{"line":62,"column":12,"offset":3223},"end":{"line":62,"column":23,"offset":3234}}}],"position":{"start":{"line":62,"column":12,"offset":3223},"end":{"line":62,"column":23,"offset":3234}}},{"type":"text","value":" 函数来 debug 的部分。","position":{"start":{"line":62,"column":23,"offset":3234},"end":{"line":62,"column":38,"offset":3249}}}],"position":{"start":{"line":62,"column":1,"offset":3212},"end":{"line":62,"column":38,"offset":3249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"第三步就重新回到了第三题暂时敷衍掉的问题：对于在操作中创建的 ","position":{"start":{"line":64,"column":1,"offset":3251},"end":{"line":64,"column":32,"offset":3282}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Qubit()","position":{"start":{"line":64,"column":32,"offset":3282},"end":{"line":64,"column":41,"offset":3291}}}],"position":{"start":{"line":64,"column":32,"offset":3282},"end":{"line":64,"column":41,"offset":3291}}},{"type":"text","value":"/","position":{"start":{"line":64,"column":41,"offset":3291},"end":{"line":64,"column":42,"offset":3292}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Qubit[]","position":{"start":{"line":64,"column":42,"offset":3292},"end":{"line":64,"column":51,"offset":3301}}}],"position":{"start":{"line":64,"column":42,"offset":3292},"end":{"line":64,"column":51,"offset":3301}}},{"type":"text","value":"，","position":{"start":{"line":64,"column":51,"offset":3301},"end":{"line":64,"column":52,"offset":3302}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reset()","position":{"start":{"line":64,"column":52,"offset":3302},"end":{"line":64,"column":61,"offset":3311}}}],"position":{"start":{"line":64,"column":52,"offset":3302},"end":{"line":64,"column":61,"offset":3311}}},{"type":"text","value":"/","position":{"start":{"line":64,"column":61,"offset":3311},"end":{"line":64,"column":62,"offset":3312}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ResetAll()","position":{"start":{"line":64,"column":62,"offset":3312},"end":{"line":64,"column":74,"offset":3324}}}],"position":{"start":{"line":64,"column":62,"offset":3312},"end":{"line":64,"column":74,"offset":3324}}},{"type":"text","value":" 函数相当于测量，会破坏操作的 adjoint 性质，不测量则（当时的我）没有办法将这个量子比特列复原。","position":{"start":{"line":64,"column":74,"offset":3324},"end":{"line":64,"column":126,"offset":3376}}}],"position":{"start":{"line":64,"column":1,"offset":3251},"end":{"line":64,"column":126,"offset":3376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"此时已经午夜，我来解决这个问题，女朋友去看第二部分，后来她看完 Grover‘s 算法的教程去睡了，我还在想这个问题。直接把报错信息复制到 Google，找到了一个","position":{"start":{"line":66,"column":1,"offset":3378},"end":{"line":66,"column":83,"offset":3460}}},{"type":"element","tagName":"a","properties":{"href":""},"children":[{"type":"text","value":"论坛里的问答","position":{"start":{"line":66,"column":84,"offset":3461},"end":{"line":66,"column":90,"offset":3467}}}],"position":{"start":{"line":66,"column":83,"offset":3460},"end":{"line":66,"column":93,"offset":3470}}},{"type":"text","value":"，好像是去年微软在其他地方举办的类似活动的。里面只是提到要“uncompute the qubits”，给出的例子用的是旧版本 Q# 的语法，","position":{"start":{"line":66,"column":93,"offset":3470},"end":{"line":66,"column":164,"offset":3541}}},{"type":"element","tagName":"del","properties":{},"children":[{"type":"text","value":"没法直接抄","position":{"start":{"line":66,"column":166,"offset":3543},"end":{"line":66,"column":171,"offset":3548}}}],"position":{"start":{"line":66,"column":164,"offset":3541},"end":{"line":66,"column":173,"offset":3550}}},{"type":"text","value":" 。最终不抱希望地把之前对那个 ","position":{"start":{"line":66,"column":173,"offset":3550},"end":{"line":66,"column":189,"offset":3566}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Qubit[]","position":{"start":{"line":66,"column":189,"offset":3566},"end":{"line":66,"column":198,"offset":3575}}}],"position":{"start":{"line":66,"column":189,"offset":3566},"end":{"line":66,"column":198,"offset":3575}}},{"type":"text","value":" 做过的循环顺序倒过来重做了一遍，诶，您猜怎么着，还是没通过！绝望了！正序重做一边，诶，通过了！为什么为什么为什么？到现在也没弄清楚。","position":{"start":{"line":66,"column":198,"offset":3575},"end":{"line":66,"column":265,"offset":3642}}}],"position":{"start":{"line":66,"column":1,"offset":3378},"end":{"line":66,"column":265,"offset":3642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"ii"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ii"},"children":[{"type":"text","value":"II.","position":{"start":{"line":68,"column":5,"offset":3648},"end":{"line":68,"column":8,"offset":3651}}}]}],"position":{"start":{"line":68,"column":1,"offset":3644},"end":{"line":68,"column":8,"offset":3651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然后把女朋友叫醒，让她来讲一讲 Grover's 算法。听完之后我的理解是，对于一个 ","position":{"start":{"line":70,"column":1,"offset":3653},"end":{"line":70,"column":44,"offset":3696}}},{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"f"}]},{"type":"element","tagName":"mo","properties":{},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"mo","properties":{"separator":"true"},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"msup","properties":{},"children":[{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"N"}]}]},{"type":"element","tagName":"mo","properties":{},"children":[{"type":"text","value":"→"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"mo","properties":{"separator":"true"},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":")"}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"f:(0,1)^N \\rarr (0,1)"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.8889em;vertical-align:-0.1944em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.10764em;"},"children":[{"type":"text","value":"f"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mrel"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]}]},{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:1.0913em;vertical-align:-0.25em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mopen"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["mpunct"]},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.1667em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["msupsub"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist-t"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist-r"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist"],"style":"height:0.8413em;"},"children":[{"type":"element","tagName":"span","properties":{"style":"top:-3.063em;margin-right:0.05em;"},"children":[{"type":"element","tagName":"span","properties":{"className":["pstrut"],"style":"height:2.7em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["sizing","reset-size6","size3","mtight"]},"children":[{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal","mtight"],"style":"margin-right:0.10903em;"},"children":[{"type":"text","value":"N"}]}]}]}]}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mrel"]},"children":[{"type":"text","value":"→"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]}]},{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:1em;vertical-align:-0.25em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mopen"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["mpunct"]},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.1667em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":" 的函数，这个算法可以大概率地找到一个解 ","position":{"start":{"line":70,"column":69,"offset":3721},"end":{"line":70,"column":90,"offset":3742}}},{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"S"}]},{"type":"element","tagName":"mo","properties":{},"children":[{"type":"text","value":"∈"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"mo","properties":{"separator":"true"},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"msup","properties":{},"children":[{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"N"}]}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"S\\in(0,1)^N"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.7224em;vertical-align:-0.0391em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.05764em;"},"children":[{"type":"text","value":"S"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mrel"]},"children":[{"type":"text","value":"∈"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]}]},{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:1.0913em;vertical-align:-0.25em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mopen"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["mpunct"]},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.1667em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["msupsub"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist-t"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist-r"]},"children":[{"type":"element","tagName":"span","properties":{"className":["vlist"],"style":"height:0.8413em;"},"children":[{"type":"element","tagName":"span","properties":{"style":"top:-3.063em;margin-right:0.05em;"},"children":[{"type":"element","tagName":"span","properties":{"className":["pstrut"],"style":"height:2.7em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["sizing","reset-size6","size3","mtight"]},"children":[{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal","mtight"],"style":"margin-right:0.10903em;"},"children":[{"type":"text","value":"N"}]}]}]}]}]}]}]}]}]}]}]},{"type":"text","value":" 满足 ","position":{"start":{"line":70,"column":105,"offset":3757},"end":{"line":70,"column":109,"offset":3761}}},{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"f"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"S"}]},{"type":"element","tagName":"mo","properties":{"stretchy":"false"},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"mo","properties":{},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"mn","properties":{},"children":[{"type":"text","value":"1"}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"f(S)=1"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:1em;vertical-align:-0.25em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.10764em;"},"children":[{"type":"text","value":"f"}]},{"type":"element","tagName":"span","properties":{"className":["mopen"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.05764em;"},"children":[{"type":"text","value":"S"}]},{"type":"element","tagName":"span","properties":{"className":["mclose"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mrel"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["mspace"],"style":"margin-right:0.2778em;"},"children":[]}]},{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.6444em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord"]},"children":[{"type":"text","value":"1"}]}]}]}]},{"type":"text","value":".","position":{"start":{"line":70,"column":119,"offset":3771},"end":{"line":70,"column":120,"offset":3772}}}],"position":{"start":{"line":70,"column":1,"offset":3653},"end":{"line":70,"column":121,"offset":3773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"至于这个函数 ","position":{"start":{"line":72,"column":1,"offset":3775},"end":{"line":72,"column":8,"offset":3782}}},{"type":"element","tagName":"span","properties":{"className":["katex"]},"children":[{"type":"element","tagName":"span","properties":{"className":["katex-mathml"]},"children":[{"type":"element","tagName":"math","properties":{"xmlns":"http://www.w3.org/1998/Math/MathML"},"children":[{"type":"element","tagName":"semantics","properties":{},"children":[{"type":"element","tagName":"mrow","properties":{},"children":[{"type":"element","tagName":"mi","properties":{},"children":[{"type":"text","value":"f"}]}]},{"type":"element","tagName":"annotation","properties":{"encoding":"application/x-tex"},"children":[{"type":"text","value":"f"}]}]}]}]},{"type":"element","tagName":"span","properties":{"className":["katex-html"],"ariaHidden":"true"},"children":[{"type":"element","tagName":"span","properties":{"className":["base"]},"children":[{"type":"element","tagName":"span","properties":{"className":["strut"],"style":"height:0.8889em;vertical-align:-0.1944em;"},"children":[]},{"type":"element","tagName":"span","properties":{"className":["mord","mathnormal"],"style":"margin-right:0.10764em;"},"children":[{"type":"text","value":"f"}]}]}]}]},{"type":"text","value":"，之前每一道题都是这样一个函数，当时已经夜里两三点了，实在是没时间再想一个新函数了，于是我们直接就拿复杂度最高的第4题来换个皮。换个什么皮呢？为了这个活动翘掉了这周的","position":{"start":{"line":72,"column":13,"offset":3787},"end":{"line":72,"column":96,"offset":3870}}},{"type":"element","tagName":"a","properties":{"href":"barrier-forward-keyboard-mouse-to-another-computer"},"children":[{"type":"text","value":"《文明6》联机游戏","position":{"start":{"line":72,"column":97,"offset":3871},"end":{"line":72,"column":106,"offset":3880}}}],"position":{"start":{"line":72,"column":96,"offset":3870},"end":{"line":72,"column":159,"offset":3933}}},{"type":"text","value":"，然后之前看 YouTuber ","position":{"start":{"line":72,"column":159,"offset":3933},"end":{"line":72,"column":175,"offset":3949}}},{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/user/PotatoMcWhiskey"},"children":[{"type":"text","value":"\"PotatoMcWhiskey\"","position":{"start":{"line":72,"column":176,"offset":3950},"end":{"line":72,"column":193,"offset":3967}}}],"position":{"start":{"line":72,"column":175,"offset":3949},"end":{"line":72,"column":240,"offset":4014}}},{"type":"text","value":"介绍过","position":{"start":{"line":72,"column":240,"offset":4014},"end":{"line":72,"column":243,"offset":4017}}},{"type":"element","tagName":"a","properties":{"href":"https://steamcommunity.com/sharedfiles/filedetails/?id=1753346735&searchtext=diplomacy"},"children":[{"type":"text","value":"一个 Mod","position":{"start":{"line":72,"column":244,"offset":4018},"end":{"line":72,"column":250,"offset":4024}}}],"position":{"start":{"line":72,"column":243,"offset":4017},"end":{"line":72,"column":339,"offset":4113}}},{"type":"text","value":"，里面可以将文明之间的外交关系可视化为无向图，所以，诶嘿嘿嘿……","position":{"start":{"line":72,"column":339,"offset":4113},"end":{"line":72,"column":371,"offset":4145}}}],"position":{"start":{"line":72,"column":1,"offset":3775},"end":{"line":72,"column":371,"offset":4145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"女朋友写完文稿就睡了，我把文稿改了改，然后和官方对 Grover's 算法的实现缝合了一下。提交的时候，距离截止时间大约还有一个小时。","position":{"start":{"line":74,"column":1,"offset":4147},"end":{"line":74,"column":68,"offset":4214}}}],"position":{"start":{"line":74,"column":1,"offset":4147},"end":{"line":74,"column":68,"offset":4214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"四"},"children":[{"type":"element","tagName":"a","properties":{"href":"#四"},"children":[{"type":"text","value":"四","position":{"start":{"line":77,"column":4,"offset":4220},"end":{"line":77,"column":5,"offset":4221}}}]}],"position":{"start":{"line":77,"column":1,"offset":4217},"end":{"line":77,"column":5,"offset":4221}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"之后的周五的时候收到了消息，我们得奖了。优胜者一共6支队伍。从活动结束之后公布的结果看，要想成为优胜，第一部分的4道题必须全部正确，然后第二部分得分在 8-20 分之间。","position":{"start":{"line":79,"column":1,"offset":4223},"end":{"line":79,"column":86,"offset":4308}}}],"position":{"start":{"line":79,"column":1,"offset":4223},"end":{"line":79,"column":86,"offset":4308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个成绩是个什么水平？截止到写这篇文章的此刻，官方题目的 Github 仓库有 80 份 fork，有少数几份 fork 是针对已有的 fork，有可能来自同一队伍，再考虑到可能有些队伍的不同成员分别 fork 了主项目，所以估测 60 支队伍应该是有的，官方给出 6 组优胜者这么一个不零不整的数字，个人猜测是取了前 10%？据主办方在 discord 提供的消息，有一支队伍的第二题成绩高于8分，但是前面没有全对，所以没有得奖；其余队伍的第二题都不超过6分；并不清楚有多少队伍第一题全对，主办方也不打算公布各队的详细成绩。","position":{"start":{"line":81,"column":1,"offset":4310},"end":{"line":81,"column":264,"offset":4573}}}],"position":{"start":{"line":81,"column":1,"offset":4310},"end":{"line":81,"column":264,"offset":4573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这大约说明活动的参与者，其成绩基本上符合二八原理——少数人得到的分数，占据了所有参赛者全部得分的大多数。","position":{"start":{"line":83,"column":1,"offset":4575},"end":{"line":83,"column":53,"offset":4627}}}],"position":{"start":{"line":83,"column":1,"offset":4575},"end":{"line":83,"column":53,"offset":4627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"参加过这个活动之后，我们一下子就从量子计算小白摇身一变，成了优秀人才了？实际上，直到现在，我还是搞不太清楚 oracle 到底是个什么东西，女朋友对量子计算的理解估计比我还差（逃）。美国哲学教授约翰·希尔勒提出过一个叫做","position":{"start":{"line":85,"column":1,"offset":4629},"end":{"line":85,"column":111,"offset":4739}}},{"type":"element","tagName":"a","properties":{"href":"https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%88%BF%E9%97%B4"},"children":[{"type":"text","value":"“中文房间”","position":{"start":{"line":85,"column":112,"offset":4740},"end":{"line":85,"column":118,"offset":4746}}}],"position":{"start":{"line":85,"column":111,"offset":4739},"end":{"line":85,"column":187,"offset":4815}}},{"type":"text","value":"的思想实验，说一个只会说英语的人被关在一间满是汉字字块的房间里，不断从房间外收到写着中文问题的纸条。房间里有一本英文写成的手册，指示如何对输入的汉字进行回复。凭借这个手册，房中人可以在完全不会中文的情况下，与外界进行交流。希尔勒类比外人、房中人、手册，与程序员、计算机、计算机程序，认为房中人不会中文，进而论证计算机不可能通过程序来获得理解力。","position":{"start":{"line":85,"column":187,"offset":4815},"end":{"line":85,"column":359,"offset":4987}}}],"position":{"start":{"line":85,"column":1,"offset":4629},"end":{"line":85,"column":359,"offset":4987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"希尔勒教授想论证啥是他的事，我倒是对这个类比的本体很感兴趣——如果一个人已经能够熟练运用那个英文写成的汉字使用手册了，我们还能不能，能在多大程度上说他不懂中文呢？就说一般的程序员，工作时间能保证不看 stack overflow 的有几个，所以他们都不会编程？反对中文房间思想实验结论的人，很多都支持用图灵测试超过某一阈值来作为有智能的标志，但是我觉得，智能本身就不是一个非有即无的性质，而是一个连续分布，没有上限的谱。","position":{"start":{"line":87,"column":1,"offset":4989},"end":{"line":87,"column":211,"offset":5199}}}],"position":{"start":{"line":87,"column":1,"offset":4989},"end":{"line":87,"column":211,"offset":5199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另一方面，得分名列前茅，和能力名列前茅，又是两回事。本科的时候做建模美赛，我们学校数理金融的一个学神前一年成绩“略有不佳”，没拿到 M 奖，于是我们那年找到了我和风神俩学物理的，准备再次冲击荣誉。巧了这一年的题目正好有一道浴缸放热水的问题，这不就是物理中的扩散方程嘛，那得奖还不是手拿把掐的？结果呢，H 奖，丢人丢到姥姥家去了。合着我们两个成绩还都不错的物理专业学生，在自己的专业里，打不过那么多同龄的非物理专业本科生？","position":{"start":{"line":89,"column":1,"offset":5201},"end":{"line":89,"column":211,"offset":5411}}}],"position":{"start":{"line":89,"column":1,"offset":5201},"end":{"line":89,"column":211,"offset":5411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"两相对照之下，我想起了很久之前看过的一篇博客文章，文章以一个问题开头——“熟练”的反义词是什么？当然说“生疏”这文章就写不下去了，作者给出的答案是——“应变”。熟练意味着，你对于问题、选项、最优解已经有了充分且完备的了解，只需要重复自己的经验就可以了，但是在自己不了解的战场上，经验至少不能直接派上用场，这时候，脱离具体环境的应变能力就成了生存和取胜的关键，我们当时的专业水平高不成低不就，反而成了掣肘我们的桎梏。","position":{"start":{"line":91,"column":1,"offset":5413},"end":{"line":91,"column":208,"offset":5620}}}],"position":{"start":{"line":91,"column":1,"offset":5413},"end":{"line":91,"column":208,"offset":5620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"读到这篇文章的时候，我被这种剑走偏锋的观点击中了，从那以后，一直都在注意培养自己的应变能力——如果明天我所研究的这个领域消失了，我还有没有谋生的能力？如果自己正在解决的问题被上帝或者 Matrix 作弊修改成一个新问题，我能不能看到连作弊都改动不了的题眼，然后一击命中？在凌晨两三点的时候，我也没有放弃解决第一题第 4 问的 Qubit 复位问题，虽然当时我并不知道评分标准，但是内心非常确定，这个问题必须解决。","position":{"start":{"line":93,"column":1,"offset":5622},"end":{"line":93,"column":207,"offset":5828}}}],"position":{"start":{"line":93,"column":1,"offset":5622},"end":{"line":93,"column":207,"offset":5828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以上两次活动的成绩差别，也可以从得奖难度来看。建模美赛的 M 奖，得奖率应该远小于 10%，即便考虑到二八原理中绝大多数参赛者都只是凑数，而且样本越大凑数者越多，这个差距也还是无法忽略。我们能够得奖，和量子计算领域才刚刚萌芽，连“方兴未艾”都算不上，因此竞争并不激烈也有很大关系，应变能力是切入这些蓝海领域的必要条件，是躲避内卷的利器。我们现在对“内卷”人人喊打，但是培养应变能力是需要牺牲相当多本可以精进专业的时间和精力的。当社会中的大多数人向往着逃离内卷的时候，真的不需要有人咬定一个领域不断深耕？我现在的选择真的正确吗？我不知道。我是打算留在当前的领域继续熟练，还是换个领域应变，抑或是虚掷 PhD 光阴换一张工作签证？我也不知道。","position":{"start":{"line":95,"column":1,"offset":5830},"end":{"line":95,"column":320,"offset":6149}}}],"position":{"start":{"line":95,"column":1,"offset":5830},"end":{"line":95,"column":320,"offset":6149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"五"},"children":[{"type":"element","tagName":"a","properties":{"href":"#五"},"children":[{"type":"text","value":"五","position":{"start":{"line":97,"column":4,"offset":6154},"end":{"line":97,"column":5,"offset":6155}}}]}],"position":{"start":{"line":97,"column":1,"offset":6151},"end":{"line":97,"column":5,"offset":6155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"哦对了，我有女朋友了，而且在 hackathon 的过程中把女朋友惹哭了……问题是我现在已经不记得具体是怎么把人家惹哭的了，连道歉都显得很不诚恳……我确实是一个不擅长合作的人，或者说跟别人说话的我，和想问题的我并不是同一个人，之前本科 CUPT 和建模的时候也一样，需要和人打交道的时候就几乎干不了活儿，严重的时候自己就退化成了鼓励师……总之一切错误在我，希望她不要记仇…… ","position":{"start":{"line":99,"column":1,"offset":6157},"end":{"line":99,"column":189,"offset":6345}}},{"type":"text","value":"（。・＿・。）ﾉ","position":{"start":{"line":99,"column":193,"offset":6349},"end":{"line":99,"column":201,"offset":6357}}}],"position":{"start":{"line":99,"column":1,"offset":6157},"end":{"line":99,"column":201,"offset":6357}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":100,"column":1,"offset":6358}}}},"__N_SSG":true}